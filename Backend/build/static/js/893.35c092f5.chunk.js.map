{"version":3,"file":"static/js/893.35c092f5.chunk.js","mappings":"gOAqKe,SAASA,EAAOC,GAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,YAAEC,GAAaH,EAC9D,MAAOI,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KAE7CC,EAAAA,EAAAA,YAAU,KACR,GAAIL,aAAiBM,OAASC,MAAMP,EAAMQ,WACxCL,EAAcM,EAAWT,SACpB,GAAqB,kBAAVA,EAAoB,CACpC,MAAMU,EAAO,IAAIJ,KAAKN,GACtBG,EAAcM,EAAWC,GAC3B,MACEP,EAAc,GAChB,GACC,CAACH,IAEJ,MA4CMS,EAAcC,IAAU,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAC3B,MAAMC,EAAU,OAAJN,QAAI,IAAJA,GAAe,QAAXC,EAAJD,EAAMO,iBAAS,IAAAN,GAAY,QAAZC,EAAfD,EAAiBO,kBAAU,IAAAN,OAAvB,EAAJA,EAA6BO,SAAS,EAAG,KAC/CC,EAA6B,QAAxBP,GAAQ,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMW,YAAa,SAAC,IAAAR,GAAa,QAAbC,EAArBD,EAAwBK,kBAAU,IAAAJ,OAAb,EAArBA,EAAoCK,SAAS,EAAG,KACxDG,EAAW,OAAJZ,QAAI,IAAJA,GAAmB,QAAfK,EAAJL,EAAMa,qBAAa,IAAAR,OAAf,EAAJA,EAAqBG,WAClC,MAAM,GAANM,OAAUR,EAAG,KAAAQ,OAAIJ,EAAK,KAAAI,OAAIF,EAAI,EAGhC,OACEG,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACL5B,SAvDqB6B,IAAO,IAADC,EAAAC,EAC/B,IAAI5B,EAAqB,QAAX2B,EAAGD,EAAEG,cAAM,IAAAF,OAAA,EAARA,EAAU7B,MACvBgC,EAAiB,GAErB9B,EAAuB,QAAb4B,EAAG5B,SAAU,IAAA4B,OAAA,EAAVA,EAAYG,QAAQ,MAAO,IAExC,IAAK,IAAIC,EAAI,EAAGA,GAAc,QAAbC,EAAGjC,SAAU,IAAAiC,OAAA,EAAVA,EAAYC,QAAQF,IAAK,CAAC,IAADC,EACjC,IAAND,GAAiB,IAANA,IACbF,GAAkB,KAEpBA,GAAkB9B,EAAWgC,EAC/B,CAEA/B,EAAc6B,EAAe,EA2CzBK,OAxCoBT,IAAO,IAADU,EAC9B,MAAMC,EAAkB,OAAVrC,QAAU,IAAVA,GAAsB,QAAZoC,EAAVpC,EAAYsC,MAAM,YAAI,IAAAF,OAAZ,EAAVA,EAAwBG,KAAKC,GAASC,SAASD,EAAM,MACnE,IAAK1B,EAAKI,EAAOE,GAAQiB,EACzB,GAAsB,KAAb,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOH,QAAc,CACnBd,EAAO,IACTA,GAAQ,KACCA,GAAQ,KAAQA,IAAQ,IAAIhB,MAAOiB,gBAE5CD,GAAO,IAAIhB,MAAOiB,eAGpB,MAAMqB,EAAU,IAAItC,KAAKgB,EAAMF,EAAQ,EAAGJ,GAC1CjB,EAAS6C,EACX,MAAO,GAAsB,KAAb,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOH,QAAc,CAC9B,MAAMd,EAAOiB,EAAM,GACnB,GAAIjB,EAAO,IAAK,CACd,IAAIuB,EAEFA,EADEvB,EAAO,GACEA,EAAO,IAEPA,EAAO,KAEpB,MAAMsB,EAAU,IAAItC,KAAKuC,EAAU,EAAG,GACtC9C,EAAS6C,EACX,CACF,GAgBI5C,MAAOE,EACPD,YAAaA,EACb6C,UAAU,kBAIlB,C,6JCvOA,MAAMC,EAAWA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACrB,MAAOC,EAAYC,IAAiBrD,EAAAA,EAAAA,UAAS,IACvCsD,GAAWC,EAAAA,EAAAA,MAIXC,EAASC,6BAMRC,EAAiBC,IAAsB3D,EAAAA,EAAAA,UAAS,CACrD4D,oBAAoB,EACpBC,wBAAyBC,QAAkB,OAAVV,QAAU,IAAVA,GAA2B,QAAjBR,EAAVQ,EAAYM,uBAAe,IAAAd,OAAjB,EAAVA,EAA6BiB,yBAC9DE,oBAAqBC,MAAMC,KAAK,CAAEjC,OAXd,IAWuC,SAAAkC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAO,CAChEC,sBAAiC,OAAVxB,QAAU,IAAVA,GAAsB,QAAZc,EAAVd,EAAYyB,kBAAU,IAAAX,GAAgB,QAAhBC,EAAtBD,EAAwBY,sBAAc,IAAAX,OAA5B,EAAVA,EAAwC9B,KAAK0C,GAC3DA,EAAKC,mBAEdC,sBAAiC,OAAV7B,QAAU,IAAVA,GAAsB,QAAZgB,EAAVhB,EAAYyB,kBAAU,IAAAT,GAAgB,QAAhBC,EAAtBD,EAAwBU,sBAAc,IAAAT,OAA5B,EAAVA,EAAwChC,KAAK0C,GAC3DA,EAAKG,mBAEdC,wBAAmC,OAAV/B,QAAU,IAAVA,GAAsB,QAAZkB,EAAVlB,EAAYyB,kBAAU,IAAAP,GAAgB,QAAhBC,EAAtBD,EAAwBQ,sBAAc,IAAAP,OAA5B,EAAVA,EAAwClC,KAAK0C,GAC7DA,EAAKK,qBAEdC,uBAAkC,OAAVjC,QAAU,IAAVA,GAAsB,QAAZoB,EAAVpB,EAAYyB,kBAAU,IAAAL,GAAgB,QAAhBC,EAAtBD,EAAwBM,sBAAc,IAAAL,OAA5B,EAAVA,EAAwCpC,KAAK0C,GAC5DA,EAAKO,oBAEdC,sBAAiC,OAAVnC,QAAU,IAAVA,GAAsB,QAAZsB,EAAVtB,EAAYyB,kBAAU,IAAAH,GAAgB,QAAhBC,EAAtBD,EAAwBI,sBAAc,IAAAH,OAA5B,EAAVA,EAAwCtC,KAAK0C,GAC3DA,EAAKS,mBAEf,OAGIC,EAAeC,IAAoB1F,EAAAA,EAAAA,UAAS,CACjD2F,kBAA4B,OAAVvC,QAAU,IAAVA,GAAyB,QAAfP,EAAVO,EAAYqC,qBAAa,IAAA5C,OAAf,EAAVA,EAA2B8C,mBAAoB,MAG5DC,EAAkBC,IAAuB7F,EAAAA,EAAAA,UAAS,CACvD8F,OAAiB,OAAV1C,QAAU,IAAVA,GAA4B,QAAlBN,EAAVM,EAAYwC,wBAAgB,IAAA9C,OAAlB,EAAVA,EAA8BgD,QAAS,GAC9CC,OAAiB,OAAV3C,QAAU,IAAVA,GAA4B,QAAlBL,EAAVK,EAAYwC,wBAAgB,IAAA7C,OAAlB,EAAVA,EAA8BgD,QAAS,GAC9CC,SAAmB,OAAV5C,QAAU,IAAVA,GAA4B,QAAlBJ,EAAVI,EAAYwC,wBAAgB,IAAA5C,OAAlB,EAAVA,EAA8BgD,UAAW,GAClDC,KAAe,OAAV7C,QAAU,IAAVA,GAA4B,QAAlBH,EAAVG,EAAYwC,wBAAgB,IAAA3C,OAAlB,EAAVA,EAA8BgD,MAAO,GAC1CC,KAAe,OAAV9C,QAAU,IAAVA,GAA4B,QAAlBF,EAAVE,EAAYwC,wBAAgB,IAAA1C,OAAlB,EAAVA,EAA8BgD,MAAO,GAC1CC,KAAe,OAAV/C,QAAU,IAAVA,GAA4B,QAAlBD,EAAVC,EAAYwC,wBAAgB,IAAAzC,OAAlB,EAAVA,EAA8BgD,MAAO,KAwBtCC,EAAmBA,CAAC5E,EAAG6E,KAC3B,MAAM,KAAEC,EAAI,MAAE1G,EAAK,KAAE2B,EAAI,QAAEgF,GAAY/E,EAAEG,QAAU,CAAC,EACpD6E,GAAeC,IACb,MAAMC,EAAwB,IAAID,EAAe3B,gBAEjD,GAAa,aAATvD,EACFmF,EAAsBL,GAAS,IAC1BK,EAAsBL,GACzB,CAACC,GAAOC,QAEL,GAAa,qBAATD,EAA6B,CACtC,MAAMxG,EAAaF,EAAMiC,QAAQ,WAAY,IACzC,uBAAuB8E,KAAK7G,KAC9B4G,EAAsBL,GAAS,IAC1BK,EAAsBL,GACzBb,iBAAkB1F,GAGxB,MAAO,GAAa,sBAATwG,EAA8B,CACvC,MAAMxG,EAAaF,EAAMiC,QAAQ,WAAY,IACzC,uBAAuB8E,KAAK7G,KAC9B4G,EAAsBL,GAAS,IAC1BK,EAAsBL,GACzBf,kBAAmBxF,GAGzB,MAEE4G,EAAsBL,GAAS,IAC1BK,EAAsBL,GACzB,CAACC,GAAO1G,GAGZ,MAAO,IAAK6G,EAAgB3B,eAAgB4B,EAAuB,GACnE,GA8BG7B,EAAY2B,IAAiBxG,EAAAA,EAAAA,UAAS,CAC3C8E,eAAgBd,MAAMC,KAAK,CAAEjC,OAjIT,IAiIkC,SAAA4E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAO,CAC3DrC,iBAA4B,OAAV5B,QAAU,IAAVA,GAAsB,QAAZwD,EAAVxD,EAAYyB,kBAAU,IAAA+B,GAAgB,QAAhBC,EAAtBD,EAAwB9B,sBAAc,IAAA+B,OAA5B,EAAVA,EAAwCxE,KAAK0C,GACtDA,EAAKC,mBAEdE,iBAA4B,OAAV9B,QAAU,IAAVA,GAAsB,QAAZ0D,EAAV1D,EAAYyB,kBAAU,IAAAiC,GAAgB,QAAhBC,EAAtBD,EAAwBhC,sBAAc,IAAAiC,OAA5B,EAAVA,EAAwC1E,KAAK0C,GACtDA,EAAKG,mBAEdE,mBAA8B,OAAVhC,QAAU,IAAVA,GAAsB,QAAZ4D,EAAV5D,EAAYyB,kBAAU,IAAAmC,GAAgB,QAAhBC,EAAtBD,EAAwBlC,sBAAc,IAAAmC,OAA5B,EAAVA,EAAwC5E,KAAK0C,GACxDA,EAAKK,qBAEdE,kBAA6B,OAAVlC,QAAU,IAAVA,GAAsB,QAAZ8D,EAAV9D,EAAYyB,kBAAU,IAAAqC,GAAgB,QAAhBC,EAAtBD,EAAwBpC,sBAAc,IAAAqC,OAA5B,EAAVA,EAAwC9E,KAAK0C,GACvDA,EAAKO,oBAEdE,iBAA4B,OAAVpC,QAAU,IAAVA,GAAsB,QAAZgE,EAAVhE,EAAYyB,kBAAU,IAAAuC,GAAgB,QAAhBC,EAAtBD,EAAwBtC,sBAAc,IAAAuC,OAA5B,EAAVA,EAAwChF,KAAK0C,GACtDA,EAAKS,mBAEf,MAqBG8B,EAAwBA,CAAC9F,EAAG6E,KAChC,MAAM,KAAEC,EAAI,MAAE1G,EAAK,KAAE2B,EAAI,QAAEgF,GAAY/E,EAAEG,QAAU,CAAC,EACpDgC,GAAoB4D,IAClB,MAAMC,EAA6B,IAAID,EAAoBxD,qBAE3D,GAAa,aAATxC,EACFiG,EAA2BnB,GAAS,IAC/BmB,EAA2BnB,GAC9B,CAACC,GAAOC,QAEL,GAAa,0BAATD,EAAkC,CAC3C,MAAMxG,EAAaF,EAAMiC,QAAQ,WAAY,IACzC,uBAAuB8E,KAAK7G,KAC9B0H,EAA2BnB,GAAS,IAC/BmB,EAA2BnB,GAC9Bd,sBAAuBzF,GAG7B,MAAO,GAAa,2BAATwG,EAAmC,CAC5C,MAAMxG,EAAaF,EAAMiC,QAAQ,WAAY,IACzC,uBAAuB8E,KAAK7G,KAC9B0H,EAA2BnB,GAAS,IAC/BmB,EAA2BnB,GAC9BhB,uBAAwBvF,GAG9B,CAEA,MAAO,IAAKyH,EAAqBxD,oBAAqByD,EAA4B,GAClF,EA+BEC,EAA0BjG,IAC9B,GAAIA,aAAatB,KAAM,CACrB,IAAIwH,EAAalG,EAAEL,cAAcL,WACjC,MAAMI,EAAOqB,SAASmF,EAAWC,UAAU,EAAG,GAAI,IAC9CD,EAAW1F,OAAS,IACtB0F,EAAaA,EAAWC,UAAU,EAAG,IAEvC,MAAMnF,EAAU,IAAItC,KAAK,GAADkB,OAAIF,EAAI,KAAAE,OAAII,EAAEP,WAAa,EAAC,KAAAG,OAAII,EAAEX,YAE1DgF,EAAoB,IAAKD,EAAkBK,IAAKzD,GAClD,MAAO,GAAIhB,EAAEG,OAAQ,CACnB,MAAM,KAAE2E,EAAI,MAAE1G,EAAK,KAAE2B,EAAI,QAAEgF,GAAY/E,EAAEG,OAEzC,GAAa,QAAT2E,GAA2B,SAAT/E,EAAiB,CACrC,MAAMzB,EAAaF,EAAMiC,QAAQ,iEAAiC,IAClEgE,EAAoB,IAAKD,EAAkBM,IAAKpG,GAClD,MACE+F,EAAoB,IAAKD,EAAkB,CAACU,GAAgB,aAAT/E,EAAsBgF,EAAU3G,GAEvF,WAAuBgI,IAAZpG,EAAE5B,MACXiG,EAAoB,IAAKD,EAAkBiC,SAAUrG,EAAE5B,QAEvDkI,QAAQC,MAAM,mDAChB,EAkBF,IAAIC,EAAMC,aAAaC,QAAQ,kBAC3BC,EAAUC,KAAKC,MAAML,GACzB,MAAMM,EAAO,CACXzD,aACAnB,kBACA+B,gBACAG,mBACA2C,YAAoB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,KA0QxB,OArEAvI,EAAAA,EAAAA,YAAU,KAAO,IAADwI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACdrD,EAAiB,CACfC,iBAA4B,OAAVvC,QAAU,IAAVA,GAAyB,QAAfqF,EAAVrF,EAAYqC,qBAAa,IAAAgD,OAAf,EAAVA,EAA2B9C,mBAE/CE,EAAoB,CAClBC,MAAiB,OAAV1C,QAAU,IAAVA,GAA4B,QAAlBsF,EAAVtF,EAAYwC,wBAAgB,IAAA8C,OAAlB,EAAVA,EAA8B5C,MACrCC,MAAiB,OAAV3C,QAAU,IAAVA,GAA4B,QAAlBuF,EAAVvF,EAAYwC,wBAAgB,IAAA+C,OAAlB,EAAVA,EAA8B5C,MACrCC,QAAmB,OAAV5C,QAAU,IAAVA,GAA4B,QAAlBwF,EAAVxF,EAAYwC,wBAAgB,IAAAgD,OAAlB,EAAVA,EAA8B5C,QACvCC,IAAe,OAAV7C,QAAU,IAAVA,GAA4B,QAAlByF,EAAVzF,EAAYwC,wBAAgB,IAAAiD,OAAlB,EAAVA,EAA8B5C,IACnCC,IAAe,OAAV9C,QAAU,IAAVA,GAA4B,QAAlB0F,EAAV1F,EAAYwC,wBAAgB,IAAAkD,OAAlB,EAAVA,EAA8B5C,IACnCC,IAAe,OAAV/C,QAAU,IAAVA,GAA4B,QAAlB2F,EAAV3F,EAAYwC,wBAAgB,IAAAmD,OAAlB,EAAVA,EAA8B5C,MAErCxC,GAAoBqF,IAAS,IACxBA,EAEHjF,oBAAqBC,MAAMC,KAAK,CAAEjC,OAtehB,IAseyC,CAACiH,EAAG5C,KAAK,CAClEtC,oBAAqBiF,EAAUjF,oBAAoB1B,KAAI,CAAC0C,EAAMsB,KAAK,IAAA6C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAM,IACpEjF,EACHH,uBACY,OAAVxB,QAAU,IAAVA,GAAsB,QAAZ8F,EAAV9F,EAAYyB,kBAAU,IAAAqE,GAAgB,QAAhBC,EAAtBD,EAAwBpE,sBAAc,IAAAqE,GAAS,QAATC,EAAtCD,EAAyC9C,UAAM,IAAA+C,OAArC,EAAVA,EAAiDpE,mBACjDD,EAAKH,sBACPK,uBACY,OAAV7B,QAAU,IAAVA,GAAsB,QAAZiG,EAAVjG,EAAYyB,kBAAU,IAAAwE,GAAgB,QAAhBC,EAAtBD,EAAwBvE,sBAAc,IAAAwE,GAAS,QAATC,EAAtCD,EAAyCjD,UAAM,IAAAkD,OAArC,EAAVA,EAAiDrE,mBACjDH,EAAKE,sBACPE,yBACY,OAAV/B,QAAU,IAAVA,GAAsB,QAAZoG,EAAVpG,EAAYyB,kBAAU,IAAA2E,GAAgB,QAAhBC,EAAtBD,EAAwB1E,sBAAc,IAAA2E,GAAS,QAATC,EAAtCD,EAAyCpD,UAAM,IAAAqD,OAArC,EAAVA,EAAiDtE,qBACjDL,EAAKI,wBACPE,wBACY,OAAVjC,QAAU,IAAVA,GAAsB,QAAZuG,EAAVvG,EAAYyB,kBAAU,IAAA8E,GAAgB,QAAhBC,EAAtBD,EAAwB7E,sBAAc,IAAA8E,GAAS,QAATC,EAAtCD,EAAyCvD,UAAM,IAAAwD,OAArC,EAAVA,EAAiDvE,oBACjDP,EAAKM,uBACPE,uBACY,OAAVnC,QAAU,IAAVA,GAAsB,QAAZ0G,EAAV1G,EAAYyB,kBAAU,IAAAiF,GAAgB,QAAhBC,EAAtBD,EAAwBhF,sBAAc,IAAAiF,GAAS,QAATC,EAAtCD,EAAyC1D,UAAM,IAAA2D,OAArC,EAAVA,EAAiDxE,mBACjDT,EAAKQ,sBACR,YAGLiB,GAAeC,IAAc,IACxBA,EACH3B,eAAgBd,MAAMC,KAAK,CAAEjC,OA7fX,IA6foC,CAACiH,EAAG5C,KAAK,IAAA4D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAM,CACnEpG,kBACY,OAAV5B,QAAU,IAAVA,GAAsB,QAAZ6G,EAAV7G,EAAYyB,kBAAU,IAAAoF,GAAgB,QAAhBC,EAAtBD,EAAwBnF,sBAAc,IAAAoF,GAAS,QAATC,EAAtCD,EAAyC7D,UAAM,IAAA8D,OAArC,EAAVA,EAAiDnF,oBACb,QAD6BoF,EACjE3D,EAAe3B,eAAeuB,UAAM,IAAA+D,OAAA,EAApCA,EAAsCpF,mBACtC,GACFE,kBACY,OAAV9B,QAAU,IAAVA,GAAsB,QAAZiH,EAAVjH,EAAYyB,kBAAU,IAAAwF,GAAgB,QAAhBC,EAAtBD,EAAwBvF,sBAAc,IAAAwF,GAAS,QAATC,EAAtCD,EAAyCjE,UAAM,IAAAkE,OAArC,EAAVA,EAAiDrF,oBACb,QAD6BsF,EACjE/D,EAAe3B,eAAeuB,UAAM,IAAAmE,OAAA,EAApCA,EAAsCtF,mBACtC,GACFE,oBACY,OAAVhC,QAAU,IAAVA,GAAsB,QAAZqH,EAAVrH,EAAYyB,kBAAU,IAAA4F,GAAgB,QAAhBC,EAAtBD,EAAwB3F,sBAAc,IAAA4F,GAAS,QAATC,EAAtCD,EAAyCrE,UAAM,IAAAsE,OAArC,EAAVA,EAAiDvF,sBACb,QAD+BwF,EACnEnE,EAAe3B,eAAeuB,UAAM,IAAAuE,OAAA,EAApCA,EAAsCxF,qBACtC,GACFE,mBACY,OAAVlC,QAAU,IAAVA,GAAsB,QAAZyH,EAAVzH,EAAYyB,kBAAU,IAAAgG,GAAgB,QAAhBC,EAAtBD,EAAwB/F,sBAAc,IAAAgG,GAAS,QAATC,EAAtCD,EAAyCzE,UAAM,IAAA0E,OAArC,EAAVA,EAAiDzF,qBACb,QAD8B0F,EAClEvE,EAAe3B,eAAeuB,UAAM,IAAA2E,OAAA,EAApCA,EAAsC1F,oBACtC,GACFE,kBACY,OAAVpC,QAAU,IAAVA,GAAsB,QAAZ6H,EAAV7H,EAAYyB,kBAAU,IAAAoG,GAAgB,QAAhBC,EAAtBD,EAAwBnG,sBAAc,IAAAoG,GAAS,QAATC,EAAtCD,EAAyC7E,UAAM,IAAA8E,OAArC,EAAVA,EAAiD3F,oBACb,QAD6B4F,EACjE3E,EAAe3B,eAAeuB,UAAM,IAAA+E,OAAA,EAApCA,EAAsC5F,mBACtC,GACH,OACA,GACF,CAACpC,EAphBkB,KAshBtBnD,EAAAA,EAAAA,YAAU,KAhYJ4E,EAAWC,eAAe9C,OAvJd,IAwJdwE,GAAe6E,IAAI,IACdA,EACHvG,eAAgB,IACXuG,EAAKvG,eACR,CACEE,iBAAkB,GAClBE,iBAAkB,GAClBE,mBAAoB,GACpBI,iBAAkB,SAmPV8F,WAChB,IACE,MAAMC,QAAeC,MAAM,GAADpK,OAAIoC,EAAM,2BAAApC,OAA0B+G,EAAQK,MAChEF,QAAaiD,EAAOE,OAC1BpI,EAAciF,EAChB,CAAE,MAAOP,GACPD,QAAQC,MAAM,kCAAmCA,EACnD,GAgIA2D,GAlVIhI,EAAgBK,oBAAoB/B,OAxMxB,IAyMd2B,GAAoB0H,IAAI,IACnBA,EACHtH,oBAAqB,IAChBsH,EAAKtH,oBACR,CACEa,sBAAuB,GACvBK,sBAAuB,GACvBE,wBAAyB,GACzBI,sBAAuB,GACvBF,uBAAwB,QAyUP,GACxB,KAEDsG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAtK,SAAA,EACED,EAAAA,EAAAA,KAACwK,EAAAA,QAAQ,KACTF,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,kBAAiBpB,SAAA,EAC9BqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,cAAapB,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBAENqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,iBAAgBpB,SAAA,EAC7BqK,EAAAA,EAAAA,MAAA,OAAArK,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,YAAWpB,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAIyK,MAAO,CAAEC,MAAO,WAAYzK,SAAC,0BACjCD,EAAAA,EAAAA,KAAA,KAAGqB,UAAU,GAAGoJ,MAAO,CAAEC,MAAO,WAAYzK,SAAC,oCAG7CqK,EAAAA,EAAAA,MAAA,OAAArK,SAAA,EACEqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,WAAUpB,SAAA,EACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAGPD,EAAAA,EAAAA,KAAA,OAAAC,SACGuD,EAAWC,gBACVD,EAAWC,eAAezC,KAAI,CAAC2J,EAAO3F,KACpCsF,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,MAAKpB,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAW6B,GAAM4E,EAAiB5E,EAAG6E,GACrCzG,MAAOoM,EAAMhH,iBACbsB,KAAK,mBACL/E,KAAK,OACL1B,YAAY,UACZ6C,UAAU,iBACVuJ,GAAE,SAAA7K,OAAWiF,GACb6F,UAAW,GACXC,UAAW,WAKnB9K,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAW6B,GAAM4E,EAAiB5E,EAAG6E,GACrCzG,MAAOoM,EAAM9G,iBACb3D,KAAK,OACL+E,KAAK,mBACLzG,YAAY,WACZ6C,UAAU,eACVuJ,GAAE,SAAA7K,OAAWiF,GAEb6F,UAAW,GACXC,UAAW,WAKnB9K,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,OAAMpB,UACnBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAW6B,GACT4E,EAAiB5E,EAAG6E,GAEtBzG,MAAOoM,EAAM5G,mBACb7D,KAAK,OACL+E,KAAK,qBACLzG,YAAY,UACZ6C,UAAU,eACVuJ,GAAE,WAAA7K,OAAaiF,YAMvBhF,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,OAAMpB,UACnBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SAUE1B,SAAW6B,GAAM4E,EAAiB5E,EAAG6E,GACrCzG,MAAOoM,EAAMxG,iBACbc,KAAK,mBACLzG,YAAY,eACZ6C,UAAU,eACVuJ,GAAE,SAAA7K,OAAWiF,GACb6F,UAAW,GACXC,UAAW,WAKnB9K,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,OAAMpB,UACnBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SAUE1B,SAAW6B,GACT4E,EAAiB5E,EAAG6E,GAEtBzG,MAAOoM,EAAM1G,kBACb/D,KAAK,OACL+E,KAAK,oBACLzG,YAAY,eACZ6C,UAAU,eACVuJ,GAAE,SAAA7K,OAAWiF,GACb6F,UAAW,GACXC,UAAW,YAtGK9F,gBAiHtChF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,YAAWpB,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAIyK,MAAO,CAAEC,MAAO,WAAYzK,SAAC,uBACjCqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,MAAKpB,SAAA,EAClBD,EAAAA,EAAAA,KAAA,SAAO+K,QAAQ,0BAA0B1J,UAAU,0BAAyBpB,SAAC,kDAG7EqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,iCAAgCpB,SAAA,EAC7CD,EAAAA,EAAAA,KAAA,SACEE,KAAK,WASL5B,SApQgB0M,KACpC1I,GAAoBqF,IAAS,IACxBA,EACHnF,yBAA0BmF,EAAUnF,wBACpCE,oBAAqBiF,EAAUnF,wBAC3BH,EAAgBK,oBAAoB1B,KAAKiG,IAAI,CAC3C1D,sBAAuB,GACvBK,sBAAuB,GACvBE,wBAAyB,GACzBI,sBAAuB,GACvBF,uBAAwB,OAE1BR,EAAWC,eAAezC,KAAKiG,IAAI,CACjC1D,sBAAuB0D,EAAKtD,iBAC5BC,sBAAuBqD,EAAKpD,iBAC5BC,wBAAyBmD,EAAKlD,mBAC9BG,sBAAuB+C,EAAK9C,iBAC5BH,uBAAwBiD,EAAKhD,yBAElC,EAkPiBiB,QAAS7C,EAAgBG,wBACzByC,KAAK,6BAEPjF,EAAAA,EAAAA,KAAA,kBAGJA,EAAAA,EAAAA,KAAA,KAAGqB,UAAU,GAAGoJ,MAAO,CAAEC,MAAO,WAAYzK,SAAC,oCAI7CqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,gBAAepB,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAGNoC,EAAgBK,qBACfL,EAAgBK,oBAAoB1B,KAAI,CAAC2J,EAAO3F,KAC9CsF,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,MAAKpB,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAW6B,GAAM8F,EAAsB9F,EAAG6E,GAC1CzG,MAAOoM,EAAMpH,sBACb0B,KAAK,wBACL/E,KAAK,OACL1B,YAAY,UACZ6C,UAAU,wBAKlBrB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAW6B,GAAM8F,EAAsB9F,EAAG6E,GAC1CzG,MAAOoM,EAAM/G,sBACbqB,KAAK,wBACL/E,KAAK,OACL1B,YAAY,WACZ6C,UAAU,wBAKlBrB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAW6B,GAAM8F,EAAsB9F,EAAG6E,GAC1CzG,MAAOoM,EAAM7G,wBACbmB,KAAK,0BACL/E,KAAK,OACL1B,YAAY,UACZ6C,UAAU,wBAKlBrB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAW6B,GAAM8F,EAAsB9F,EAAG6E,GAC1CzG,MAAOoM,EAAMzG,sBACbe,KAAK,wBACL/E,KAAK,OACL1B,YAAY,eACZ6C,UAAU,eACVwJ,UAAW,GACXC,UAAW,WAKnB9K,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAW6B,GAAM8F,EAAsB9F,EAAG6E,GAC1CzG,MAAOoM,EAAM3G,uBACbiB,KAAK,yBACL/E,KAAK,OACL1B,YAAY,eACZ6C,UAAU,eACVwJ,UAAW,GACXC,UAAW,YAtEK9F,cAgFpChF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,YAAWpB,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAIyK,MAAO,CAAEC,MAAO,WAAYzK,SAAC,4BAejCqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,MAAKpB,SAAA,EAClBD,EAAAA,EAAAA,KAAA,SAAOqB,UAAU,0BAAyBpB,SAAC,sBAC3CD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,YACEzB,MAAO6F,EAAcE,iBACrBW,KAAK,mBACL3G,SAnnBS6B,IAC3B,MAAM,KAAE8E,EAAI,MAAE1G,GAAU4B,EAAEG,OAE1B+D,EAAiB,IAAKD,EAAe,CAACa,GAAO1G,GAAQ,EAinBnC8C,UAAU,eACV7C,YAAY,2BAIlBwB,EAAAA,EAAAA,KAAA,eAIJA,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,YAAWpB,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAIyK,MAAO,CAAEC,MAAO,WAAYzK,SAAC,mDAejCqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,gBAAepB,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,oBAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gCAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,WAELD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,cAGPqK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,MAAKpB,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAU8H,EACVnB,KAAK,QACL1G,MAAOgG,EAAiBE,MACxBvE,KAAK,OACL1B,YAAY,UACZ6C,UAAU,wBAKlBrB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAU8H,EACVnB,KAAK,QACL1G,MAAOgG,EAAiBG,MACxBxE,KAAK,OACL1B,YAAY,WACZ6C,UAAU,wBAKlBrB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAACiL,EAAAA,QAAS,CACR5J,UAAU,eACV6J,SAAU3G,EAAiBK,IAC3BtG,SAAU8H,EAEV+E,gBAAiB,wBAKzBnL,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACEY,OA5qBJwK,IAClB,MAAM,KAAEnG,EAAI,MAAE1G,GAAU6M,EAAM9K,OAC9B,IAAI+K,EAAmB9M,EAAM+M,OACN,MAAMhG,KAAK/G,KAGhC8M,EAAmB9M,EAAMiC,QAAQ,WAAY,UAG/CgE,EAAoB,IACfD,EACH,CAACU,GAAOoG,GACR,EAiqBoB/M,SAAU8H,EACV7H,MAAOgG,EAAiBI,QACxBM,KAAK,UACL/E,KAAK,OACL1B,YAAY,2BACZ6C,UAAU,wBAMlBrB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAU8H,EACVnB,KAAK,MACL1G,MAAOgG,EAAiBM,IACxB3E,KAAK,OACLmB,UAAU,eACV7C,YAAY,MACZqM,UAAW,GACXC,UAAW,WAKnB9K,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAUpB,UACvBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,MAAKpB,UAClBD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,YAAWpB,UACxBD,EAAAA,EAAAA,KAAA,SACE1B,SAAU8H,EACVnB,KAAK,MACL1G,MAAOgG,EAAiBO,IACxB5E,KAAK,OACLmB,UAAU,eACV7C,YAAY,uBAQ1BwB,EAAAA,EAAAA,KAAA,UACAsK,EAAAA,EAAAA,MAAA,OAAKjJ,UAAU,gBAAepB,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,UACEuL,QAr9BKC,KACjB5E,aAAa6E,WAAW,SACxBxJ,EAAS,0BAA0B,EAo9BvB/B,KAAK,SACLmB,UAAU,UACVoJ,MAAO,CAAEiB,WAAY,UAAWhB,MAAO,SAAUzK,SAClD,cAEQ,aAETD,EAAAA,EAAAA,KAAA,UACEuL,QArpBGtB,UACf,MAAMxG,EAAiBwD,EAAKzD,WAAWC,eAIvC,IAAK,MAAMkI,KAAUlI,EAAgB,CACnC,GAAIkI,EAAOxH,kBAAoBwH,EAAOxH,iBAAiByH,WAFtC,OAGf,OAAOC,EAAAA,GAAMC,QAAQ,8BAEvB,GAAIH,EAAO1H,mBAAqB0H,EAAO1H,kBAAkB2H,WALxC,OAMf,OAAOC,EAAAA,GAAMC,QAAQ,2BAEzB,CACA,IAAIC,EAAc,IAAIlN,KAClBmN,EAA6B,OAAhBzH,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBK,IACnC,GAAoB,OAAhBL,QAAgB,IAAhBA,GAAAA,EAAkBK,IAAK,CAAC,IAADqH,EAEzB,IADiD,QAAlCA,EAAG,IAAIpN,KAAqB,OAAhB0F,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBK,YAAI,IAAAqH,OAAA,EAA/BA,EAAiCnM,eACnC,KACd,OAAO+L,EAAAA,GAAMC,QAAQ,8CAEzB,CACA,GAAIvH,GAAoBA,EAAiBK,IAAK,CAG5C,GAFkB,IAAI/F,KAAK0F,EAAiBK,KAE1BmH,EAChB,OAAOF,EAAAA,GAAMC,QAAQ,oDAEzB,CACA,IAAII,EAAY,IAAIrN,KAAKmN,GAKzB,IAHgCD,EAAYhN,UAAYmN,EAAUnN,WAChB,SAFjC,GAKf,OAAO8M,EAAAA,GAAMC,QACX,8EAIJ,IACE,IAAIK,EACAC,EAEAtF,GACFqF,EAAG,GAAApM,OAAMoC,EAAM,2BAAApC,OAA0B+G,EAAQK,KACjDiF,EAAS,QAETD,EAAG,GAAApM,OAAMoC,EAAM,aACfiK,EAAS,QAEX,IAAIC,QAAiBlC,MAAMgC,EAAK,CAC9BC,OAAQA,EACRE,QAAS,CACP,eAAgB,oBAElBC,KAAMxF,KAAKyF,UAAUvF,KAGD,aADHoF,EAASjC,QACjBqC,OACTZ,EAAAA,GAAMa,QAAQ,iCAEdb,EAAAA,GAAMnF,MACJ,qFAGN,CAAE,MAAOA,GACPmF,EAAAA,GAAMnF,MAAM,uCACd,GAmlBYxG,KAAK,SACLuK,MAAO,CAAEiB,WAAY,UAAWhB,MAAO,SACvCrJ,UAAU,UAASpB,SACpB,wBAMPD,EAAAA,EAAAA,KAAC2M,EAAAA,GAAc,SAEhB,EAIP,EAAeC,EAAAA,KAAWtL,E","sources":["views/customer/Date.jsx","views/customer/attorney/Attorney.jsx"],"sourcesContent":["// // import React from 'react'\n// // import DatePicker from 'react-datepicker'\n// // import 'react-datepicker/dist/react-datepicker.css'\n// // import PropTypes from 'prop-types'\n\n// // const DatePiker = ({ onChange, selected, placeholderText }) => {\n// //   DatePiker.propTypes = {\n// //     onChange: PropTypes.func.isRequired,\n// //     selected: PropTypes.func.isRequired,\n// //     placeholderText: PropTypes.func.isRequired,\n// //   }\n\n// //   return (\n// //     <div>\n// //       <DatePicker\n// //         className=\"form-control form-search-control w-101\"\n// //         placeholderText={placeholderText}\n// //         selected={selected}\n// //         onChange={onChange}\n// //         dateFormat=\"dd.MM.yyyy\"\n// //       />\n// //     </div>\n// //   )\n// // }\n\n// // export default DatePiker\n\n// import React from 'react'\n// import DatePicker from 'react-datepicker'\n// import 'react-datepicker/dist/react-datepicker.css'\n// import PropTypes from 'prop-types'\n\n// const DatePiker = ({ onChange, selected, placeholderText }) => {\n//   DatePiker.propTypes = {\n//     onChange: PropTypes.func.isRequired,\n//     selected: PropTypes.instanceOf(Date).isRequired,\n//     placeholderText: PropTypes.string.isRequired,\n//   }\n\n//   const handleDateChange = (date) => {\n//     let day = date.getDate()\n//     let month = date.getMonth() + 1\n//     let year = date.getFullYear()\n\n//     if (year < 1000 || year > 9999) {\n//       console.error('Invalid year. Year must consist of 4 digits.')\n//       return\n//     }\n\n//     day = day.toString().padStart(2, '0')\n//     month = month.toString().padStart(2, '0')\n\n//     const parsedDate = new Date(`${year}.${month}.${day}`)\n//     onChange(parsedDate)\n//   }\n\n//   return (\n//     <div>\n//       <DatePicker\n//         className=\"form-control form-search-control w-101\"\n//         placeholderText={placeholderText}\n//         selected={selected}\n//         onChange={handleDateChange}\n//         dateFormat=\"dd.MM.yyyy\"\n//       />\n//     </div>\n//   )\n// }\n\n// export default DatePiker\n\n// //mui date piker\n\n// // import React from 'react'\n// // import PropTypes from 'prop-types'\n// // import { DatePicker } from '@mui/x-date-pickers/DatePicker'\n// // import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\n// // import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\n\n// // export default function DatePiker({ onChange, selected, placeholderText }) {\n// // const handleDateChange = (date) => {\n// //   let day = date.getDate()\n// //   let month = date.getMonth() + 1\n// //   let year = date.getFullYear() % 100\n\n// //   year += year < 50 ? 2000 : 1900\n// //   day = day.toString().padStart(2, '0')\n// //   month = month.toString().padStart(2, '0')\n// //   const parsedDate = new Date(year, month - 1, day)\n\n// //   onChange(parsedDate)\n// // }\n\n// //   return (\n// //     <LocalizationProvider dateAdapter={AdapterDayjs}>\n// //       <DatePicker\n// //         label=\"name\"\n// //         format=\"DD.MM.YYYY\"\n// //         value={selected}\n// //         onChange={handleDateChange}\n// //         name=\"startDate\"\n// //         renderInput={(params) => <input {...params} placeholder={placeholderText} />}\n// //       />\n// //     </LocalizationProvider>\n// //   )\n// // }\n\n// // DatePiker.propTypes = {\n// //   onChange: PropTypes.func.isRequired,\n// //   selected: PropTypes.instanceOf(Date).isRequired,\n// //   placeholderText: PropTypes.string.isRequired,\n// // }\n\n// //ant design\n\n// // import React from 'react'\n// // import PropTypes from 'prop-types'\n// // import { DatePicker, Space } from 'antd'\n// // import moment from 'moment'\n\n// // export default function DatePiker({ onChange, selected, placeholder }) {\n// //   const handleDateChange = (date) => {\n// //     if (date && moment.isMoment(date) && date.isValid()) {\n// //       onChange(date.format('YYYY-MM-DD'))\n// //     } else {\n// //       onChange(null)\n// //     }\n// //     // onChange(date)\n// //   }\n\n// //   return (\n// //     <div>\n// //       <Space direction=\"vertical\">\n// //         <DatePicker\n// //           // format={{\n// //           //   format: 'DD.MM.YYYY',\n// //           //   type: 'mask',\n// //           // }}\n// //           format={{\n// //             format: 'YYYY-MM-DD',\n// //             type: 'mask',\n// //           }}\n// //           onChange={handleDateChange}\n// //           // value={selected}\n// //           value={selected ? moment(selected, 'YYYY-MM-DD') : null}\n// //           // placeholder={placeholder}\n// //           // className=\"form-control w-100\"\n// //         />\n// //       </Space>\n// //     </div>\n// //   )\n// // }\n\n// // DatePiker.propTypes = {\n// //   onChange: PropTypes.func.isRequired,\n// //   selected: PropTypes.string,\n// //   placeholder: PropTypes.string.isRequired,\n// // }\n// // DatePiker.defaultProps = {\n// //   placeholder: 'Geburtsdatum',\n// //\n\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function DatePic({ onChange, value, placeholder }) {\n  const [inputValue, setInputValue] = useState('')\n\n  useEffect(() => {\n    if (value instanceof Date && !isNaN(value.getTime())) {\n      setInputValue(formatDate(value))\n    } else if (typeof value === 'string') {\n      const date = new Date(value)\n      setInputValue(formatDate(date))\n    } else {\n      setInputValue('')\n    }\n  }, [value])\n\n  const handleInputChange = (e) => {\n    let inputValue = e.target?.value\n    let formattedValue = ''\n\n    inputValue = inputValue?.replace(/\\D/g, '')\n\n    for (let i = 0; i < inputValue?.length; i++) {\n      if (i === 2 || i === 4) {\n        formattedValue += '.'\n      }\n      formattedValue += inputValue[i]\n    }\n\n    setInputValue(formattedValue)\n  }\n\n  const handleDateChange = (e) => {\n    const parts = inputValue?.split('.')?.map((part) => parseInt(part, 10))\n    let [day, month, year] = parts\n    if (parts?.length === 3) {\n      if (year < 100) {\n        year += 1900\n      } else if (year >= 2000 && year <= new Date().getFullYear()) {\n      } else {\n        year = new Date().getFullYear()\n      }\n\n      const newDate = new Date(year, month - 1, day)\n      onChange(newDate)\n    } else if (parts?.length === 1) {\n      const year = parts[0]\n      if (year < 100) {\n        let fullYear\n        if (year < 50) {\n          fullYear = year + 2000\n        } else {\n          fullYear = year + 1900\n        }\n        const newDate = new Date(fullYear, 0, 1)\n        onChange(newDate)\n      }\n    }\n  }\n\n  const formatDate = (date) => {\n    const day = date?.getDate()?.toString()?.padStart(2, '0')\n    const month = (date?.getMonth() + 1)?.toString()?.padStart(2, '0')\n    const year = date?.getFullYear()?.toString()\n    return `${day}.${month}.${year}`\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onChange={handleInputChange}\n        onBlur={handleDateChange}\n        value={inputValue}\n        placeholder={placeholder}\n        className=\"form-control\"\n      />\n    </div>\n  )\n}\n\nDatePic.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.instanceOf(Date).isRequired,\n  placeholder: PropTypes.string.isRequired,\n}\n","import React, { useEffect, useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Customer from '../Customer'\nimport Form from 'react-bootstrap/Form'\nimport { useNavigate } from 'react-router-dom'\nimport DatePiker from '../Date'\nimport { Jodit } from 'jodit-react'\nimport 'react-phone-input-2/lib/style.css'\nimport PhoneInput from 'react-phone-input-2'\n\nconst Attorney = () => {\n  const [recordData, setRecordData] = useState([])\n  const navigate = useNavigate()\n  const maxFields = 10\n  const initialFields = 4\n  const notify = (dataa) => toast(dataa)\n  const apiUrl = process.env.REACT_APP_API_URL\n  const cancelData = () => {\n    localStorage.removeItem('tabId')\n    navigate('/customer/customer_info')\n  }\n\n  const [powerOfAttorney, setPowerOfAttorney] = useState({\n    AttorneyMasterData: false,\n    adoptDataFromHealthcare: Boolean(recordData?.powerOfAttorney?.adoptDataFromHealthcare),\n    powerOfAttorneyData: Array.from({ length: initialFields }, () => ({\n      powerOfAttorney_fname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_fname\n      }),\n      powerOfAttorney_lname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_lname\n      }),\n      powerOfAttorney_address: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_address\n      }),\n      powerOfAttorney_mobile: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_mobile\n      }),\n      powerOfAttorney_phone: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_phone\n      }),\n    })),\n  })\n\n  const [careProvision, setCareProvision] = useState({\n    care_association: recordData?.careProvision?.care_association || '',\n  })\n\n  const [securingattorney, setSecuringattorney] = useState({\n    fname: recordData?.securingattorney?.fname || '',\n    lname: recordData?.securingattorney?.lname || '',\n    address: recordData?.securingattorney?.address || '',\n    dob: recordData?.securingattorney?.dob || '',\n    plz: recordData?.securingattorney?.plz || '',\n    ort: recordData?.securingattorney?.ort || '',\n  })\n\n  // const healthCareChange = (e, index, fieldName) => {\n  //   let value\n\n  //   if (e && e.target) {\n  //     value = e.target.value\n  //   } else {\n  //     value = e\n  //   }\n\n  //   setHealthCare((prevHealthCare) => {\n  //     const updatedHealthCareData = [...prevHealthCare.healthCareData]\n\n  //     updatedHealthCareData[index] = {\n  //       ...updatedHealthCareData[index],\n  //       [fieldName]: value,\n  //     }\n\n  //     return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n  //   })\n  // }\n\n  const healthCareChange = (e, index) => {\n    const { name, value, type, checked } = e.target || {}\n    setHealthCare((prevHealthCare) => {\n      const updatedHealthCareData = [...prevHealthCare.healthCareData]\n\n      if (type === 'checkbox') {\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          [name]: checked,\n        }\n      } else if (name === 'healthCare_phone') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedHealthCareData[index] = {\n            ...updatedHealthCareData[index],\n            healthCare_phone: inputValue,\n          }\n        }\n      } else if (name === 'healthCare_mobile') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedHealthCareData[index] = {\n            ...updatedHealthCareData[index],\n            healthCare_mobile: inputValue,\n          }\n        }\n      } else {\n        // For other fields, simply update the value\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          [name]: value,\n        }\n      }\n      return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n    })\n  }\n\n  // const healthCareChange = (phoneNumber, index) => {\n  //   setHealthCare((prevHealthCare) => {\n  //     const updatedHealthCareData = [...prevHealthCare.healthCareData]\n  //     updatedHealthCareData[index] = {\n  //       ...updatedHealthCareData[index],\n  //       healthCare_phone: phoneNumber,\n  //       healthCare_mobile: phoneNumber,\n  //     }\n\n  //     return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n  //   })\n  // }\n\n  const formatPhoneNumber = (value) => {\n    const numericValue = value.replace(/[^\\d\\s]/g, '')\n    let formattedNumber = ''\n\n    for (let i = 0; i < numericValue.length; i++) {\n      if (i > 0 && i % 30 === 0) {\n        formattedNumber += ' / '\n      }\n      formattedNumber += numericValue[i]\n    }\n\n    return formattedNumber\n  }\n\n  const [healthCare, setHealthCare] = useState({\n    healthCareData: Array.from({ length: initialFields }, () => ({\n      healthCare_fname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_fname\n      }),\n      healthCare_lname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_lname\n      }),\n      healthCare_address: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_address\n      }),\n      healthCare_mobile: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_mobile\n      }),\n      healthCare_phone: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_phone\n      }),\n    })),\n  })\n  // console.log('first', healthCare.healthCareData[0].healthCare_fname)\n\n  const addHealthCareField = () => {\n    if (healthCare.healthCareData.length < maxFields) {\n      setHealthCare((prev) => ({\n        ...prev,\n        healthCareData: [\n          ...prev.healthCareData,\n          {\n            healthCare_fname: '',\n            healthCare_lname: '',\n            healthCare_address: '',\n            healthCare_phone: [],\n          },\n        ],\n      }))\n    }\n  }\n\n  const powerOfAttorneyChange = (e, index) => {\n    const { name, value, type, checked } = e.target || {}\n    setPowerOfAttorney((prevPowerOfAttorney) => {\n      const updatedPowerOfAttorneyData = [...prevPowerOfAttorney.powerOfAttorneyData]\n\n      if (type === 'checkbox') {\n        updatedPowerOfAttorneyData[index] = {\n          ...updatedPowerOfAttorneyData[index],\n          [name]: checked,\n        }\n      } else if (name === 'powerOfAttorney_phone') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedPowerOfAttorneyData[index] = {\n            ...updatedPowerOfAttorneyData[index],\n            powerOfAttorney_phone: inputValue,\n          }\n        }\n      } else if (name === 'powerOfAttorney_mobile') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedPowerOfAttorneyData[index] = {\n            ...updatedPowerOfAttorneyData[index],\n            powerOfAttorney_mobile: inputValue,\n          }\n        }\n      }\n\n      return { ...prevPowerOfAttorney, powerOfAttorneyData: updatedPowerOfAttorneyData }\n    })\n  }\n\n  const addPowerOfAttorneyField = () => {\n    if (powerOfAttorney.powerOfAttorneyData.length < maxFields) {\n      setPowerOfAttorney((prev) => ({\n        ...prev,\n        powerOfAttorneyData: [\n          ...prev.powerOfAttorneyData,\n          {\n            powerOfAttorney_fname: '',\n            powerOfAttorney_lname: '',\n            powerOfAttorney_address: '',\n            powerOfAttorney_phone: [],\n            powerOfAttorney_mobile: [],\n          },\n        ],\n      }))\n    }\n  }\n\n  const careProvisionChange = (e) => {\n    const { name, value } = e.target\n\n    setCareProvision({ ...careProvision, [name]: value })\n  }\n  // const securingattorneyChange = (e) => {\n  //   const { name, value, type, checked } = e.target\n\n  //   setSecuringattorney({ ...securingattorney, [name]: value })\n  // }\n  const securingattorneyChange = (e) => {\n    if (e instanceof Date) {\n      let yearString = e.getFullYear().toString()\n      const year = parseInt(yearString.substring(0, 4), 10)\n      if (yearString.length > 4) {\n        yearString = yearString.substring(0, 4)\n      }\n      const newDate = new Date(`${year}.${e.getMonth() + 1}.${e.getDate()}`)\n\n      setSecuringattorney({ ...securingattorney, dob: newDate })\n    } else if (e.target) {\n      const { name, value, type, checked } = e.target\n\n      if (name === 'plz' && type === 'text') {\n        const inputValue = value.replace(/[^0-9a-zA-Z9äöüÄÖÜßÄÖÜß\\s'-]/g, '')\n        setSecuringattorney({ ...securingattorney, plz: inputValue })\n      } else {\n        setSecuringattorney({ ...securingattorney, [name]: type === 'checkbox' ? checked : value })\n      }\n    } else if (e.value !== undefined) {\n      setSecuringattorney({ ...securingattorney, salution: e.value })\n    } else {\n      console.error('Invalid event or data provided to ContactChange.')\n    }\n  }\n\n  const handleBlur = (event) => {\n    const { name, value } = event.target\n    let formattedAddress = value.trim()\n    const endsWithNumber = /\\d$/.test(value)\n\n    if (endsWithNumber) {\n      formattedAddress = value.replace(/(\\D)(\\d)/, '$1 $2')\n    }\n\n    setSecuringattorney({\n      ...securingattorney,\n      [name]: formattedAddress,\n    })\n  }\n\n  let res = localStorage.getItem('customerRecord')\n  let resultt = JSON.parse(res)\n  const data = {\n    healthCare,\n    powerOfAttorney,\n    careProvision,\n    securingattorney,\n    customer_id: resultt?._id,\n  }\n  // const saveData = async () => {\n  //   const healthCareData = data.healthCare.healthCareData\n\n  //   // Phone and mobile number validation\n  //   const phoneRegex = '000'\n  //   for (const record of healthCareData) {\n  //     if (record.healthCare_phone && record.healthCare_phone.startsWith(phoneRegex)) {\n  //       return toast.warning('Ungültige Telefonnummer')\n  //     }\n  //     if (record.healthCare_mobile && record.healthCare_mobile.startsWith(phoneRegex)) {\n  //       return toast.warning('Ungültige Mobilnummer')\n  //     }\n  //   }\n  //   let currentDate = new Date()\n  //   if (securingattorney?.dob > currentDate) {\n  //     return toast.warning('Das Startdatum darf nicht in der Zukunft liegen.')\n  //   }\n  //   if (securingattorney && securingattorney?.dob && securingattorney?.dob?.getFullYear() < 1900) {\n  //     return toast.warning('Das Startdatum darf nicht vor 1900 liegen');\n  //   }\n\n  //   try {\n  //     let url\n  //     let method\n\n  //     if (resultt) {\n  //       url = `${apiUrl}/attorney/get_attorney/${resultt._id}`\n  //       method = 'PUT'\n  //     } else {\n  //       url = `${apiUrl}/attorney`\n  //       method = 'POST'\n  //     }\n\n  //     let response = await fetch(url, {\n  //       method: method,\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(data),\n  //     })\n\n  //     let result = await response.json()\n  //     // console.log(result)\n  //     if (result.status === 201) {\n  //       toast.success('Daten erfolgreich gespeichert')\n  //       // resetStateVariables()\n  //     } else {\n  //       toast.error(\n  //         'Fehler beim Speichern der Daten. Weitere Informationen finden Sie auf der Konsole.',\n  //       )\n  //     }\n  //   } catch (error) {\n  //     // console.error('Error during API call:', error)\n  //     toast.error('Error saving data. Please try again.')\n  //   }\n  // }\n  const saveData = async () => {\n    const healthCareData = data.healthCare.healthCareData\n\n    // Phone and mobile number validation\n    const phoneRegex = '000'\n    for (const record of healthCareData) {\n      if (record.healthCare_phone && record.healthCare_phone.startsWith(phoneRegex)) {\n        return toast.warning('Ungültige Telefonnummer')\n      }\n      if (record.healthCare_mobile && record.healthCare_mobile.startsWith(phoneRegex)) {\n        return toast.warning('Ungültige Mobilnummer')\n      }\n    }\n    let currentDate = new Date()\n    let secureDate = securingattorney?.dob\n    if (securingattorney?.dob) {\n      const birthYear = new Date(securingattorney?.dob)?.getFullYear()\n      if (birthYear < 1900) {\n        return toast.warning('Das Geburtsdatum darf nicht vor 1900 liegen')\n      }\n    }\n    if (securingattorney && securingattorney.dob) {\n      let attorneyDOB = new Date(securingattorney.dob)\n\n      if (attorneyDOB > currentDate) {\n        return toast.warning('Das Geburtsdatum darf nicht in der Zukunft liegen')\n      }\n    }\n    let birthDate = new Date(secureDate)\n    let minimumAge = 18\n    let ageDifferenceMilliseconds = currentDate.getTime() - birthDate.getTime()\n    let ageDifferenceYears = ageDifferenceMilliseconds / (1000 * 3600 * 24 * 365.25)\n\n    if (ageDifferenceYears < minimumAge) {\n      return toast.warning(\n        'Du musst mindestens 18 Jahre alt sein, um einen Vertrag zu unterschreiben.',\n      )\n    }\n\n    try {\n      let url\n      let method\n\n      if (resultt) {\n        url = `${apiUrl}/attorney/get_attorney/${resultt._id}`\n        method = 'PUT'\n      } else {\n        url = `${apiUrl}/attorney`\n        method = 'POST'\n      }\n      let response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n      let result = await response.json()\n      if (result.status === 201) {\n        toast.success('Daten erfolgreich gespeichert')\n      } else {\n        toast.error(\n          'Fehler beim Speichern der Daten. Weitere Informationen finden Sie auf der Konsole.',\n        )\n      }\n    } catch (error) {\n      toast.error('Error saving data. Please try again.')\n    }\n  }\n\n  const getRecord = async () => {\n    try {\n      const result = await fetch(`${apiUrl}/attorney/get_attorney/${resultt._id}`)\n      const data = await result.json()\n      setRecordData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  // console.log('recorddata', recordData)\n  // const resetStateVariables = () => {\n  //   setHealthCare(() => ({\n  //     healthCareData: Array.from({ length: initialFields + 1 }, () => ({\n  //       healthCareMasterData: false,\n  //       healthCare_fname: '',\n  //       healthCare_lname: '',\n  //       healthCare_address: '',\n  //       healthCare_phone: '',\n  //       healthCare_mobile: '',\n  //     })),\n  //   }))\n\n  //   setPowerOfAttorney(() => ({\n  //     powerOfAttorneyData: Array.from({ length: initialFields + 1 }, () => ({\n  //       AttorneyMasterData: false,\n  //       adoptDataFromHealthcare: false,\n  //       powerOfAttorney_fname: '',\n  //       powerOfAttorney_lname: '',\n  //       powerOfAttorney_address: '',\n  //       powerOfAttorney_phone: '',\n  //       powerOfAttorney_mobile: '',\n  //     })),\n  //   }))\n\n  //   setCareProvision(() => ({\n  //     care_association: '',\n  //   }))\n\n  //   setSecuringattorney({\n  //     fname: '',\n  //     lname: '',\n  //     address: '',\n  //     plz: '',\n  //     ort: '',\n  //     dob: '',\n  //   })\n  // }\n  const toggleAdoptDataFromHealthcare = () => {\n    setPowerOfAttorney((prevState) => ({\n      ...prevState,\n      adoptDataFromHealthcare: !prevState.adoptDataFromHealthcare,\n      powerOfAttorneyData: prevState.adoptDataFromHealthcare\n        ? powerOfAttorney.powerOfAttorneyData.map((data) => ({\n            powerOfAttorney_fname: '',\n            powerOfAttorney_lname: '',\n            powerOfAttorney_address: '',\n            powerOfAttorney_phone: '',\n            powerOfAttorney_mobile: '',\n          }))\n        : healthCare.healthCareData.map((data) => ({\n            powerOfAttorney_fname: data.healthCare_fname,\n            powerOfAttorney_lname: data.healthCare_lname,\n            powerOfAttorney_address: data.healthCare_address,\n            powerOfAttorney_phone: data.healthCare_phone,\n            powerOfAttorney_mobile: data.healthCare_mobile,\n          })),\n    }))\n  }\n\n  useEffect(() => {\n    setCareProvision({\n      care_association: recordData?.careProvision?.care_association,\n    })\n    setSecuringattorney({\n      fname: recordData?.securingattorney?.fname,\n      lname: recordData?.securingattorney?.lname,\n      address: recordData?.securingattorney?.address,\n      dob: recordData?.securingattorney?.dob,\n      plz: recordData?.securingattorney?.plz,\n      ort: recordData?.securingattorney?.ort,\n    })\n    setPowerOfAttorney((prevState) => ({\n      ...prevState,\n      // adoptDataFromHealthcare: Boolean(recordData?.powerOfAttorney?.adoptDataFromHealthcare),\n      powerOfAttorneyData: Array.from({ length: initialFields }, (_, index) => ({\n        powerOfAttorneyData: prevState.powerOfAttorneyData.map((item, index) => ({\n          ...item,\n          powerOfAttorney_fname:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_fname ||\n            item.powerOfAttorney_fname,\n          powerOfAttorney_lname:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_lname ||\n            item.powerOfAttorney_lname,\n          powerOfAttorney_address:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_address ||\n            item.powerOfAttorney_address,\n          powerOfAttorney_mobile:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_mobile ||\n            item.powerOfAttorney_mobile,\n          powerOfAttorney_phone:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_phone ||\n            item.powerOfAttorney_phone,\n        })),\n      })),\n    }))\n    setHealthCare((prevHealthCare) => ({\n      ...prevHealthCare,\n      healthCareData: Array.from({ length: initialFields }, (_, index) => ({\n        healthCare_fname:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_fname ||\n          prevHealthCare.healthCareData[index]?.healthCare_fname ||\n          '',\n        healthCare_lname:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_lname ||\n          prevHealthCare.healthCareData[index]?.healthCare_lname ||\n          '',\n        healthCare_address:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_address ||\n          prevHealthCare.healthCareData[index]?.healthCare_address ||\n          '',\n        healthCare_mobile:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_mobile ||\n          prevHealthCare.healthCareData[index]?.healthCare_mobile ||\n          '',\n        healthCare_phone:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_phone ||\n          prevHealthCare.healthCareData[index]?.healthCare_phone ||\n          '',\n      })),\n    }))\n  }, [recordData, initialFields])\n\n  useEffect(() => {\n    // Add fields on component mount\n    addHealthCareField()\n    getRecord()\n    addPowerOfAttorneyField()\n  }, [])\n  return (\n    <>\n      <Customer />\n      <div className=\"inner-page-wrap\">\n        <div className=\"tab-content\">\n          <div className=\"tab-title\">\n            <h4>Vollmachten</h4>\n          </div>\n          <div className=\"block-wrap m-3\">\n            <div>\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 style={{ color: '#244D92' }}>Gesundheitsvollmacht</h3>\n                  <p className=\"\" style={{ color: '#244D92' }}>\n                    Bevollmächtigte Person(en):\n                  </p>\n                  <div>\n                    <div className=\"row mb-2\">\n                      <div className=\"col-sm-2\">\n                        <b>Vorname</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Nachname</b>\n                      </div>\n                      <div className=\"col-sm-4\">\n                        <b>Adresse</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Telefon</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Mobil</b>\n                      </div>\n                    </div>\n                    <div>\n                      {healthCare.healthCareData &&\n                        healthCare.healthCareData.map((field, index) => (\n                          <div className=\"row\" key={index}>\n                            <div className=\"col-sm-2\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_fname')}\n                                    value={field.healthCare_fname}\n                                    name=\"healthCare_fname\"\n                                    type=\"text\"\n                                    placeholder=\"Vorname\"\n                                    className=\"form-control z\"\n                                    id={`fname_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_lname')}\n                                    value={field.healthCare_lname}\n                                    type=\"text\"\n                                    name=\"healthCare_lname\"\n                                    placeholder=\"Nachname\"\n                                    className=\"form-control\"\n                                    id={`lname_${index}`}\n                                    //required={true}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-4\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) =>\n                                      healthCareChange(e, index, 'healthCare_address')\n                                    }\n                                    value={field.healthCare_address}\n                                    type=\"text\"\n                                    name=\"healthCare_address\"\n                                    placeholder=\"Adresse\"\n                                    className=\"form-control\"\n                                    id={`address_${index}`}\n                                    //required={true}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    // isValid={(value, country) => {\n                                    //   if (value.match(/000/)) {\n                                    //     return 'Invalid phone'\n                                    //   } else if (value.match(/000/)) {\n                                    //     return false\n                                    //   } else {\n                                    //     return true\n                                    //   }\n                                    // }}\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_phone')}\n                                    value={field.healthCare_phone}\n                                    name=\"healthCare_phone\"\n                                    placeholder=\"853-456-8464\"\n                                    className=\"form-control\"\n                                    id={`phone_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    // isValid={(value, country) => {\n                                    //   if (value.match(/000/)) {\n                                    //     return 'Invalid mobile'\n                                    //   } else if (value.match(/000/)) {\n                                    //     return false\n                                    //   } else {\n                                    //     return true\n                                    //   }\n                                    // }}\n                                    onChange={(e) =>\n                                      healthCareChange(e, index, 'healthCare_mobile')\n                                    }\n                                    value={field.healthCare_mobile}\n                                    type=\"text\"\n                                    name=\"healthCare_mobile\"\n                                    placeholder=\"853-456-8464\"\n                                    className=\"form-control\"\n                                    id={`phone_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 style={{ color: '#244D92' }}>Vorsorgevollmacht</h3>\n                  <div className=\"row\">\n                    <label htmlFor=\"adoptDataFromHealthcare\" className=\"col-sm-3 col-form-label\">\n                      Daten aus Gesundheitsvollmacht übernehmen\n                    </label>\n                    <div className=\"col-sm-1 radio-check-wrap mt-2\">\n                      <input\n                        type=\"checkbox\"\n                        // onChange={powerOfAttorneyChange}\n                        // onChange={() =>\n                        //   setPowerOfAttorney((prevPowerOfAttorney) => ({\n                        //     ...prevPowerOfAttorney,\n                        //     adoptDataFromHealthcare: !prevPowerOfAttorney.adoptDataFromHealthcare,\n                        //     powerOfAttorneyData: [...prevPowerOfAttorney.powerOfAttorneyData],\n                        //   }))\n                        // }\n                        onChange={toggleAdoptDataFromHealthcare}\n                        checked={powerOfAttorney.adoptDataFromHealthcare}\n                        name=\"adoptDataFromHealthcare\"\n                      />\n                      <span></span>\n                    </div>\n                  </div>\n                  <p className=\"\" style={{ color: '#244D92' }}>\n                    Bevollmächtigte Person(en):\n                  </p>\n\n                  <div className=\"row mb-2 mt-3\">\n                    <div className=\"col-sm-2\">\n                      <b>Vorname</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Nachname</b>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <b>Adresse</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Telefon</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Mobil</b>\n                    </div>\n                  </div>\n                  {powerOfAttorney.powerOfAttorneyData &&\n                    powerOfAttorney.powerOfAttorneyData.map((field, index) => (\n                      <div className=\"row\" key={index}>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_fname}\n                                name=\"powerOfAttorney_fname\"\n                                type=\"text\"\n                                placeholder=\"Vorname\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_lname}\n                                name=\"powerOfAttorney_lname\"\n                                type=\"text\"\n                                placeholder=\"Nachname\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-4\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_address}\n                                name=\"powerOfAttorney_address\"\n                                type=\"text\"\n                                placeholder=\"Adresse\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_phone}\n                                name=\"powerOfAttorney_phone\"\n                                type=\"text\"\n                                placeholder=\"853-456-8464\"\n                                className=\"form-control\"\n                                maxLength={20}\n                                minLength={3}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_mobile}\n                                name=\"powerOfAttorney_mobile\"\n                                type=\"text\"\n                                placeholder=\"853-456-8464\"\n                                className=\"form-control\"\n                                maxLength={20}\n                                minLength={3}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <h3 style={{ color: '#244D92' }}>Betreuungsverfügung</h3>\n                {/* <div className=\"row\">\n                  <label htmlFor=\"CareProvisionMasterData\" className=\"col-sm-3 col-form-label fs-6\">\n                    Eintrag der Stammdaten\n                  </label>\n                  <div className=\"col-sm-9 radio-check-wrap mt-2\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={careProvisionChange}\n                      checked={careProvision.CareProvisionMasterData}\n                      name=\"CareProvisionMasterData\"\n                    />\n                    <span></span>\n                  </div>\n                </div> */}\n                <div className=\"row\">\n                  <label className=\"col-sm-2 col-form-label\">Betreuungsverein</label>\n                  <div className=\"col-sm-10\">\n                    <textarea\n                      value={careProvision.care_association}\n                      name=\"care_association\"\n                      onChange={careProvisionChange}\n                      className=\"form-control\"\n                      placeholder=\"Betreuungsverein\"\n                    />\n                  </div>\n                </div>\n                <hr />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <h3 style={{ color: '#244D92' }}>Vollmacht zur Absicherung des digitalen Erbes</h3>\n                {/* <div className=\"row\">\n                  <label htmlFor=\"SecuringMasterData\" className=\"col-sm-3 col-form-label fs-6\">\n                    Eintrag der Stammdaten\n                  </label>\n                  <div className=\"col-sm-9 radio-check-wrap mt-2\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={securingattorneyChange}\n                      checked={securingattorney.SecuringMasterData}\n                      name=\"SecuringMasterData\"\n                    />\n                    <span></span>\n                  </div>\n                </div> */}\n                <div className=\"row mb-2 mt-3\">\n                  <div className=\"col-sm-2\">\n                    <b>Vorname</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Nachname</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Geburtsdatum</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Straße mit Hausnummer</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>PLZ</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Ort</b>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"fname\"\n                          value={securingattorney.fname}\n                          type=\"text\"\n                          placeholder=\"Vorname\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"lname\"\n                          value={securingattorney.lname}\n                          type=\"text\"\n                          placeholder=\"Nachname\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <DatePiker\n                          className=\"form-control\"\n                          selected={securingattorney.dob}\n                          onChange={securingattorneyChange}\n                          // name=\"dataCollection\"\n                          placeholderText={'Geburtsdatum'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onBlur={handleBlur}\n                          onChange={securingattorneyChange}\n                          value={securingattorney.address}\n                          name=\"address\"\n                          type=\"text\"\n                          placeholder=\"Straße mit Hausnummer\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"plz\"\n                          value={securingattorney.plz}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"PLZ\"\n                          maxLength={10}\n                          minLength={3}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"ort\"\n                          value={securingattorney.ort}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Ort\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"text-end mx-3\">\n              <button\n                onClick={cancelData}\n                type=\"button\"\n                className=\"btn btn\"\n                style={{ background: '#d04545', color: 'white' }}\n              >\n                Abbrechen\n              </button>\n              &nbsp; &nbsp;\n              <button\n                onClick={saveData}\n                type=\"button\"\n                style={{ background: '#0b5995', color: 'white' }}\n                className=\"btn btn\"\n              >\n                Speichern\n              </button>\n            </div>\n          </div>\n        </div>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Attorney)\n"],"names":["DatePic","_ref","onChange","value","placeholder","inputValue","setInputValue","useState","useEffect","Date","isNaN","getTime","formatDate","date","_date$getDate","_date$getDate$toStrin","_ref2","_ref2$toString","_date$getFullYear","day","getDate","toString","padStart","month","getMonth","year","getFullYear","concat","_jsx","children","type","e","_e$target","_inputValue","target","formattedValue","replace","i","_inputValue2","length","onBlur","_inputValue$split","parts","split","map","part","parseInt","newDate","fullYear","className","Attorney","_recordData$powerOfAt","_recordData$careProvi","_recordData$securinga","_recordData$securinga2","_recordData$securinga3","_recordData$securinga4","_recordData$securinga5","_recordData$securinga6","recordData","setRecordData","navigate","useNavigate","apiUrl","process","powerOfAttorney","setPowerOfAttorney","AttorneyMasterData","adoptDataFromHealthcare","Boolean","powerOfAttorneyData","Array","from","_recordData$healthCar","_recordData$healthCar2","_recordData$healthCar3","_recordData$healthCar4","_recordData$healthCar5","_recordData$healthCar6","_recordData$healthCar7","_recordData$healthCar8","_recordData$healthCar9","_recordData$healthCar10","powerOfAttorney_fname","healthCare","healthCareData","item","healthCare_fname","powerOfAttorney_lname","healthCare_lname","powerOfAttorney_address","healthCare_address","powerOfAttorney_mobile","healthCare_mobile","powerOfAttorney_phone","healthCare_phone","careProvision","setCareProvision","care_association","securingattorney","setSecuringattorney","fname","lname","address","dob","plz","ort","healthCareChange","index","name","checked","setHealthCare","prevHealthCare","updatedHealthCareData","test","_recordData$healthCar11","_recordData$healthCar12","_recordData$healthCar13","_recordData$healthCar14","_recordData$healthCar15","_recordData$healthCar16","_recordData$healthCar17","_recordData$healthCar18","_recordData$healthCar19","_recordData$healthCar20","powerOfAttorneyChange","prevPowerOfAttorney","updatedPowerOfAttorneyData","securingattorneyChange","yearString","substring","undefined","salution","console","error","res","localStorage","getItem","resultt","JSON","parse","data","customer_id","_id","_recordData$careProvi2","_recordData$securinga7","_recordData$securinga8","_recordData$securinga9","_recordData$securinga10","_recordData$securinga11","_recordData$securinga12","prevState","_","_recordData$healthCar21","_recordData$healthCar22","_recordData$healthCar23","_recordData$healthCar24","_recordData$healthCar25","_recordData$healthCar26","_recordData$healthCar27","_recordData$healthCar28","_recordData$healthCar29","_recordData$healthCar30","_recordData$healthCar31","_recordData$healthCar32","_recordData$healthCar33","_recordData$healthCar34","_recordData$healthCar35","_recordData$healthCar36","_recordData$healthCar37","_recordData$healthCar38","_prevHealthCare$healt","_recordData$healthCar39","_recordData$healthCar40","_recordData$healthCar41","_prevHealthCare$healt2","_recordData$healthCar42","_recordData$healthCar43","_recordData$healthCar44","_prevHealthCare$healt3","_recordData$healthCar45","_recordData$healthCar46","_recordData$healthCar47","_prevHealthCare$healt4","_recordData$healthCar48","_recordData$healthCar49","_recordData$healthCar50","_prevHealthCare$healt5","prev","async","result","fetch","json","getRecord","_jsxs","_Fragment","Customer","style","color","field","id","maxLength","minLength","htmlFor","toggleAdoptDataFromHealthcare","DatePiker","selected","placeholderText","event","formattedAddress","trim","onClick","cancelData","removeItem","background","record","startsWith","toast","warning","currentDate","secureDate","_Date","birthDate","url","method","response","headers","body","stringify","status","success","ToastContainer","React"],"sourceRoot":""}