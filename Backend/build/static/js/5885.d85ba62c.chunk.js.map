{"version":3,"file":"static/js/5885.d85ba62c.chunk.js","mappings":"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","sources":["../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"],"sourcesContent":["import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n"],"names":["computeCoordsFromPlacement","_ref","placement","rtl","reference","floating","sideAxis","getSideAxis","alignmentAxis","getAlignmentAxis","alignLength","getAxisLength","side","getSide","isVertical","commonX","x","width","commonY","y","height","commonAlign","coords","getAlignment","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","padding","evaluate","paddingObject","getPaddingObject","element","clippingClientRect","rectToClientRect","getClippingRect","isElement","contextElement","getDocumentElement","rect","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","top","bottom","left","right","getSideOffsets","overflow","isAnySideFullyClipped","sides","some","getBoundingRect","minX","min","map","minY","max","getCssDimensions","css","getComputedStyle","parseFloat","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","round","$","unwrapElement","domElement","createCoords","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","selector","matches","e","getWindowScrollBarX","getNodeScroll","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","ownerDocument","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","offsets","getNodeName","isOverflowElement","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","isTableElement","isContainingBlock","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","result","getOverflowAncestors","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","includes","ancestor","set","getClippingElementAncestors","this","_c","concat","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","floor","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","detectOverflow$1","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","alignment","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","allowedPlacements","placements","autoAlignment","detectOverflowOptions","placements$1","undefined","getOppositeAlignmentPlacement","getPlacementList","currentIndex","index","currentPlacement","alignmentSides","getAlignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","slice","acc","v","sort","a","b","resetPlacement","every","shift","checkMainAxis","checkCrossAxis","limiter","getOppositeAxis","mainAxisCoord","crossAxisCoord","maxSide","clamp","limitedCoords","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","getOppositePlacement","getExpandedPlacements","push","getOppositeAxisPlacements","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","size","apply","isYAxis","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","hide","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","axis","length","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","inline","nativeClientRects","clientRects","sortedRects","groups","prevRect","i","getRectsByLine","fallback","resetRects","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition$1","node","isNode","nodeName","toLowerCase","_node$ownerDocument","defaultView","window","document","value","Node","Element","HTMLElement","isShadowRoot","ShadowRoot","overflowX","overflowY","display","test","webkit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","pageXOffset","pageYOffset","assignedSlot","host","getNearestOverflowAncestor","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","alignments","Math","oppositeSideMap","oppositeAlignmentMap","start","end","param","split","mainAlignmentSide","oppositePlacement","replace","isStart","lr","rl","tb","bt","getSideList","expandPaddingObject"],"sourceRoot":""}