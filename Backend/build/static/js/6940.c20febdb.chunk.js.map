{"version":3,"file":"static/js/6940.c20febdb.chunk.js","mappings":"0PA+BA,MA6CA,EA7CkBA,IAA8C,IAA7C,SAAEC,EAAQ,SAAEC,EAAQ,gBAAEC,GAAiBH,EAgCxD,OACEI,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,IAAU,CACTC,UAAU,yCACVJ,gBAAiBA,EACjBD,SAAUA,EACVD,SA/BoBO,IACxB,IAAKA,EAEH,YADAP,EAAS,MAIX,IAAIQ,EAAMD,EAAKE,UACXC,EAAQH,EAAKI,WAAa,EAC1BC,EAAOL,EAAKM,cAAgB,IAIhC,GAFAD,GAAQA,EAAO,GAAK,IAAO,KAEvBA,EAAO,KAET,YADAE,QAAQC,MAAM,8BAIhBP,EAAMA,EAAIQ,WAAWC,SAAS,EAAG,KACjCP,EAAQA,EAAMM,WAAWC,SAAS,EAAG,KACrB,GAAAC,OAAMV,GAAGU,OAAGR,GAAKQ,OAAGN,GAApC,MACMO,EAAa,IAAIC,KAAKR,EAAMF,EAAQ,EAAGF,GAE7CR,EAASmB,EAAW,EAUhBE,WAAW,gBAET,C","sources":["views/customer/Date.jsx"],"sourcesContent":["// import React from 'react'\n// import DatePicker from 'react-datepicker'\n// import 'react-datepicker/dist/react-datepicker.css'\n// import PropTypes from 'prop-types'\n\n// const DatePiker = ({ onChange, selected, placeholderText }) => {\n//   DatePiker.propTypes = {\n//     onChange: PropTypes.func.isRequired,\n//     selected: PropTypes.func.isRequired,\n//     placeholderText: PropTypes.func.isRequired,\n//   }\n\n//   return (\n//     <div>\n//       <DatePicker\n//         className=\"form-control form-search-control w-101\"\n//         placeholderText={placeholderText}\n//         selected={selected}\n//         onChange={onChange}\n//         dateFormat=\"dd.MM.yyyy\"\n//       />\n//     </div>\n//   )\n// }\n\n// export default DatePiker\nimport React from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport PropTypes from 'prop-types'\n\nconst DatePiker = ({ onChange, selected, placeholderText }) => {\n  DatePiker.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    selected: PropTypes.instanceOf(Date).isRequired,\n    placeholderText: PropTypes.string.isRequired,\n  }\n\n  const handleDateChange = (date) => {\n    if (!date) {\n      onChange(null)\n      return\n    }\n\n    let day = date.getDate()\n    let month = date.getMonth() + 1\n    let year = date.getFullYear() % 100\n\n    year += year < 50 ? 2000 : 1900\n\n    if (year < 1900) {\n      console.error('Year cannot be before 1900')\n      return\n    }\n\n    day = day.toString().padStart(2, '0')\n    month = month.toString().padStart(2, '0')\n    const dateString = `${day}${month}${year}`\n    const parsedDate = new Date(year, month - 1, day)\n\n    onChange(parsedDate)\n  }\n\n  return (\n    <div>\n      <DatePicker\n        className=\"form-control form-search-control w-101\"\n        placeholderText={placeholderText}\n        selected={selected}\n        onChange={handleDateChange}\n        dateFormat=\"dd.MM.yyyy\"\n      />\n    </div>\n  )\n}\n\nexport default DatePiker\n"],"names":["_ref","onChange","selected","placeholderText","_jsx","children","DatePicker","className","date","day","getDate","month","getMonth","year","getFullYear","console","error","toString","padStart","concat","parsedDate","Date","dateFormat"],"sourceRoot":""}