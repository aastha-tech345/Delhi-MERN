{"version":3,"file":"static/js/422.c16adaa9.chunk.js","mappings":"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","sources":["views/customer/task/Tasks.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Table } from 'antd'\nimport { BiFilterAlt, BiErrorCircle } from 'react-icons/bi'\nimport { MdAdd, MdDelete } from 'react-icons/md'\nimport { GrEdit } from 'react-icons/gr'\nimport Modal from 'react-bootstrap/Modal'\nconst columns = [\n  {\n    title: 'TITLE',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Datum des Beginns',\n    dataIndex: 'start_date',\n  },\n  {\n    title: 'Deadline',\n    dataIndex: 'deadline',\n  },\n  {\n    title: 'Zugewiesen an',\n    dataIndex: 'assigned_to',\n  },\n  {\n    title: 'Mitarbeiter',\n    dataIndex: 'employee',\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n  },\n  {\n    title: 'AKTION',\n    dataIndex: 'action',\n    render: () => (\n      <>\n        <GrEdit />\n        &nbsp; Bearbeiten &nbsp;&nbsp;&nbsp;\n        <MdDelete />\n        LÃ¶schen\n      </>\n    ),\n  },\n]\n\nconst data = []\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i.toString(),\n    name: `Edward King ${i}`,\n    start_date: '2023-01-01',\n    deadline: '2023-01-31',\n    assigned_to: `User ${i}`,\n    employee: `Employee ${i}`,\n    status: 'In Progress',\n    action: 'View',\n  })\n}\n\nconst Tasks = () => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [show, setShow] = useState(false)\n  // eslint-disable-next-line no-undef\n  const handleClose = () => setShow(false)\n  // eslint-disable-next-line no-undef\n  const handleShow = () => setShow(true)\n  const [title, setTitle] = useState()\n  const [description, setDescription] = useState()\n  const [recurring, setRecurring] = useState()\n  const [phone, setPhone] = useState()\n  const [assigned_to, setAssignedTo] = useState()\n  const [employee, setEmployee] = useState()\n  const [statu, setStatu] = useState()\n  const [priority, setPriority] = useState()\n  const [start_date, setStartDate] = useState()\n  const [deadline, setDeadline] = useState()\n\n  const start = () => {\n    setLoading(true)\n    setTimeout(() => {\n      setSelectedRowKeys([])\n      setLoading(false)\n    }, 1000)\n  }\n  const onSelectChange = (newSelectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys)\n    setSelectedRowKeys(newSelectedRowKeys)\n  }\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n  }\n  const hasSelected = selectedRowKeys.length > 0\n\n  const saveData = () => {\n    let data = {\n      title,\n      description,\n      deadline,\n      statu,\n      start_date,\n      assigned_to,\n      recurring,\n      priority,\n      phone,\n      employee,\n    }\n    console.log(data)\n  }\n  return (\n    <div>\n      <div className=\"row m-4 p-4  shadow\">\n        <div className=\"col-sm-3\">\n          <input\n            type=\"search\"\n            id=\"form1\"\n            placeholder=\"Ihre Suche eingeben\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-sm-5\">\n          <button className=\"btn btn text-light\" style={{ background: '#0b5995' }}>\n            {/* <i className=\"fas fa-search\">Filter</i> */}\n            <BiFilterAlt />\n            &nbsp; Filter\n          </button>\n        </div>\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn\"\n            style={{ background: '#0b5995', color: 'white' }}\n            onClick={handleShow}\n          >\n            <MdAdd />\n            &nbsp;Neuen Kunden anlegen\n            {/* Create new customer */}\n          </button>\n          <Modal show={show} onHide={handleClose} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Aufgabe hinzufÃ¼gen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"row p-3\">\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Titel\n                    {/* first name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      type=\"text\"\n                      value={title}\n                      onChange={(e) => {\n                        setTitle(e.target.value)\n                      }}\n                      placeholder=\"jo\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Description\n                    {/* second name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <textarea\n                      name=\"\"\n                      value={description}\n                      onChange={(e) => {\n                        setDescription(e.target.value)\n                      }}\n                      className=\"form-control\"\n                    ></textarea>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Punkte\n                    {/* phone */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <select\n                      className=\"form-control\"\n                      value={phone}\n                      onChange={(e) => {\n                        setPhone(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"Punkte\">Punkte</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Zuordnen zu\n                    {/* phone */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <select\n                      className=\"form-control\"\n                      value={assigned_to}\n                      onChange={(e) => {\n                        setAssignedTo(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"Russell Crowe\">Russell Crowe</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Mitarbeiter\n                    {/* first name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      type=\"text\"\n                      value={employee}\n                      onChange={(e) => {\n                        setEmployee(e.target.value)\n                      }}\n                      placeholder=\"jo\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Status\n                    {/* phone */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <select\n                      className=\"form-control\"\n                      value={statu}\n                      onChange={(e) => {\n                        setStatu(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"Zu tun\">Zu tun</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    PrioritÃ¤t\n                    {/* phone */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <select\n                      className=\"form-control\"\n                      value={priority}\n                      onChange={(e) => {\n                        setPriority(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"priority\">priority</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Start date\n                    {/* first name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      type=\"date\"\n                      value={start_date}\n                      onChange={(e) => {\n                        setStartDate(e.target.value)\n                      }}\n                      placeholder=\"jo\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Deadline\n                    {/* first name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      type=\"date\"\n                      value={deadline}\n                      onChange={(e) => {\n                        setDeadline(e.target.value)\n                      }}\n                      placeholder=\"jo\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <div className=\"col-sm-9\">\n                    Wiederkehrende &nbsp;\n                    <input\n                      type=\"checkbox\"\n                      name=\"gender\"\n                      value={recurring}\n                      onChange={(e) => {\n                        setRecurring(e.target.value)\n                      }}\n                    />{' '}\n                    {/* other */}\n                  </div>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                className=\"btn btn\"\n                onClick={handleClose}\n                style={{ background: '#d04545', color: 'white' }}\n              >\n                {' '}\n                Abbrechen\n              </button>\n              &nbsp; &nbsp;\n              <button\n                className=\"btn btn\"\n                onClick={saveData}\n                style={{ background: '#0b5995', color: 'white' }}\n              >\n                AktivitÃ¤t hinzufÃ¼gen\n                {/* Add activity */}\n              </button>\n            </Modal.Footer>\n          </Modal>{' '}\n        </div>\n      </div>\n\n      <div>\n        {/* <div\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          <Button type=\"primary\" onClick={start} disabled={!hasSelected} loading={loading}>\n            Reload\n          </Button>\n          <span\n            style={{\n              marginLeft: 8,\n            }}\n          >\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n        </div> */}\n        <Table\n          rowSelection={rowSelection}\n          style={{ overflowX: 'auto' }}\n          columns={columns}\n          dataSource={data}\n        />\n      </div>\n    </div>\n  )\n}\nexport default React.memo(Tasks)\n"],"names":["columns","title","dataIndex","render","_jsxs","_Fragment","children","_jsx","GrEdit","MdDelete","data","i","push","key","toString","name","concat","start_date","deadline","assigned_to","employee","status","action","Tasks","_useState","useState","_useState2","_slicedToArray","selectedRowKeys","setSelectedRowKeys","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","show","setShow","handleClose","_useState9","_useState10","setTitle","_useState11","_useState12","description","setDescription","_useState13","_useState14","recurring","setRecurring","_useState15","_useState16","phone","setPhone","_useState17","_useState18","setAssignedTo","_useState19","_useState20","setEmployee","_useState21","_useState22","statu","setStatu","_useState23","_useState24","priority","setPriority","_useState25","_useState26","setStartDate","_useState27","_useState28","setDeadline","rowSelection","onChange","newSelectedRowKeys","console","log","length","className","type","id","placeholder","style","background","BiFilterAlt","color","onClick","MdAdd","Modal","onHide","centered","Header","closeButton","Title","Body","htmlFor","value","e","target","Footer","Table","overflowX","dataSource","React"],"sourceRoot":""}