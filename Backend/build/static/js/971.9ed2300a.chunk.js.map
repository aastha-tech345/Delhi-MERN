{"version":3,"file":"static/js/971.9ed2300a.chunk.js","mappings":"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","sources":["views/settings/User.jsx","views/settings/user/CreateUser.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { CiUser } from 'react-icons/ci'\nimport { ImInfo } from 'react-icons/im'\n\nconst User = () => {\n  const navigate = useNavigate()\n  let activeTab = localStorage.getItem('tabId')\n  const handleTabClick = (tabId, name, e) => {\n    if (e && e.target.tagName.toLowerCase() === 'a') {\n      e.preventDefault()\n    }\n    localStorage.setItem('tabId', tabId)\n    if (name === 'user') {\n      return navigate('/settings/createuser')\n    } else if (name === 'role') {\n      return navigate('/settings/role')\n    }\n  }\n  useEffect(() => {\n    handleTabClick('nav-benutzer')\n  }, [])\n\n  return (\n    <>\n      <div className=\"row mx-1\" style={{ background: 'white' }}>\n        <nav>\n          <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n            <button\n              className={`nav-link ${activeTab === 'nav-benutzer' ? 'active' : ''}`}\n              id=\"nav-benutzer-tab\"\n              data-bs-toggle=\"tab\"\n              role=\"tab\"\n              aria-selected={activeTab === 'nav-benutzer'}\n              onClick={(e) => handleTabClick('nav-benutzer', 'user', e)}\n              style={{ marginRight: '60px', marginLeft: '20px' }}\n            >\n              <CiUser />\n              &nbsp; Mitarbeiterlnnen\n            </button>\n            <button\n              className={`nav-link ${activeTab === 'nav-rollen' ? 'active' : ''}`}\n              id=\"nav-rollen-tab\"\n              data-bs-toggle=\"tab\"\n              role=\"tab\"\n              aria-controls=\"nav-rollen\"\n              aria-selected={activeTab === 'nav-rollen'}\n              onClick={(e) => handleTabClick('nav-rollen', 'role', e)}\n              style={{ marginRight: '60px' }}\n            >\n              <ImInfo />\n              &nbsp; Rollen\n            </button>\n          </div>\n        </nav>\n        <br />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(User)\n","import React, { useEffect, useState } from 'react'\nimport { Divider, Radio, Table } from 'antd'\nimport { GrFormAdd, GrAdd } from 'react-icons/gr'\nimport Modal from 'react-bootstrap/Modal'\nimport { MdAdd, MdDelete } from 'react-icons/md'\nimport { GrEdit } from 'react-icons/gr'\nimport { Switch } from 'antd'\nimport { AiOutlineMail, AiFillSetting } from 'react-icons/ai'\nimport { getFetch, postFetchData } from 'src/Api'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport User from '../User'\n\nconst CreateUser = () => {\n  const loginUser = localStorage.getItem('record')\n  let dataa = JSON.parse(loginUser)\n  const notify = (dataa) => toast(dataa)\n\n  const [record, setRecord] = useState([])\n  const [user_email, setUserEmail] = useState()\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [user_name, setUserName] = useState()\n  const [roll, setRoll] = useState()\n  const [selectionType, setSelectionType] = useState('checkbox')\n  const [showInviteUserModal, setShowInviteUserModal] = useState(false)\n  const [show, setShow] = useState(false)\n  const [activeTab, setActiveTab] = useState('nav-home')\n  const [roleList, setRoleList] = useState([])\n  const [roleId, setRoleId] = useState('')\n  const [employee, setEmployee] = useState({\n    fname: '',\n    lname: '',\n    street: '',\n    plz: '',\n    city: '',\n    email: '',\n    location: '',\n    tel: '',\n    mobile: '',\n    role: '',\n    password: '123456',\n    user_role: 'employee',\n    timezone: '5:30',\n    parent_id: dataa?.user?._id,\n    added_by: dataa?.user?.username,\n  })\n  // const [employeData, setEmployeData] = useState({\n  //   users: {},\n  //   password: {\n  //     password: 'null',\n  //   },\n  //   localization: {\n  //     location: 'null',\n  //   },\n  //   advanced: {\n  //     advanced: 'null',\n  //   },\n  //   notification: {\n  //     notification: 'null',\n  //   },\n  // })\n\n  const handleTabClick = (tabId) => {\n    setActiveTab(tabId)\n  }\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChange = (checked) => {\n    //console.log(`switch to ${checked}`)\n  }\n  const handleShowInviteUserModal = () => {\n    setShowInviteUserModal(true)\n  }\n\n  const handleCloseInviteUserModal = () => {\n    setShowInviteUserModal(false)\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n\n    setEmployee({ ...employee, [name]: value })\n  }\n\n  let localUserData = localStorage.getItem('record')\n  let mainRes = JSON.parse(localUserData)\n  let userId = mainRes?.user?._id\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      const res = await postFetchData(`${apiUrl}/user/register`, employee)\n      console.log('response', res)\n      if (res.status === 201) {\n        notify('Employe Created Successfully')\n        return setShow(false)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  // useEffect(() => {\n  //   setEmployeData((prevRole) => ({\n  //     ...prevRole,\n  //     users: employee,\n  //   }))\n  // }, [employee])\n\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: '_id',\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: 'NAME',\n      dataIndex: 'user_name',\n    },\n    {\n      title: 'E-Mail Adresse',\n      dataIndex: 'user_email', // Change 'email address' to 'emailAddress'\n    },\n    {\n      title: 'Super Verwalter',\n      dataIndex: 'superVerwalter', // Change 'super verwalter' to 'superVerwalter'\n    },\n    {\n      title: 'AKTION',\n      dataIndex: 'action',\n      render: () => (\n        <>\n          <GrEdit />\n          &nbsp; Bearbeiten &nbsp;&nbsp;&nbsp;\n          <MdDelete />\n          Löschen\n        </>\n      ),\n    },\n  ]\n\n  const data = [\n    {\n      _id: '1',\n      user_name: 'John Brown',\n      age: 32,\n      emailAddress: 'mailto:john@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:john@example.com', // Adjust to a valid email address\n      superVerwalter: 'Yes',\n      action: 'Edit', // Provide appropriate action value\n    },\n    {\n      _id: '2',\n      user_name: 'Jim Green',\n      age: 42,\n      emailAddress: 'mailto:jim@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:jim@example.com', // Adjust to a valid email address\n      superVerwalter: 'No',\n      action: 'Delete', // Provide appropriate action value\n    },\n    {\n      _id: '3',\n      user_name: 'Joe Black',\n      age: 32,\n      emailAddress: 'mailto:joe@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:joe@example.com', // Adjust to a valid email address\n      superVerwalter: 'Yes',\n      action: 'View', // Provide appropriate action value\n    },\n  ]\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n    },\n    getCheckboxProps: (record) => ({\n      disabled: record.name === 'Disabled User',\n      name: record.name,\n    }),\n  }\n\n  const getRole = async () => {\n    try {\n      const res = await getFetch(`${apiUrl}/role/get_role`)\n      setRoleList(res?.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  let localData = localStorage.getItem('updateFunc')\n  useEffect(() => {\n    getRole()\n  }, [localData])\n\n  return (\n    <div style={{ background: 'white' }}>\n      <User />\n      <br />\n      <div className=\"topBtnBox mx-3\">\n        <div className=\"\">\n          <button\n            className=\"btn btn\"\n            onClick={handleShowInviteUserModal}\n            style={{ background: '#0b5995', color: 'white' }}\n          >\n            <MdAdd />\n            &nbsp; Benutzer erstellen\n          </button>\n          <Modal size=\"lg\" show={showInviteUserModal} onHide={handleCloseInviteUserModal} centered>\n            <Modal.Header closeButton>\n              <Modal.Title> Benutzer einladen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"row\" style={{ background: 'white' }}>\n                <div className=\"col-sm-12\">\n                  <nav>\n                    <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                      <button\n                        className={`nav-link ${activeTab === 'nav-benutzer' ? 'active' : ''}`}\n                        id=\"nav-benutzer-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-selected={activeTab === 'nav-benutzer'}\n                        onClick={() => handleTabClick('nav-benutzer')}\n                        style={{ marginRight: '10px', marginLeft: '20px' }}\n                      >\n                        Benutzer\n                      </button>\n                      <button\n                        className={`nav-link ${activeTab === 'nav-rollen' ? 'active' : ''}`}\n                        id=\"nav-rollen-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-rollen\"\n                        aria-selected={activeTab === 'nav-rollen'}\n                        onClick={() => handleTabClick('nav-rollen')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Passwort\n                      </button>\n                      <button\n                        className={`nav-link ${activeTab === 'nav-lokalisierung' ? 'active' : ''}`}\n                        id=\"nav-lokalisierung-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-lokalisierung\"\n                        aria-selected={activeTab === 'nav-lokalisierung'}\n                        onClick={() => handleTabClick('nav-lokalisierung')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Lokalisierung\n                      </button>\n                      <button\n                        className={`nav-link ${\n                          activeTab === 'nav-benachrichtigungen' ? 'active' : ''\n                        }`}\n                        id=\"nav-benachrichtigungen-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-benachrichtigungen\"\n                        aria-selected={activeTab === 'nav-benachrichtigungen'}\n                        onClick={() => handleTabClick('nav-benachrichtigungen')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Benachrichtigungen\n                      </button>\n                      <button\n                        className={`nav-link ${\n                          activeTab === 'nav-fortgeschrittene' ? 'active' : ''\n                        }`}\n                        id=\"nav-fortgeschrittene-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-fortgeschrittene\"\n                        aria-selected={activeTab === 'nav-fortgeschrittene'}\n                        onClick={() => handleTabClick('nav-fortgeschrittene')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Fortgeschrittene\n                      </button>\n                    </div>\n                  </nav>\n                </div>\n              </div>\n              <br />\n              <div className=\"tab-content\" id=\"nav-tabContent\">\n                <div\n                  className={`tab-pane fade ${activeTab === 'nav-benutzer' ? 'show active' : ''}`}\n                  id=\"nav-benutzer\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-benutzer-tab\"\n                >\n                  <div className=\"row\">\n                    {/* <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        type=\"text\"\n                        name=\"user_name\"\n                        value={user_name}\n                        onChange={(e) => {\n                          setUserName(e.target.value)\n                        }}\n                      />\n                    </div> */}\n                    <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        type=\"text\"\n                        name=\"fname\"\n                        value={employee.fname}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Straße mit Hausnummer\"\n                        type=\"text\"\n                        name=\"street\"\n                        value={employee.street}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Stadt\"\n                        type=\"text\"\n                        name=\"city\"\n                        value={employee.city}\n                        onChange={handleChange}\n                      />\n\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Standort\"\n                        type=\"text\"\n                        name=\"location\"\n                        value={employee.location}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <select\n                        className=\"form-control\"\n                        // type=\"text\"\n                        name=\"role\"\n                        value={employee.role}\n                        onChange={handleChange}\n                      >\n                        <option value=\"\">Select Role</option>\n                        {roleList?.map((value) => {\n                          const { role_name, _id } = value\n\n                          return (\n                            <option key={_id} value={_id}>\n                              {role_name}\n                            </option>\n                          )\n                        })}\n                      </select>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Vorname\"\n                        type=\"text\"\n                        name=\"lname\"\n                        value={employee.lname}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"PLZ\"\n                        name=\"plz\"\n                        value={employee.plz}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"E-Mail Adresse\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={employee.email}\n                        onChange={handleChange}\n                      />\n                      <br />\n\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Telefon\"\n                        maxLength={10}\n                        minLength={2}\n                        type=\"phone\"\n                        name=\"tel\"\n                        value={employee.tel}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Mobil\"\n                        maxLength={10}\n                        minLength={2}\n                        type=\"phone\"\n                        name=\"mobile\"\n                        value={employee.mobile}\n                        onChange={handleChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className={`tab-pane fade ${activeTab === 'nav-rollen' ? 'show active' : ''}`}\n                  id=\"nav-rollen\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-rollen-tab\"\n                ></div>\n                <div\n                  className={`tab-pane fade ${\n                    activeTab === 'nav-mannschaften' ? 'show active' : ''\n                  }`}\n                  id=\"nav-mannschaften\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-mannschaften-tab\"\n                ></div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-12\">\n                  <div style={{ float: 'right' }}>\n                    <button\n                      className=\"btn\"\n                      onClick={handleClose}\n                      style={{ background: '#d04545', color: 'white' }}\n                    >\n                      Abbrechen\n                    </button>\n                    &nbsp;&nbsp;\n                    <button\n                      className=\"btn mx-2\"\n                      onClick={handleSubmit}\n                      style={{ background: '#0b5995', color: 'white' }}\n                    >\n                      Speichern\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Modal.Footer>\n          </Modal>\n          &nbsp; &nbsp;\n          <input\n            type=\"search\"\n            id=\"form1\"\n            placeholder=\"Suche\"\n            className=\"form-control boxSearchBtn\"\n          />\n          &nbsp; &nbsp;\n          <button type=\"button\" className=\"btn btn text-light\" style={{ background: '#0b5995' }}>\n            <AiFillSetting />\n          </button>\n        </div>\n      </div>\n      <div className=\"row mx-2\">\n        <Table\n          rowSelection={{\n            type: selectionType,\n            ...rowSelection,\n          }}\n          style={{ overflowX: 'auto' }}\n          columns={columns}\n          dataSource={data}\n        />\n      </div>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default React.memo(CreateUser)\n"],"names":["User","navigate","useNavigate","activeTab","localStorage","getItem","handleTabClick","tabId","name","e","target","tagName","toLowerCase","preventDefault","setItem","useEffect","_jsx","_Fragment","children","_jsxs","className","style","background","id","role","concat","onClick","marginRight","marginLeft","CiUser","ImInfo","React","CreateUser","_dataa$user","_dataa$user2","_mainRes$user","loginUser","dataa","JSON","parse","record","setRecord","useState","user_email","setUserEmail","apiUrl","process","user_name","setUserName","roll","setRoll","selectionType","setSelectionType","showInviteUserModal","setShowInviteUserModal","show","setShow","setActiveTab","roleList","setRoleList","roleId","setRoleId","employee","setEmployee","fname","lname","street","plz","city","email","location","tel","mobile","password","user_role","timezone","parent_id","user","_id","added_by","username","handleChange","value","localUserData","mainRes","columns","title","dataIndex","render","text","GrEdit","MdDelete","localData","async","res","getFetch","data","error","console","log","getRole","handleShowInviteUserModal","color","MdAdd","Modal","size","onHide","handleCloseInviteUserModal","centered","Header","closeButton","Title","Body","placeholder","type","onChange","map","role_name","maxLength","minLength","Footer","float","handleClose","postFetchData","status","toast","notify","AiFillSetting","Table","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","overflowX","dataSource","age","emailAddress","superVerwalter","action","ToastContainer"],"sourceRoot":""}