{"version":3,"file":"static/js/6940.65adfb55.chunk.js","mappings":"0PAgCA,MAgDA,EAhDkBA,IAA8C,IAA7C,SAAEC,EAAQ,SAAEC,EAAQ,gBAAEC,GAAiBH,EAwBxD,OACEI,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,IAAU,CACTC,UAAU,yCACVJ,gBAAiBA,EACjBD,SAAUA,EACVD,SA7BoBO,IAAO,IAADC,EAAAC,EAC9B,IAAIC,EAAc,OAADH,QAAC,IAADA,GAAgB,QAAfC,EAADD,EAAGI,qBAAa,IAAAH,OAAf,EAADA,EAAkBI,WACnC,MAAMC,EAAOC,SAAmB,QAAXL,EAACC,SAAU,IAAAD,OAAA,EAAVA,EAAYM,UAAU,EAAG,GAAI,IACvB,IAADC,EAAvBN,EAAWO,OAAS,IACtBP,EAAuB,QAAbM,EAAGN,SAAU,IAAAM,OAAA,EAAVA,EAAYD,UAAU,EAAG,IAExC,MAAMG,EAAU,IAAIC,KAAK,GAADC,OAAIP,EAAI,KAAAO,QAAK,OAADb,QAAC,IAADA,OAAC,EAADA,EAAGc,YAAa,EAAC,KAAAD,OAAK,OAADb,QAAC,IAADA,OAAC,EAADA,EAAGe,YAC5DtB,EAASkB,EAAQ,EAuBbK,YApBqBhB,IAAO,IAADiB,EAC/B,IAAIC,EAAalB,EAAEmB,OAAOC,MACtBC,EAAiB,GACrBH,EAAuB,QAAbD,EAAGC,SAAU,IAAAD,OAAA,EAAVA,EAAYK,QAAQ,MAAO,IACxC,IAAK,IAAIC,EAAI,EAAGA,GAAc,QAAbC,EAAGN,SAAU,IAAAM,OAAA,EAAVA,EAAYd,QAAQa,IAAK,CAAC,IAADC,EACjC,IAAND,GAAiB,IAANA,IACbF,GAAkB,KAEpBA,GAAkBH,EAAWK,EAC/B,CACAvB,EAAEmB,OAAOC,MAAQC,CAAc,EAW3BI,WAAW,aACXC,eAAa,EACbC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,YAEX,C","sources":["views/customer/Date.jsx"],"sourcesContent":["// import React from 'react'\n// import DatePicker from 'react-datepicker'\n// import 'react-datepicker/dist/react-datepicker.css'\n// import PropTypes from 'prop-types'\n\n// const DatePiker = ({ onChange, selected, placeholderText }) => {\n//   DatePiker.propTypes = {\n//     onChange: PropTypes.func.isRequired,\n//     selected: PropTypes.func.isRequired,\n//     placeholderText: PropTypes.func.isRequired,\n//   }\n\n//   return (\n//     <div>\n//       <DatePicker\n//         className=\"form-control form-search-control w-101\"\n//         placeholderText={placeholderText}\n//         selected={selected}\n//         onChange={onChange}\n//         dateFormat=\"dd.MM.yyyy\"\n//       />\n//     </div>\n//   )\n// }\n\n// export default DatePiker\n\nimport React from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport PropTypes from 'prop-types'\n\nconst DatePiker = ({ onChange, selected, placeholderText }) => {\n  const handleDateChange = (e) => {\n    let yearString = e?.getFullYear()?.toString()\n    const year = parseInt(yearString?.substring(0, 4), 10)\n    if (yearString.length > 4) {\n      yearString = yearString?.substring(0, 4)\n    }\n    const newDate = new Date(`${year}.${e?.getMonth() + 1}.${e?.getDate()}`)\n    onChange(newDate)\n  }\n\n  const handleInputChange = (e) => {\n    let inputValue = e.target.value\n    let formattedValue = ''\n    inputValue = inputValue?.replace(/\\D/g, '')\n    for (let i = 0; i < inputValue?.length; i++) {\n      if (i === 2 || i === 4) {\n        formattedValue += '.'\n      }\n      formattedValue += inputValue[i]\n    }\n    e.target.value = formattedValue\n  }\n\n  return (\n    <div>\n      <DatePicker\n        className=\"form-control form-search-control w-101\"\n        placeholderText={placeholderText}\n        selected={selected}\n        onChange={handleDateChange}\n        onChangeRaw={handleInputChange}\n        dateFormat=\"dd.MM.yyyy\"\n        peekNextMonth\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n      />\n    </div>\n  )\n}\n\nDatePiker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.instanceOf(Date).isRequired,\n  placeholderText: PropTypes.string.isRequired,\n}\n\nexport default DatePiker\n"],"names":["_ref","onChange","selected","placeholderText","_jsx","children","DatePicker","className","e","_e$getFullYear","_yearString","yearString","getFullYear","toString","year","parseInt","substring","_yearString2","length","newDate","Date","concat","getMonth","getDate","onChangeRaw","_inputValue","inputValue","target","value","formattedValue","replace","i","_inputValue2","dateFormat","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode"],"sourceRoot":""}