{"version":3,"file":"static/js/247.ef6d8b83.chunk.js","mappings":"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","sources":["views/settings/user/CreateUser.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Divider, Radio, Table } from 'antd'\nimport { GrFormAdd, GrAdd } from 'react-icons/gr'\nimport Modal from 'react-bootstrap/Modal'\nimport { MdAdd, MdDelete } from 'react-icons/md'\nimport { GrEdit } from 'react-icons/gr'\nimport { Switch } from 'antd'\nimport { AiOutlineMail, AiFillSetting } from 'react-icons/ai'\n\nconst CreateUser = () => {\n  const [record, setRecord] = useState([])\n  const [user_email, setUserEmail] = useState()\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [user_name, setUserName] = useState()\n  const [roll, setRoll] = useState()\n  const [selectionType, setSelectionType] = useState('checkbox')\n  const [showInviteUserModal, setShowInviteUserModal] = useState(false)\n  const [show, setShow] = useState(false)\n  const [activeTab, setActiveTab] = useState('nav-home')\n\n  const handleTabClick = (tabId) => {\n    setActiveTab(tabId)\n  }\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChange = (checked) => {\n    //console.log(`switch to ${checked}`)\n  }\n  const handleShowInviteUserModal = () => {\n    setShowInviteUserModal(true)\n  }\n\n  const handleCloseInviteUserModal = () => {\n    setShowInviteUserModal(false)\n  }\n  // let value = localStorage.getItem('record')\n  // value = JSON.parse(value)\n  // let id = value.user._id\n  // //console.log(id)\n\n  // const saveData = async () => {\n  //   try {\n  //     if (!user_email || !user_name || !roll) {\n  //       return\n  //     }\n\n  //     const data = {\n  //       user_email,\n  //       user_name,\n  //       roll,\n  //     }\n\n  //     const response = await fetch(`${apiUrl}/user/register/record/adduser/${id}`, {\n  //       method: 'post',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(data),\n  //     })\n\n  //     const result = await response.json()\n  //     //console.log(result)\n  //     setUserEmail('')\n  //     setUserName('')\n  //     setRoll('')\n  //     handleCloseInviteUserModal()\n  //     // window.location.reload()\n  //   } catch (error) {\n  //     //console.error('Error:', error)\n  //     alert('An error occurred. Please try again later.')\n  //   }\n  // }\n\n  // const getDetails = async () => {\n  //   try {\n  //     const result = await fetch(`${apiUrl}/user/register/record/${id}`)\n  //     const data = await result.json()\n  //     setRecord(data)\n  //     getDetails()\n  //   } catch (error) {\n  //     //console.error('Error fetching customer record:', error)\n  //   }\n  // }\n\n  // let creation = record.user_creation\n  // let data\n  // if (Array.isArray(creation)) {\n  //   data = creation.map((item) => {\n  //     console.log(item.users)\n  //     return item.users\n  //   })\n\n  //   console.log(data)\n  // } else {\n  //   console.log('record.user_creation is not an array or is undefined')\n  // }\n  // console.log(data)\n\n  // useEffect(() => {\n  //   getDetails()\n  //   handleTabClick('nav-benutzer')\n  // }, [])\n\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: '_id',\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: 'NAME',\n      dataIndex: 'user_name',\n    },\n    {\n      title: 'E-Mail Adresse',\n      dataIndex: 'user_email', // Change 'email address' to 'emailAddress'\n    },\n    {\n      title: 'Super Verwalter',\n      dataIndex: 'superVerwalter', // Change 'super verwalter' to 'superVerwalter'\n    },\n    {\n      title: 'AKTION',\n      dataIndex: 'action',\n      render: () => (\n        <>\n          <GrEdit />\n          &nbsp; Bearbeiten &nbsp;&nbsp;&nbsp;\n          <MdDelete />\n          LÃ¶schen\n        </>\n      ),\n    },\n  ]\n\n  const data = [\n    {\n      _id: '1',\n      user_name: 'John Brown',\n      age: 32,\n      emailAddress: 'john@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:john@example.com', // Adjust to a valid email address\n      superVerwalter: 'Yes',\n      action: 'Edit', // Provide appropriate action value\n    },\n    {\n      _id: '2',\n      user_name: 'Jim Green',\n      age: 42,\n      emailAddress: 'jim@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:jim@example.com', // Adjust to a valid email address\n      superVerwalter: 'No',\n      action: 'Delete', // Provide appropriate action value\n    },\n    {\n      _id: '3',\n      user_name: 'Joe Black',\n      age: 32,\n      emailAddress: 'joe@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:joe@example.com', // Adjust to a valid email address\n      superVerwalter: 'Yes',\n      action: 'View', // Provide appropriate action value\n    },\n  ]\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n    },\n    getCheckboxProps: (record) => ({\n      disabled: record.name === 'Disabled User',\n      name: record.name,\n    }),\n  }\n  return (\n    <>\n      <div className=\"topBtnBox\">\n        <div className=\"\">\n          <button\n            className=\"btn btn\"\n            onClick={handleShowInviteUserModal}\n            style={{ background: '#0b5995', color: 'white' }}\n          >\n            <MdAdd />\n            &nbsp; Benutzer erstellen\n          </button>\n          <Modal size=\"lg\" show={showInviteUserModal} onHide={handleCloseInviteUserModal} centered>\n            <Modal.Header closeButton>\n              <Modal.Title> Benutzer einladen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"row\" style={{ background: 'white' }}>\n                <div className=\"col-sm-12\">\n                  <nav>\n                    <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                      <button\n                        className={`nav-link ${activeTab === 'nav-benutzer' ? 'active' : ''}`}\n                        id=\"nav-benutzer-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-selected={activeTab === 'nav-benutzer'}\n                        onClick={() => handleTabClick('nav-benutzer')}\n                        style={{ marginRight: '10px', marginLeft: '20px' }}\n                      >\n                        Benutzer\n                      </button>\n                      <button\n                        className={`nav-link ${activeTab === 'nav-rollen' ? 'active' : ''}`}\n                        id=\"nav-rollen-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-rollen\"\n                        aria-selected={activeTab === 'nav-rollen'}\n                        onClick={() => handleTabClick('nav-rollen')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Passwort\n                      </button>\n                      <button\n                        className={`nav-link ${activeTab === 'nav-lokalisierung' ? 'active' : ''}`}\n                        id=\"nav-lokalisierung-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-lokalisierung\"\n                        aria-selected={activeTab === 'nav-lokalisierung'}\n                        onClick={() => handleTabClick('nav-lokalisierung')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Lokalisierung\n                      </button>\n                      <button\n                        className={`nav-link ${\n                          activeTab === 'nav-benachrichtigungen' ? 'active' : ''\n                        }`}\n                        id=\"nav-benachrichtigungen-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-benachrichtigungen\"\n                        aria-selected={activeTab === 'nav-benachrichtigungen'}\n                        onClick={() => handleTabClick('nav-benachrichtigungen')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Benachrichtigungen\n                      </button>\n                      <button\n                        className={`nav-link ${\n                          activeTab === 'nav-fortgeschrittene' ? 'active' : ''\n                        }`}\n                        id=\"nav-fortgeschrittene-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-fortgeschrittene\"\n                        aria-selected={activeTab === 'nav-fortgeschrittene'}\n                        onClick={() => handleTabClick('nav-fortgeschrittene')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Fortgeschrittene\n                      </button>\n                    </div>\n                  </nav>\n                </div>\n              </div>\n              <br />\n              <div className=\"tab-content\" id=\"nav-tabContent\">\n                <div\n                  className={`tab-pane fade ${activeTab === 'nav-benutzer' ? 'show active' : ''}`}\n                  id=\"nav-benutzer\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-benutzer-tab\"\n                >\n                  <div className=\"row\">\n                    {/* <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        type=\"text\"\n                        name=\"user_name\"\n                        value={user_name}\n                        onChange={(e) => {\n                          setUserName(e.target.value)\n                        }}\n                      />\n                    </div> */}\n                    <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        type=\"text\"\n                        name=\"user_name\"\n                        value={user_name}\n                        onChange={(e) => {\n                          setUserName(e.target.value)\n                        }}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"StraÃe mit Hausnummer\"\n                        type=\"text\"\n                      />\n                      <br />\n                      <input className=\"form-control\" placeholder=\"Stadt\" type=\"text\" />\n\n                      <br />\n                      <input className=\"form-control\" placeholder=\"Standort\" type=\"text\" />\n                      <br />\n                      <select\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"roll\"\n                        value={roll}\n                        onChange={(e) => {\n                          setRoll(e.target.value)\n                        }}\n                      >\n                        <option value=\"employee\">Rolle</option>\n                      </select>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Vorname\"\n                        type=\"email\"\n                        name=\"user_email\"\n                        value={user_email}\n                        onChange={(e) => {\n                          setUserEmail(e.target.value)\n                        }}\n                      />\n                      <br />\n                      <input className=\"form-control\" type=\"text\" placeholder=\"PLZ\" />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"E-Mail Adresse\"\n                        type=\"email\"\n                        name=\"user_email\"\n                        value={user_email}\n                        onChange={(e) => {\n                          setUserEmail(e.target.value)\n                        }}\n                      />\n                      <br />\n\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Telefon\"\n                        // maxLength={10}\n                        // minLength={2}\n                        type=\"tel\"\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Mobil\"\n                        // maxLength={10}\n                        // minLength={2}\n                        type=\"tel\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className={`tab-pane fade ${activeTab === 'nav-rollen' ? 'show active' : ''}`}\n                  id=\"nav-rollen\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-rollen-tab\"\n                ></div>\n                <div\n                  className={`tab-pane fade ${\n                    activeTab === 'nav-mannschaften' ? 'show active' : ''\n                  }`}\n                  id=\"nav-mannschaften\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-mannschaften-tab\"\n                ></div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-12\">\n                  <div style={{ float: 'right' }}>\n                    <button\n                      className=\"btn\"\n                      onClick={handleClose}\n                      style={{ background: '#d04545', color: 'white' }}\n                    >\n                      Abbrechen\n                    </button>\n                    &nbsp;&nbsp;\n                    <button\n                      className=\"btn mx-2\"\n                      onClick={handleClose}\n                      style={{ background: '#0b5995', color: 'white' }}\n                    >\n                      Speichern\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Modal.Footer>\n          </Modal>\n          &nbsp; &nbsp;\n          <input\n            type=\"search\"\n            id=\"form1\"\n            placeholder=\"Suche\"\n            className=\"form-control boxSearchBtn\"\n          />\n          &nbsp; &nbsp;\n          <button type=\"button\" className=\"btn btn text-light\" style={{ background: '#0b5995' }}>\n            <AiFillSetting />\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <Table\n          rowSelection={{\n            type: selectionType,\n            ...rowSelection,\n          }}\n          style={{ overflowX: 'auto' }}\n          columns={columns}\n          dataSource={data}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(CreateUser)\n"],"names":["CreateUser","record","setRecord","useState","user_email","setUserEmail","user_name","setUserName","roll","setRoll","selectionType","setSelectionType","showInviteUserModal","setShowInviteUserModal","show","setShow","activeTab","setActiveTab","handleTabClick","tabId","handleClose","columns","title","dataIndex","render","text","_jsx","children","_jsxs","_Fragment","GrEdit","MdDelete","className","onClick","handleShowInviteUserModal","style","background","color","MdAdd","Modal","size","onHide","handleCloseInviteUserModal","centered","Header","closeButton","Title","Body","id","role","concat","marginRight","marginLeft","placeholder","type","name","value","onChange","e","target","Footer","float","AiFillSetting","Table","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","overflowX","dataSource","_id","age","emailAddress","superVerwalter","action","React"],"sourceRoot":""}