{"version":3,"file":"static/js/7893.351c4692.chunk.js","mappings":"+PA+BA,MA6CA,EA7CkBA,IAA8C,IAA7C,SAAEC,EAAQ,SAAEC,EAAQ,gBAAEC,GAAiBH,EAgCxD,OACEI,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,IAAU,CACTC,UAAU,yCACVJ,gBAAiBA,EACjBD,SAAUA,EACVD,SA/BoBO,IACxB,IAAKA,EAEH,YADAP,EAAS,MAIX,IAAIQ,EAAMD,EAAKE,UACXC,EAAQH,EAAKI,WAAa,EAC1BC,EAAOL,EAAKM,cAAgB,IAIhC,GAFAD,GAAQA,EAAO,GAAK,IAAO,KAEvBA,EAAO,KAET,YADAE,QAAQC,MAAM,8BAIhBP,EAAMA,EAAIQ,WAAWC,SAAS,EAAG,KACjCP,EAAQA,EAAMM,WAAWC,SAAS,EAAG,KACrB,GAAAC,OAAMV,GAAGU,OAAGR,GAAKQ,OAAGN,GAApC,MACMO,EAAa,IAAIC,KAAKR,EAAMF,EAAQ,EAAGF,GAE7CR,EAASmB,EAAW,EAUhBE,WAAW,gBAET,C,6JC7DV,MAAMC,EAAWA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACrB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IACvCC,GAAWC,EAAAA,EAAAA,MAIXC,EAASC,yBAMRC,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,CACrDO,oBAAoB,EACpBC,wBAAyBC,QAAkB,OAAVX,QAAU,IAAVA,GAA2B,QAAjBR,EAAVQ,EAAYO,uBAAe,IAAAf,OAAjB,EAAVA,EAA6BkB,yBAC9DE,oBAAqBC,MAAMC,KAAK,CAAEC,OAXd,IAWuC,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAO,CAChEC,sBAAiC,OAAV1B,QAAU,IAAVA,GAAsB,QAAZgB,EAAVhB,EAAY2B,kBAAU,IAAAX,GAAgB,QAAhBC,EAAtBD,EAAwBY,sBAAc,IAAAX,OAA5B,EAAVA,EAAwCY,KAAKC,GAC3DA,EAAKC,mBAEdC,sBAAiC,OAAVhC,QAAU,IAAVA,GAAsB,QAAZkB,EAAVlB,EAAY2B,kBAAU,IAAAT,GAAgB,QAAhBC,EAAtBD,EAAwBU,sBAAc,IAAAT,OAA5B,EAAVA,EAAwCU,KAAKC,GAC3DA,EAAKG,mBAEdC,wBAAmC,OAAVlC,QAAU,IAAVA,GAAsB,QAAZoB,EAAVpB,EAAY2B,kBAAU,IAAAP,GAAgB,QAAhBC,EAAtBD,EAAwBQ,sBAAc,IAAAP,OAA5B,EAAVA,EAAwCQ,KAAKC,GAC7DA,EAAKK,qBAEdC,uBAAkC,OAAVpC,QAAU,IAAVA,GAAsB,QAAZsB,EAAVtB,EAAY2B,kBAAU,IAAAL,GAAgB,QAAhBC,EAAtBD,EAAwBM,sBAAc,IAAAL,OAA5B,EAAVA,EAAwCM,KAAKC,GAC5DA,EAAKO,oBAEdC,sBAAiC,OAAVtC,QAAU,IAAVA,GAAsB,QAAZwB,EAAVxB,EAAY2B,kBAAU,IAAAH,GAAgB,QAAhBC,EAAtBD,EAAwBI,sBAAc,IAAAH,OAA5B,EAAVA,EAAwCI,KAAKC,GAC3DA,EAAKS,mBAEf,OAGIC,EAAeC,IAAoBvC,EAAAA,EAAAA,UAAS,CACjDwC,kBAA4B,OAAV1C,QAAU,IAAVA,GAAyB,QAAfP,EAAVO,EAAYwC,qBAAa,IAAA/C,OAAf,EAAVA,EAA2BiD,mBAAoB,MAG5DC,EAAkBC,IAAuB1C,EAAAA,EAAAA,UAAS,CACvD2C,OAAiB,OAAV7C,QAAU,IAAVA,GAA4B,QAAlBN,EAAVM,EAAY2C,wBAAgB,IAAAjD,OAAlB,EAAVA,EAA8BmD,QAAS,GAC9CC,OAAiB,OAAV9C,QAAU,IAAVA,GAA4B,QAAlBL,EAAVK,EAAY2C,wBAAgB,IAAAhD,OAAlB,EAAVA,EAA8BmD,QAAS,GAC9CC,SAAmB,OAAV/C,QAAU,IAAVA,GAA4B,QAAlBJ,EAAVI,EAAY2C,wBAAgB,IAAA/C,OAAlB,EAAVA,EAA8BmD,UAAW,GAClDC,KAAe,OAAVhD,QAAU,IAAVA,GAA4B,QAAlBH,EAAVG,EAAY2C,wBAAgB,IAAA9C,OAAlB,EAAVA,EAA8BmD,MAAO,GAC1CC,KAAe,OAAVjD,QAAU,IAAVA,GAA4B,QAAlBF,EAAVE,EAAY2C,wBAAgB,IAAA7C,OAAlB,EAAVA,EAA8BmD,MAAO,GAC1CC,KAAe,OAAVlD,QAAU,IAAVA,GAA4B,QAAlBD,EAAVC,EAAY2C,wBAAgB,IAAA5C,OAAlB,EAAVA,EAA8BmD,MAAO,KAwBtCC,EAAmBA,CAACC,EAAGC,KAC3B,MAAM,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,QAAEC,GAAYL,EAAEM,QAAU,CAAC,EACpDC,GAAeC,IACb,MAAMC,EAAwB,IAAID,EAAehC,gBAEjD,GAAa,aAAT4B,EACFK,EAAsBR,GAAS,IAC1BQ,EAAsBR,GACzB,CAACC,GAAOG,QAEL,GAAa,qBAATH,EAA6B,CACtC,MAAMQ,EAAaP,EAAMQ,QAAQ,WAAY,IACzC,uBAAuBC,KAAKF,KAC9BD,EAAsBR,GAAS,IAC1BQ,EAAsBR,GACzBd,iBAAkBuB,GAGxB,MAAO,GAAa,sBAATR,EAA8B,CACvC,MAAMQ,EAAaP,EAAMQ,QAAQ,WAAY,IACzC,uBAAuBC,KAAKF,KAC9BD,EAAsBR,GAAS,IAC1BQ,EAAsBR,GACzBhB,kBAAmByB,GAGzB,MAEED,EAAsBR,GAAS,IAC1BQ,EAAsBR,GACzB,CAACC,GAAOC,GAGZ,MAAO,IAAKK,EAAgBhC,eAAgBiC,EAAuB,GACnE,GA8BGlC,EAAYgC,IAAiBzD,EAAAA,EAAAA,UAAS,CAC3C0B,eAAgBf,MAAMC,KAAK,CAAEC,OAjIT,IAiIkC,SAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAO,CAC3D3C,iBAA4B,OAAV/B,QAAU,IAAVA,GAAsB,QAAZiE,EAAVjE,EAAY2B,kBAAU,IAAAsC,GAAgB,QAAhBC,EAAtBD,EAAwBrC,sBAAc,IAAAsC,OAA5B,EAAVA,EAAwCrC,KAAKC,GACtDA,EAAKC,mBAEdE,iBAA4B,OAAVjC,QAAU,IAAVA,GAAsB,QAAZmE,EAAVnE,EAAY2B,kBAAU,IAAAwC,GAAgB,QAAhBC,EAAtBD,EAAwBvC,sBAAc,IAAAwC,OAA5B,EAAVA,EAAwCvC,KAAKC,GACtDA,EAAKG,mBAEdE,mBAA8B,OAAVnC,QAAU,IAAVA,GAAsB,QAAZqE,EAAVrE,EAAY2B,kBAAU,IAAA0C,GAAgB,QAAhBC,EAAtBD,EAAwBzC,sBAAc,IAAA0C,OAA5B,EAAVA,EAAwCzC,KAAKC,GACxDA,EAAKK,qBAEdE,kBAA6B,OAAVrC,QAAU,IAAVA,GAAsB,QAAZuE,EAAVvE,EAAY2B,kBAAU,IAAA4C,GAAgB,QAAhBC,EAAtBD,EAAwB3C,sBAAc,IAAA4C,OAA5B,EAAVA,EAAwC3C,KAAKC,GACvDA,EAAKO,oBAEdE,iBAA4B,OAAVvC,QAAU,IAAVA,GAAsB,QAAZyE,EAAVzE,EAAY2B,kBAAU,IAAA8C,GAAgB,QAAhBC,EAAtBD,EAAwB7C,sBAAc,IAAA8C,OAA5B,EAAVA,EAAwC7C,KAAKC,GACtDA,EAAKS,mBAEf,MAqBGoC,EAAwBA,CAACvB,EAAGC,KAChC,MAAM,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,QAAEC,GAAYL,EAAEM,QAAU,CAAC,EACpDlD,GAAoBoE,IAClB,MAAMC,EAA6B,IAAID,EAAoBhE,qBAE3D,GAAa,aAAT4C,EACFqB,EAA2BxB,GAAS,IAC/BwB,EAA2BxB,GAC9B,CAACC,GAAOG,QAEL,GAAa,0BAATH,EAAkC,CAC3C,MAAMQ,EAAaP,EAAMQ,QAAQ,WAAY,IACzC,uBAAuBC,KAAKF,KAC9Be,EAA2BxB,GAAS,IAC/BwB,EAA2BxB,GAC9Bf,sBAAuBwB,GAG7B,MAAO,GAAa,2BAATR,EAAmC,CAC5C,MAAMQ,EAAaP,EAAMQ,QAAQ,WAAY,IACzC,uBAAuBC,KAAKF,KAC9Be,EAA2BxB,GAAS,IAC/BwB,EAA2BxB,GAC9BjB,uBAAwB0B,GAG9B,CAEA,MAAO,IAAKc,EAAqBhE,oBAAqBiE,EAA4B,GAClF,EA+BEC,EAA0B1B,IAC9B,GAAIA,aAAa/D,KAAM,CACrB,IAAI0F,EAAa3B,EAAEtE,cAAcG,WACjC,MAAMJ,EAAOmG,SAASD,EAAWE,UAAU,EAAG,GAAI,IAC9CF,EAAWhE,OAAS,IACtBgE,EAAaA,EAAWE,UAAU,EAAG,IAEvC,MAAMC,EAAU,IAAI7F,KAAK,GAADF,OAAIN,EAAI,KAAAM,OAAIiE,EAAExE,WAAa,EAAC,KAAAO,OAAIiE,EAAE1E,YAE1DkE,EAAoB,IAAKD,EAAkBK,IAAKkC,GAClD,MAAO,GAAI9B,EAAEM,OAAQ,CACnB,MAAM,KAAEJ,EAAI,MAAEC,EAAK,KAAEC,EAAI,QAAEC,GAAYL,EAAEM,OAEzC,GAAa,QAATJ,GAA2B,SAATE,EAAiB,CACrC,MAAMM,EAAaP,EAAMQ,QAAQ,iEAAiC,IAClEnB,EAAoB,IAAKD,EAAkBM,IAAKa,GAClD,MACElB,EAAoB,IAAKD,EAAkB,CAACW,GAAgB,aAATE,EAAsBC,EAAUF,GAEvF,WAAuB4B,IAAZ/B,EAAEG,MACXX,EAAoB,IAAKD,EAAkByC,SAAUhC,EAAEG,QAEvDxE,QAAQC,MAAM,mDAChB,EAkBF,IAAIqG,EAAMC,aAAaC,QAAQ,kBAC3BC,EAAUC,KAAKC,MAAML,GACzB,MAAMM,EAAO,CACXhE,aACApB,kBACAiC,gBACAG,mBACAiD,YAAoB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,KA0QxB,OArEAC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACd5D,EAAiB,CACfC,iBAA4B,OAAV1C,QAAU,IAAVA,GAAyB,QAAf+F,EAAV/F,EAAYwC,qBAAa,IAAAuD,OAAf,EAAVA,EAA2BrD,mBAE/CE,EAAoB,CAClBC,MAAiB,OAAV7C,QAAU,IAAVA,GAA4B,QAAlBgG,EAAVhG,EAAY2C,wBAAgB,IAAAqD,OAAlB,EAAVA,EAA8BnD,MACrCC,MAAiB,OAAV9C,QAAU,IAAVA,GAA4B,QAAlBiG,EAAVjG,EAAY2C,wBAAgB,IAAAsD,OAAlB,EAAVA,EAA8BnD,MACrCC,QAAmB,OAAV/C,QAAU,IAAVA,GAA4B,QAAlBkG,EAAVlG,EAAY2C,wBAAgB,IAAAuD,OAAlB,EAAVA,EAA8BnD,QACvCC,IAAe,OAAVhD,QAAU,IAAVA,GAA4B,QAAlBmG,EAAVnG,EAAY2C,wBAAgB,IAAAwD,OAAlB,EAAVA,EAA8BnD,IACnCC,IAAe,OAAVjD,QAAU,IAAVA,GAA4B,QAAlBoG,EAAVpG,EAAY2C,wBAAgB,IAAAyD,OAAlB,EAAVA,EAA8BnD,IACnCC,IAAe,OAAVlD,QAAU,IAAVA,GAA4B,QAAlBqG,EAAVrG,EAAY2C,wBAAgB,IAAA0D,OAAlB,EAAVA,EAA8BnD,MAErC1C,GAAoB8F,IAAS,IACxBA,EAEH1F,oBAAqBC,MAAMC,KAAK,CAAEC,OAtehB,IAseyC,CAACwF,EAAGlD,KAAK,CAClEzC,oBAAqB0F,EAAU1F,oBAAoBiB,KAAI,CAACC,EAAMuB,KAAK,IAAAmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAM,IACpExF,EACHJ,uBACY,OAAV1B,QAAU,IAAVA,GAAsB,QAAZwG,EAAVxG,EAAY2B,kBAAU,IAAA6E,GAAgB,QAAhBC,EAAtBD,EAAwB5E,sBAAc,IAAA6E,GAAS,QAATC,EAAtCD,EAAyCpD,UAAM,IAAAqD,OAArC,EAAVA,EAAiD3E,mBACjDD,EAAKJ,sBACPM,uBACY,OAAVhC,QAAU,IAAVA,GAAsB,QAAZ2G,EAAV3G,EAAY2B,kBAAU,IAAAgF,GAAgB,QAAhBC,EAAtBD,EAAwB/E,sBAAc,IAAAgF,GAAS,QAATC,EAAtCD,EAAyCvD,UAAM,IAAAwD,OAArC,EAAVA,EAAiD5E,mBACjDH,EAAKE,sBACPE,yBACY,OAAVlC,QAAU,IAAVA,GAAsB,QAAZ8G,EAAV9G,EAAY2B,kBAAU,IAAAmF,GAAgB,QAAhBC,EAAtBD,EAAwBlF,sBAAc,IAAAmF,GAAS,QAATC,EAAtCD,EAAyC1D,UAAM,IAAA2D,OAArC,EAAVA,EAAiD7E,qBACjDL,EAAKI,wBACPE,wBACY,OAAVpC,QAAU,IAAVA,GAAsB,QAAZiH,EAAVjH,EAAY2B,kBAAU,IAAAsF,GAAgB,QAAhBC,EAAtBD,EAAwBrF,sBAAc,IAAAsF,GAAS,QAATC,EAAtCD,EAAyC7D,UAAM,IAAA8D,OAArC,EAAVA,EAAiD9E,oBACjDP,EAAKM,uBACPE,uBACY,OAAVtC,QAAU,IAAVA,GAAsB,QAAZoH,EAAVpH,EAAY2B,kBAAU,IAAAyF,GAAgB,QAAhBC,EAAtBD,EAAwBxF,sBAAc,IAAAyF,GAAS,QAATC,EAAtCD,EAAyChE,UAAM,IAAAiE,OAArC,EAAVA,EAAiD/E,mBACjDT,EAAKQ,sBACR,YAGLqB,GAAeC,IAAc,IACxBA,EACHhC,eAAgBf,MAAMC,KAAK,CAAEC,OA7fX,IA6foC,CAACwF,EAAGlD,KAAK,IAAAkE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAM,CACnE3G,kBACY,OAAV/B,QAAU,IAAVA,GAAsB,QAAZuH,EAAVvH,EAAY2B,kBAAU,IAAA4F,GAAgB,QAAhBC,EAAtBD,EAAwB3F,sBAAc,IAAA4F,GAAS,QAATC,EAAtCD,EAAyCnE,UAAM,IAAAoE,OAArC,EAAVA,EAAiD1F,oBACb,QAD6B2F,EACjE9D,EAAehC,eAAeyB,UAAM,IAAAqE,OAAA,EAApCA,EAAsC3F,mBACtC,GACFE,kBACY,OAAVjC,QAAU,IAAVA,GAAsB,QAAZ2H,EAAV3H,EAAY2B,kBAAU,IAAAgG,GAAgB,QAAhBC,EAAtBD,EAAwB/F,sBAAc,IAAAgG,GAAS,QAATC,EAAtCD,EAAyCvE,UAAM,IAAAwE,OAArC,EAAVA,EAAiD5F,oBACb,QAD6B6F,EACjElE,EAAehC,eAAeyB,UAAM,IAAAyE,OAAA,EAApCA,EAAsC7F,mBACtC,GACFE,oBACY,OAAVnC,QAAU,IAAVA,GAAsB,QAAZ+H,EAAV/H,EAAY2B,kBAAU,IAAAoG,GAAgB,QAAhBC,EAAtBD,EAAwBnG,sBAAc,IAAAoG,GAAS,QAATC,EAAtCD,EAAyC3E,UAAM,IAAA4E,OAArC,EAAVA,EAAiD9F,sBACb,QAD+B+F,EACnEtE,EAAehC,eAAeyB,UAAM,IAAA6E,OAAA,EAApCA,EAAsC/F,qBACtC,GACFE,mBACY,OAAVrC,QAAU,IAAVA,GAAsB,QAAZmI,EAAVnI,EAAY2B,kBAAU,IAAAwG,GAAgB,QAAhBC,EAAtBD,EAAwBvG,sBAAc,IAAAwG,GAAS,QAATC,EAAtCD,EAAyC/E,UAAM,IAAAgF,OAArC,EAAVA,EAAiDhG,qBACb,QAD8BiG,EAClE1E,EAAehC,eAAeyB,UAAM,IAAAiF,OAAA,EAApCA,EAAsCjG,oBACtC,GACFE,kBACY,OAAVvC,QAAU,IAAVA,GAAsB,QAAZuI,EAAVvI,EAAY2B,kBAAU,IAAA4G,GAAgB,QAAhBC,EAAtBD,EAAwB3G,sBAAc,IAAA4G,GAAS,QAATC,EAAtCD,EAAyCnF,UAAM,IAAAoF,OAArC,EAAVA,EAAiDlG,oBACb,QAD6BmG,EACjE9E,EAAehC,eAAeyB,UAAM,IAAAqF,OAAA,EAApCA,EAAsCnG,mBACtC,GACH,OACA,GACF,CAACvC,EAphBkB,KAshBtB8F,EAAAA,EAAAA,YAAU,KAhYJnE,EAAWC,eAAeb,OAvJd,IAwJd4C,GAAegF,IAAI,IACdA,EACH/G,eAAgB,IACX+G,EAAK/G,eACR,CACEG,iBAAkB,GAClBE,iBAAkB,GAClBE,mBAAoB,GACpBI,iBAAkB,SAmPVqG,WAChB,IACE,MAAMC,QAAeC,MAAM,GAAD3J,OAAIkB,EAAM,2BAAAlB,OAA0BqG,EAAQK,MAChEF,QAAakD,EAAOE,OAC1B9I,EAAc0F,EAChB,CAAE,MAAO3G,GACPD,QAAQC,MAAM,kCAAmCA,EACnD,GAgIAgK,GAlVIzI,EAAgBK,oBAAoBG,OAxMxB,IAyMdP,GAAoBmI,IAAI,IACnBA,EACH/H,oBAAqB,IAChB+H,EAAK/H,oBACR,CACEc,sBAAuB,GACvBM,sBAAuB,GACvBE,wBAAyB,GACzBI,sBAAuB,GACvBF,uBAAwB,QAyUP,GACxB,KAED6G,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7K,SAAA,EACED,EAAAA,EAAAA,KAAC+K,EAAAA,QAAQ,KACTF,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,kBAAiBF,SAAA,EAC9B4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,cAAaF,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBAEN4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,iBAAgBF,SAAA,EAC7B4K,EAAAA,EAAAA,MAAA,OAAA5K,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClB4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,YAAWF,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAIgL,MAAO,CAAEC,MAAO,WAAYhL,SAAC,0BACjCD,EAAAA,EAAAA,KAAA,KAAGG,UAAU,GAAG6K,MAAO,CAAEC,MAAO,WAAYhL,SAAC,oCAG7C4K,EAAAA,EAAAA,MAAA,OAAA5K,SAAA,EACE4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,WAAUF,SAAA,EACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAGPD,EAAAA,EAAAA,KAAA,OAAAC,SACGsD,EAAWC,gBACVD,EAAWC,eAAeC,KAAI,CAACyH,EAAOjG,KACpC4F,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,MAAKF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAWmF,GAAMD,EAAiBC,EAAGC,GACrCE,MAAO+F,EAAMvH,iBACbuB,KAAK,mBACLE,KAAK,OACL+F,YAAY,UACZhL,UAAU,iBACViL,GAAE,SAAArK,OAAWkE,GACboG,UAAW,GACXC,UAAW,WAKnBtL,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAWmF,GAAMD,EAAiBC,EAAGC,GACrCE,MAAO+F,EAAMrH,iBACbuB,KAAK,OACLF,KAAK,mBACLiG,YAAY,WACZhL,UAAU,eACViL,GAAE,SAAArK,OAAWkE,GAEboG,UAAW,GACXC,UAAW,WAKnBtL,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMF,UACnBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAWmF,GACTD,EAAiBC,EAAGC,GAEtBE,MAAO+F,EAAMnH,mBACbqB,KAAK,OACLF,KAAK,qBACLiG,YAAY,UACZhL,UAAU,eACViL,GAAE,WAAArK,OAAakE,YAMvBjF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMF,UACnBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SAUEH,SAAWmF,GAAMD,EAAiBC,EAAGC,GACrCE,MAAO+F,EAAM/G,iBACbe,KAAK,mBACLiG,YAAY,eACZhL,UAAU,eACViL,GAAE,SAAArK,OAAWkE,GACboG,UAAW,GACXC,UAAW,WAKnBtL,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMF,UACnBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SAUEH,SAAWmF,GACTD,EAAiBC,EAAGC,GAEtBE,MAAO+F,EAAMjH,kBACbmB,KAAK,OACLF,KAAK,oBACLiG,YAAY,eACZhL,UAAU,eACViL,GAAE,SAAArK,OAAWkE,GACboG,UAAW,GACXC,UAAW,YAtGKrG,gBAiHtCjF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClB4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,YAAWF,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAIgL,MAAO,CAAEC,MAAO,WAAYhL,SAAC,uBACjC4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,MAAKF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,SAAOuL,QAAQ,0BAA0BpL,UAAU,0BAAyBF,SAAC,kDAG7E4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,iCAAgCF,SAAA,EAC7CD,EAAAA,EAAAA,KAAA,SACEoF,KAAK,WASLvF,SApQgB2L,KACpCpJ,GAAoB8F,IAAS,IACxBA,EACH5F,yBAA0B4F,EAAU5F,wBACpCE,oBAAqB0F,EAAU5F,wBAC3BH,EAAgBK,oBAAoBiB,KAAK8D,IAAI,CAC3CjE,sBAAuB,GACvBM,sBAAuB,GACvBE,wBAAyB,GACzBI,sBAAuB,GACvBF,uBAAwB,OAE1BT,EAAWC,eAAeC,KAAK8D,IAAI,CACjCjE,sBAAuBiE,EAAK5D,iBAC5BC,sBAAuB2D,EAAK1D,iBAC5BC,wBAAyByD,EAAKxD,mBAC9BG,sBAAuBqD,EAAKpD,iBAC5BH,uBAAwBuD,EAAKtD,yBAElC,EAkPiBoB,QAASlD,EAAgBG,wBACzB4C,KAAK,6BAEPlF,EAAAA,EAAAA,KAAA,kBAGJA,EAAAA,EAAAA,KAAA,KAAGG,UAAU,GAAG6K,MAAO,CAAEC,MAAO,WAAYhL,SAAC,oCAI7C4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,gBAAeF,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAGNkC,EAAgBK,qBACfL,EAAgBK,oBAAoBiB,KAAI,CAACyH,EAAOjG,KAC9C4F,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,MAAKF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAWmF,GAAMuB,EAAsBvB,EAAGC,GAC1CE,MAAO+F,EAAM5H,sBACb4B,KAAK,wBACLE,KAAK,OACL+F,YAAY,UACZhL,UAAU,wBAKlBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAWmF,GAAMuB,EAAsBvB,EAAGC,GAC1CE,MAAO+F,EAAMtH,sBACbsB,KAAK,wBACLE,KAAK,OACL+F,YAAY,WACZhL,UAAU,wBAKlBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAWmF,GAAMuB,EAAsBvB,EAAGC,GAC1CE,MAAO+F,EAAMpH,wBACboB,KAAK,0BACLE,KAAK,OACL+F,YAAY,UACZhL,UAAU,wBAKlBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAWmF,GAAMuB,EAAsBvB,EAAGC,GAC1CE,MAAO+F,EAAMhH,sBACbgB,KAAK,wBACLE,KAAK,OACL+F,YAAY,eACZhL,UAAU,eACVkL,UAAW,GACXC,UAAW,WAKnBtL,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAWmF,GAAMuB,EAAsBvB,EAAGC,GAC1CE,MAAO+F,EAAMlH,uBACbkB,KAAK,yBACLE,KAAK,OACL+F,YAAY,eACZhL,UAAU,eACVkL,UAAW,GACXC,UAAW,YAtEKrG,cAgFpCjF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClB4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,YAAWF,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAIgL,MAAO,CAAEC,MAAO,WAAYhL,SAAC,4BAejC4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,MAAKF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,0BAAyBF,SAAC,sBAC3CD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,YACEmF,MAAOf,EAAcE,iBACrBY,KAAK,mBACLrF,SAnnBSmF,IAC3B,MAAM,KAAEE,EAAI,MAAEC,GAAUH,EAAEM,OAE1BjB,EAAiB,IAAKD,EAAe,CAACc,GAAOC,GAAQ,EAinBnChF,UAAU,eACVgL,YAAY,2BAIlBnL,EAAAA,EAAAA,KAAA,eAIJA,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClB4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,YAAWF,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAIgL,MAAO,CAAEC,MAAO,WAAYhL,SAAC,mDAejC4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,gBAAeF,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,oBAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gCAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,WAELD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,cAGP4K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,MAAKF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAU6G,EACVxB,KAAK,QACLC,MAAOZ,EAAiBE,MACxBW,KAAK,OACL+F,YAAY,UACZhL,UAAU,wBAKlBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAU6G,EACVxB,KAAK,QACLC,MAAOZ,EAAiBG,MACxBU,KAAK,OACL+F,YAAY,WACZhL,UAAU,wBAKlBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAACyL,EAAAA,QAAS,CACRtL,UAAU,eACVL,SAAUyE,EAAiBK,IAC3B/E,SAAU6G,EAEV3G,gBAAiB,wBAKzBC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACE0L,OA5qBJC,IAClB,MAAM,KAAEzG,EAAI,MAAEC,GAAUwG,EAAMrG,OAC9B,IAAIsG,EAAmBzG,EAAM0G,OACN,MAAMjG,KAAKT,KAGhCyG,EAAmBzG,EAAMQ,QAAQ,WAAY,UAG/CnB,EAAoB,IACfD,EACH,CAACW,GAAO0G,GACR,EAiqBoB/L,SAAU6G,EACVvB,MAAOZ,EAAiBI,QACxBO,KAAK,UACLE,KAAK,OACL+F,YAAY,2BACZhL,UAAU,wBAMlBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAU6G,EACVxB,KAAK,MACLC,MAAOZ,EAAiBM,IACxBO,KAAK,OACLjF,UAAU,eACVgL,YAAY,MACZE,UAAW,GACXC,UAAW,WAKnBtL,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,SACEH,SAAU6G,EACVxB,KAAK,MACLC,MAAOZ,EAAiBO,IACxBM,KAAK,OACLjF,UAAU,eACVgL,YAAY,uBAQ1BnL,EAAAA,EAAAA,KAAA,UACA6K,EAAAA,EAAAA,MAAA,OAAK1K,UAAU,gBAAeF,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,UACE8L,QAr9BKC,KACjB7E,aAAa8E,WAAW,SACxBjK,EAAS,0BAA0B,EAo9BvBqD,KAAK,SACLjF,UAAU,UACV6K,MAAO,CAAEiB,WAAY,UAAWhB,MAAO,SAAUhL,SAClD,cAEQ,aAETD,EAAAA,EAAAA,KAAA,UACE8L,QArpBGtB,UACf,MAAMhH,EAAiB+D,EAAKhE,WAAWC,eAIvC,IAAK,MAAM0I,KAAU1I,EAAgB,CACnC,GAAI0I,EAAO/H,kBAAoB+H,EAAO/H,iBAAiBgI,WAFtC,OAGf,OAAOC,EAAAA,GAAMC,QAAQ,8BAEvB,GAAIH,EAAOjI,mBAAqBiI,EAAOjI,kBAAkBkI,WALxC,OAMf,OAAOC,EAAAA,GAAMC,QAAQ,2BAEzB,CACA,IAAIC,EAAc,IAAIrL,KAClBsL,EAA6B,OAAhBhI,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBK,IACnC,GAAoB,OAAhBL,QAAgB,IAAhBA,GAAAA,EAAkBK,IAAK,CAAC,IAAD4H,EAEzB,IADiD,QAAlCA,EAAG,IAAIvL,KAAqB,OAAhBsD,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBK,YAAI,IAAA4H,OAAA,EAA/BA,EAAiC9L,eACnC,KACd,OAAO0L,EAAAA,GAAMC,QAAQ,8CAEzB,CACA,GAAI9H,GAAoBA,EAAiBK,IAAK,CAG5C,GAFkB,IAAI3D,KAAKsD,EAAiBK,KAE1B0H,EAChB,OAAOF,EAAAA,GAAMC,QAAQ,oDAEzB,CACA,IAAII,EAAY,IAAIxL,KAAKsL,GAKzB,IAHgCD,EAAYI,UAAYD,EAAUC,WAChB,SAFjC,GAKf,OAAON,EAAAA,GAAMC,QACX,8EAIJ,IACE,IAAIM,EACAC,EAEAxF,GACFuF,EAAG,GAAA5L,OAAMkB,EAAM,2BAAAlB,OAA0BqG,EAAQK,KACjDmF,EAAS,QAETD,EAAG,GAAA5L,OAAMkB,EAAM,aACf2K,EAAS,QAEX,IAAIC,QAAiBnC,MAAMiC,EAAK,CAC9BC,OAAQA,EACRE,QAAS,CACP,eAAgB,oBAElBC,KAAM1F,KAAK2F,UAAUzF,KAGD,aADHsF,EAASlC,QACjBsC,OACTb,EAAAA,GAAMc,QAAQ,iCAEdd,EAAAA,GAAMxL,MACJ,qFAGN,CAAE,MAAOA,GACPwL,EAAAA,GAAMxL,MAAM,uCACd,GAmlBYwE,KAAK,SACL4F,MAAO,CAAEiB,WAAY,UAAWhB,MAAO,SACvC9K,UAAU,UAASF,SACpB,wBAMPD,EAAAA,EAAAA,KAACmN,EAAAA,GAAc,SAEhB,EAIP,EAAeC,EAAAA,KAAWjM,E","sources":["views/customer/Date.jsx","views/customer/attorney/Attorney.jsx"],"sourcesContent":["// import React from 'react'\n// import DatePicker from 'react-datepicker'\n// import 'react-datepicker/dist/react-datepicker.css'\n// import PropTypes from 'prop-types'\n\n// const DatePiker = ({ onChange, selected, placeholderText }) => {\n//   DatePiker.propTypes = {\n//     onChange: PropTypes.func.isRequired,\n//     selected: PropTypes.func.isRequired,\n//     placeholderText: PropTypes.func.isRequired,\n//   }\n\n//   return (\n//     <div>\n//       <DatePicker\n//         className=\"form-control form-search-control w-101\"\n//         placeholderText={placeholderText}\n//         selected={selected}\n//         onChange={onChange}\n//         dateFormat=\"dd.MM.yyyy\"\n//       />\n//     </div>\n//   )\n// }\n\n// export default DatePiker\nimport React from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport PropTypes from 'prop-types'\n\nconst DatePiker = ({ onChange, selected, placeholderText }) => {\n  DatePiker.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    selected: PropTypes.instanceOf(Date).isRequired,\n    placeholderText: PropTypes.string.isRequired,\n  }\n\n  const handleDateChange = (date) => {\n    if (!date) {\n      onChange(null)\n      return\n    }\n\n    let day = date.getDate()\n    let month = date.getMonth() + 1\n    let year = date.getFullYear() % 100\n\n    year += year < 50 ? 2000 : 1900\n\n    if (year < 1900) {\n      console.error('Year cannot be before 1900')\n      return\n    }\n\n    day = day.toString().padStart(2, '0')\n    month = month.toString().padStart(2, '0')\n    const dateString = `${day}${month}${year}`\n    const parsedDate = new Date(year, month - 1, day)\n\n    onChange(parsedDate)\n  }\n\n  return (\n    <div>\n      <DatePicker\n        className=\"form-control form-search-control w-101\"\n        placeholderText={placeholderText}\n        selected={selected}\n        onChange={handleDateChange}\n        dateFormat=\"dd.MM.yyyy\"\n      />\n    </div>\n  )\n}\n\nexport default DatePiker\n","import React, { useEffect, useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Customer from '../Customer'\nimport Form from 'react-bootstrap/Form'\nimport { useNavigate } from 'react-router-dom'\nimport DatePiker from '../Date'\nimport { Jodit } from 'jodit-react'\nimport 'react-phone-input-2/lib/style.css'\nimport PhoneInput from 'react-phone-input-2'\n\nconst Attorney = () => {\n  const [recordData, setRecordData] = useState([])\n  const navigate = useNavigate()\n  const maxFields = 10\n  const initialFields = 4\n  const notify = (dataa) => toast(dataa)\n  const apiUrl = process.env.REACT_APP_API_URL\n  const cancelData = () => {\n    localStorage.removeItem('tabId')\n    navigate('/customer/customer_info')\n  }\n\n  const [powerOfAttorney, setPowerOfAttorney] = useState({\n    AttorneyMasterData: false,\n    adoptDataFromHealthcare: Boolean(recordData?.powerOfAttorney?.adoptDataFromHealthcare),\n    powerOfAttorneyData: Array.from({ length: initialFields }, () => ({\n      powerOfAttorney_fname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_fname\n      }),\n      powerOfAttorney_lname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_lname\n      }),\n      powerOfAttorney_address: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_address\n      }),\n      powerOfAttorney_mobile: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_mobile\n      }),\n      powerOfAttorney_phone: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_phone\n      }),\n    })),\n  })\n\n  const [careProvision, setCareProvision] = useState({\n    care_association: recordData?.careProvision?.care_association || '',\n  })\n\n  const [securingattorney, setSecuringattorney] = useState({\n    fname: recordData?.securingattorney?.fname || '',\n    lname: recordData?.securingattorney?.lname || '',\n    address: recordData?.securingattorney?.address || '',\n    dob: recordData?.securingattorney?.dob || '',\n    plz: recordData?.securingattorney?.plz || '',\n    ort: recordData?.securingattorney?.ort || '',\n  })\n\n  // const healthCareChange = (e, index, fieldName) => {\n  //   let value\n\n  //   if (e && e.target) {\n  //     value = e.target.value\n  //   } else {\n  //     value = e\n  //   }\n\n  //   setHealthCare((prevHealthCare) => {\n  //     const updatedHealthCareData = [...prevHealthCare.healthCareData]\n\n  //     updatedHealthCareData[index] = {\n  //       ...updatedHealthCareData[index],\n  //       [fieldName]: value,\n  //     }\n\n  //     return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n  //   })\n  // }\n\n  const healthCareChange = (e, index) => {\n    const { name, value, type, checked } = e.target || {}\n    setHealthCare((prevHealthCare) => {\n      const updatedHealthCareData = [...prevHealthCare.healthCareData]\n\n      if (type === 'checkbox') {\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          [name]: checked,\n        }\n      } else if (name === 'healthCare_phone') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedHealthCareData[index] = {\n            ...updatedHealthCareData[index],\n            healthCare_phone: inputValue,\n          }\n        }\n      } else if (name === 'healthCare_mobile') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedHealthCareData[index] = {\n            ...updatedHealthCareData[index],\n            healthCare_mobile: inputValue,\n          }\n        }\n      } else {\n        // For other fields, simply update the value\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          [name]: value,\n        }\n      }\n      return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n    })\n  }\n\n  // const healthCareChange = (phoneNumber, index) => {\n  //   setHealthCare((prevHealthCare) => {\n  //     const updatedHealthCareData = [...prevHealthCare.healthCareData]\n  //     updatedHealthCareData[index] = {\n  //       ...updatedHealthCareData[index],\n  //       healthCare_phone: phoneNumber,\n  //       healthCare_mobile: phoneNumber,\n  //     }\n\n  //     return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n  //   })\n  // }\n\n  const formatPhoneNumber = (value) => {\n    const numericValue = value.replace(/[^\\d\\s]/g, '')\n    let formattedNumber = ''\n\n    for (let i = 0; i < numericValue.length; i++) {\n      if (i > 0 && i % 30 === 0) {\n        formattedNumber += ' / '\n      }\n      formattedNumber += numericValue[i]\n    }\n\n    return formattedNumber\n  }\n\n  const [healthCare, setHealthCare] = useState({\n    healthCareData: Array.from({ length: initialFields }, () => ({\n      healthCare_fname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_fname\n      }),\n      healthCare_lname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_lname\n      }),\n      healthCare_address: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_address\n      }),\n      healthCare_mobile: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_mobile\n      }),\n      healthCare_phone: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_phone\n      }),\n    })),\n  })\n  // console.log('first', healthCare.healthCareData[0].healthCare_fname)\n\n  const addHealthCareField = () => {\n    if (healthCare.healthCareData.length < maxFields) {\n      setHealthCare((prev) => ({\n        ...prev,\n        healthCareData: [\n          ...prev.healthCareData,\n          {\n            healthCare_fname: '',\n            healthCare_lname: '',\n            healthCare_address: '',\n            healthCare_phone: [],\n          },\n        ],\n      }))\n    }\n  }\n\n  const powerOfAttorneyChange = (e, index) => {\n    const { name, value, type, checked } = e.target || {}\n    setPowerOfAttorney((prevPowerOfAttorney) => {\n      const updatedPowerOfAttorneyData = [...prevPowerOfAttorney.powerOfAttorneyData]\n\n      if (type === 'checkbox') {\n        updatedPowerOfAttorneyData[index] = {\n          ...updatedPowerOfAttorneyData[index],\n          [name]: checked,\n        }\n      } else if (name === 'powerOfAttorney_phone') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedPowerOfAttorneyData[index] = {\n            ...updatedPowerOfAttorneyData[index],\n            powerOfAttorney_phone: inputValue,\n          }\n        }\n      } else if (name === 'powerOfAttorney_mobile') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedPowerOfAttorneyData[index] = {\n            ...updatedPowerOfAttorneyData[index],\n            powerOfAttorney_mobile: inputValue,\n          }\n        }\n      }\n\n      return { ...prevPowerOfAttorney, powerOfAttorneyData: updatedPowerOfAttorneyData }\n    })\n  }\n\n  const addPowerOfAttorneyField = () => {\n    if (powerOfAttorney.powerOfAttorneyData.length < maxFields) {\n      setPowerOfAttorney((prev) => ({\n        ...prev,\n        powerOfAttorneyData: [\n          ...prev.powerOfAttorneyData,\n          {\n            powerOfAttorney_fname: '',\n            powerOfAttorney_lname: '',\n            powerOfAttorney_address: '',\n            powerOfAttorney_phone: [],\n            powerOfAttorney_mobile: [],\n          },\n        ],\n      }))\n    }\n  }\n\n  const careProvisionChange = (e) => {\n    const { name, value } = e.target\n\n    setCareProvision({ ...careProvision, [name]: value })\n  }\n  // const securingattorneyChange = (e) => {\n  //   const { name, value, type, checked } = e.target\n\n  //   setSecuringattorney({ ...securingattorney, [name]: value })\n  // }\n  const securingattorneyChange = (e) => {\n    if (e instanceof Date) {\n      let yearString = e.getFullYear().toString()\n      const year = parseInt(yearString.substring(0, 4), 10)\n      if (yearString.length > 4) {\n        yearString = yearString.substring(0, 4)\n      }\n      const newDate = new Date(`${year}.${e.getMonth() + 1}.${e.getDate()}`)\n\n      setSecuringattorney({ ...securingattorney, dob: newDate })\n    } else if (e.target) {\n      const { name, value, type, checked } = e.target\n\n      if (name === 'plz' && type === 'text') {\n        const inputValue = value.replace(/[^0-9a-zA-Z9äöüÄÖÜßÄÖÜß\\s'-]/g, '')\n        setSecuringattorney({ ...securingattorney, plz: inputValue })\n      } else {\n        setSecuringattorney({ ...securingattorney, [name]: type === 'checkbox' ? checked : value })\n      }\n    } else if (e.value !== undefined) {\n      setSecuringattorney({ ...securingattorney, salution: e.value })\n    } else {\n      console.error('Invalid event or data provided to ContactChange.')\n    }\n  }\n\n  const handleBlur = (event) => {\n    const { name, value } = event.target\n    let formattedAddress = value.trim()\n    const endsWithNumber = /\\d$/.test(value)\n\n    if (endsWithNumber) {\n      formattedAddress = value.replace(/(\\D)(\\d)/, '$1 $2')\n    }\n\n    setSecuringattorney({\n      ...securingattorney,\n      [name]: formattedAddress,\n    })\n  }\n\n  let res = localStorage.getItem('customerRecord')\n  let resultt = JSON.parse(res)\n  const data = {\n    healthCare,\n    powerOfAttorney,\n    careProvision,\n    securingattorney,\n    customer_id: resultt?._id,\n  }\n  // const saveData = async () => {\n  //   const healthCareData = data.healthCare.healthCareData\n\n  //   // Phone and mobile number validation\n  //   const phoneRegex = '000'\n  //   for (const record of healthCareData) {\n  //     if (record.healthCare_phone && record.healthCare_phone.startsWith(phoneRegex)) {\n  //       return toast.warning('Ungültige Telefonnummer')\n  //     }\n  //     if (record.healthCare_mobile && record.healthCare_mobile.startsWith(phoneRegex)) {\n  //       return toast.warning('Ungültige Mobilnummer')\n  //     }\n  //   }\n  //   let currentDate = new Date()\n  //   if (securingattorney?.dob > currentDate) {\n  //     return toast.warning('Das Startdatum darf nicht in der Zukunft liegen.')\n  //   }\n  //   if (securingattorney && securingattorney?.dob && securingattorney?.dob?.getFullYear() < 1900) {\n  //     return toast.warning('Das Startdatum darf nicht vor 1900 liegen');\n  //   }\n\n  //   try {\n  //     let url\n  //     let method\n\n  //     if (resultt) {\n  //       url = `${apiUrl}/attorney/get_attorney/${resultt._id}`\n  //       method = 'PUT'\n  //     } else {\n  //       url = `${apiUrl}/attorney`\n  //       method = 'POST'\n  //     }\n\n  //     let response = await fetch(url, {\n  //       method: method,\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(data),\n  //     })\n\n  //     let result = await response.json()\n  //     // console.log(result)\n  //     if (result.status === 201) {\n  //       toast.success('Daten erfolgreich gespeichert')\n  //       // resetStateVariables()\n  //     } else {\n  //       toast.error(\n  //         'Fehler beim Speichern der Daten. Weitere Informationen finden Sie auf der Konsole.',\n  //       )\n  //     }\n  //   } catch (error) {\n  //     // console.error('Error during API call:', error)\n  //     toast.error('Error saving data. Please try again.')\n  //   }\n  // }\n  const saveData = async () => {\n    const healthCareData = data.healthCare.healthCareData\n\n    // Phone and mobile number validation\n    const phoneRegex = '000'\n    for (const record of healthCareData) {\n      if (record.healthCare_phone && record.healthCare_phone.startsWith(phoneRegex)) {\n        return toast.warning('Ungültige Telefonnummer')\n      }\n      if (record.healthCare_mobile && record.healthCare_mobile.startsWith(phoneRegex)) {\n        return toast.warning('Ungültige Mobilnummer')\n      }\n    }\n    let currentDate = new Date()\n    let secureDate = securingattorney?.dob\n    if (securingattorney?.dob) {\n      const birthYear = new Date(securingattorney?.dob)?.getFullYear()\n      if (birthYear < 1900) {\n        return toast.warning('Das Geburtsdatum darf nicht vor 1900 liegen')\n      }\n    }\n    if (securingattorney && securingattorney.dob) {\n      let attorneyDOB = new Date(securingattorney.dob)\n\n      if (attorneyDOB > currentDate) {\n        return toast.warning('Das Geburtsdatum darf nicht in der Zukunft liegen')\n      }\n    }\n    let birthDate = new Date(secureDate)\n    let minimumAge = 18\n    let ageDifferenceMilliseconds = currentDate.getTime() - birthDate.getTime()\n    let ageDifferenceYears = ageDifferenceMilliseconds / (1000 * 3600 * 24 * 365.25)\n\n    if (ageDifferenceYears < minimumAge) {\n      return toast.warning(\n        'Du musst mindestens 18 Jahre alt sein, um einen Vertrag zu unterschreiben.',\n      )\n    }\n\n    try {\n      let url\n      let method\n\n      if (resultt) {\n        url = `${apiUrl}/attorney/get_attorney/${resultt._id}`\n        method = 'PUT'\n      } else {\n        url = `${apiUrl}/attorney`\n        method = 'POST'\n      }\n      let response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n      let result = await response.json()\n      if (result.status === 201) {\n        toast.success('Daten erfolgreich gespeichert')\n      } else {\n        toast.error(\n          'Fehler beim Speichern der Daten. Weitere Informationen finden Sie auf der Konsole.',\n        )\n      }\n    } catch (error) {\n      toast.error('Error saving data. Please try again.')\n    }\n  }\n\n  const getRecord = async () => {\n    try {\n      const result = await fetch(`${apiUrl}/attorney/get_attorney/${resultt._id}`)\n      const data = await result.json()\n      setRecordData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  // console.log('recorddata', recordData)\n  // const resetStateVariables = () => {\n  //   setHealthCare(() => ({\n  //     healthCareData: Array.from({ length: initialFields + 1 }, () => ({\n  //       healthCareMasterData: false,\n  //       healthCare_fname: '',\n  //       healthCare_lname: '',\n  //       healthCare_address: '',\n  //       healthCare_phone: '',\n  //       healthCare_mobile: '',\n  //     })),\n  //   }))\n\n  //   setPowerOfAttorney(() => ({\n  //     powerOfAttorneyData: Array.from({ length: initialFields + 1 }, () => ({\n  //       AttorneyMasterData: false,\n  //       adoptDataFromHealthcare: false,\n  //       powerOfAttorney_fname: '',\n  //       powerOfAttorney_lname: '',\n  //       powerOfAttorney_address: '',\n  //       powerOfAttorney_phone: '',\n  //       powerOfAttorney_mobile: '',\n  //     })),\n  //   }))\n\n  //   setCareProvision(() => ({\n  //     care_association: '',\n  //   }))\n\n  //   setSecuringattorney({\n  //     fname: '',\n  //     lname: '',\n  //     address: '',\n  //     plz: '',\n  //     ort: '',\n  //     dob: '',\n  //   })\n  // }\n  const toggleAdoptDataFromHealthcare = () => {\n    setPowerOfAttorney((prevState) => ({\n      ...prevState,\n      adoptDataFromHealthcare: !prevState.adoptDataFromHealthcare,\n      powerOfAttorneyData: prevState.adoptDataFromHealthcare\n        ? powerOfAttorney.powerOfAttorneyData.map((data) => ({\n            powerOfAttorney_fname: '',\n            powerOfAttorney_lname: '',\n            powerOfAttorney_address: '',\n            powerOfAttorney_phone: '',\n            powerOfAttorney_mobile: '',\n          }))\n        : healthCare.healthCareData.map((data) => ({\n            powerOfAttorney_fname: data.healthCare_fname,\n            powerOfAttorney_lname: data.healthCare_lname,\n            powerOfAttorney_address: data.healthCare_address,\n            powerOfAttorney_phone: data.healthCare_phone,\n            powerOfAttorney_mobile: data.healthCare_mobile,\n          })),\n    }))\n  }\n\n  useEffect(() => {\n    setCareProvision({\n      care_association: recordData?.careProvision?.care_association,\n    })\n    setSecuringattorney({\n      fname: recordData?.securingattorney?.fname,\n      lname: recordData?.securingattorney?.lname,\n      address: recordData?.securingattorney?.address,\n      dob: recordData?.securingattorney?.dob,\n      plz: recordData?.securingattorney?.plz,\n      ort: recordData?.securingattorney?.ort,\n    })\n    setPowerOfAttorney((prevState) => ({\n      ...prevState,\n      // adoptDataFromHealthcare: Boolean(recordData?.powerOfAttorney?.adoptDataFromHealthcare),\n      powerOfAttorneyData: Array.from({ length: initialFields }, (_, index) => ({\n        powerOfAttorneyData: prevState.powerOfAttorneyData.map((item, index) => ({\n          ...item,\n          powerOfAttorney_fname:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_fname ||\n            item.powerOfAttorney_fname,\n          powerOfAttorney_lname:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_lname ||\n            item.powerOfAttorney_lname,\n          powerOfAttorney_address:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_address ||\n            item.powerOfAttorney_address,\n          powerOfAttorney_mobile:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_mobile ||\n            item.powerOfAttorney_mobile,\n          powerOfAttorney_phone:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_phone ||\n            item.powerOfAttorney_phone,\n        })),\n      })),\n    }))\n    setHealthCare((prevHealthCare) => ({\n      ...prevHealthCare,\n      healthCareData: Array.from({ length: initialFields }, (_, index) => ({\n        healthCare_fname:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_fname ||\n          prevHealthCare.healthCareData[index]?.healthCare_fname ||\n          '',\n        healthCare_lname:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_lname ||\n          prevHealthCare.healthCareData[index]?.healthCare_lname ||\n          '',\n        healthCare_address:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_address ||\n          prevHealthCare.healthCareData[index]?.healthCare_address ||\n          '',\n        healthCare_mobile:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_mobile ||\n          prevHealthCare.healthCareData[index]?.healthCare_mobile ||\n          '',\n        healthCare_phone:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_phone ||\n          prevHealthCare.healthCareData[index]?.healthCare_phone ||\n          '',\n      })),\n    }))\n  }, [recordData, initialFields])\n\n  useEffect(() => {\n    // Add fields on component mount\n    addHealthCareField()\n    getRecord()\n    addPowerOfAttorneyField()\n  }, [])\n  return (\n    <>\n      <Customer />\n      <div className=\"inner-page-wrap\">\n        <div className=\"tab-content\">\n          <div className=\"tab-title\">\n            <h4>Vollmachten</h4>\n          </div>\n          <div className=\"block-wrap m-3\">\n            <div>\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 style={{ color: '#244D92' }}>Gesundheitsvollmacht</h3>\n                  <p className=\"\" style={{ color: '#244D92' }}>\n                    Bevollmächtigte Person(en):\n                  </p>\n                  <div>\n                    <div className=\"row mb-2\">\n                      <div className=\"col-sm-2\">\n                        <b>Vorname</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Nachname</b>\n                      </div>\n                      <div className=\"col-sm-4\">\n                        <b>Adresse</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Telefon</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Mobil</b>\n                      </div>\n                    </div>\n                    <div>\n                      {healthCare.healthCareData &&\n                        healthCare.healthCareData.map((field, index) => (\n                          <div className=\"row\" key={index}>\n                            <div className=\"col-sm-2\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_fname')}\n                                    value={field.healthCare_fname}\n                                    name=\"healthCare_fname\"\n                                    type=\"text\"\n                                    placeholder=\"Vorname\"\n                                    className=\"form-control z\"\n                                    id={`fname_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_lname')}\n                                    value={field.healthCare_lname}\n                                    type=\"text\"\n                                    name=\"healthCare_lname\"\n                                    placeholder=\"Nachname\"\n                                    className=\"form-control\"\n                                    id={`lname_${index}`}\n                                    //required={true}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-4\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) =>\n                                      healthCareChange(e, index, 'healthCare_address')\n                                    }\n                                    value={field.healthCare_address}\n                                    type=\"text\"\n                                    name=\"healthCare_address\"\n                                    placeholder=\"Adresse\"\n                                    className=\"form-control\"\n                                    id={`address_${index}`}\n                                    //required={true}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    // isValid={(value, country) => {\n                                    //   if (value.match(/000/)) {\n                                    //     return 'Invalid phone'\n                                    //   } else if (value.match(/000/)) {\n                                    //     return false\n                                    //   } else {\n                                    //     return true\n                                    //   }\n                                    // }}\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_phone')}\n                                    value={field.healthCare_phone}\n                                    name=\"healthCare_phone\"\n                                    placeholder=\"853-456-8464\"\n                                    className=\"form-control\"\n                                    id={`phone_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    // isValid={(value, country) => {\n                                    //   if (value.match(/000/)) {\n                                    //     return 'Invalid mobile'\n                                    //   } else if (value.match(/000/)) {\n                                    //     return false\n                                    //   } else {\n                                    //     return true\n                                    //   }\n                                    // }}\n                                    onChange={(e) =>\n                                      healthCareChange(e, index, 'healthCare_mobile')\n                                    }\n                                    value={field.healthCare_mobile}\n                                    type=\"text\"\n                                    name=\"healthCare_mobile\"\n                                    placeholder=\"853-456-8464\"\n                                    className=\"form-control\"\n                                    id={`phone_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 style={{ color: '#244D92' }}>Vorsorgevollmacht</h3>\n                  <div className=\"row\">\n                    <label htmlFor=\"adoptDataFromHealthcare\" className=\"col-sm-3 col-form-label\">\n                      Daten aus Gesundheitsvollmacht übernehmen\n                    </label>\n                    <div className=\"col-sm-1 radio-check-wrap mt-2\">\n                      <input\n                        type=\"checkbox\"\n                        // onChange={powerOfAttorneyChange}\n                        // onChange={() =>\n                        //   setPowerOfAttorney((prevPowerOfAttorney) => ({\n                        //     ...prevPowerOfAttorney,\n                        //     adoptDataFromHealthcare: !prevPowerOfAttorney.adoptDataFromHealthcare,\n                        //     powerOfAttorneyData: [...prevPowerOfAttorney.powerOfAttorneyData],\n                        //   }))\n                        // }\n                        onChange={toggleAdoptDataFromHealthcare}\n                        checked={powerOfAttorney.adoptDataFromHealthcare}\n                        name=\"adoptDataFromHealthcare\"\n                      />\n                      <span></span>\n                    </div>\n                  </div>\n                  <p className=\"\" style={{ color: '#244D92' }}>\n                    Bevollmächtigte Person(en):\n                  </p>\n\n                  <div className=\"row mb-2 mt-3\">\n                    <div className=\"col-sm-2\">\n                      <b>Vorname</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Nachname</b>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <b>Adresse</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Telefon</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Mobil</b>\n                    </div>\n                  </div>\n                  {powerOfAttorney.powerOfAttorneyData &&\n                    powerOfAttorney.powerOfAttorneyData.map((field, index) => (\n                      <div className=\"row\" key={index}>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_fname}\n                                name=\"powerOfAttorney_fname\"\n                                type=\"text\"\n                                placeholder=\"Vorname\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_lname}\n                                name=\"powerOfAttorney_lname\"\n                                type=\"text\"\n                                placeholder=\"Nachname\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-4\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_address}\n                                name=\"powerOfAttorney_address\"\n                                type=\"text\"\n                                placeholder=\"Adresse\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_phone}\n                                name=\"powerOfAttorney_phone\"\n                                type=\"text\"\n                                placeholder=\"853-456-8464\"\n                                className=\"form-control\"\n                                maxLength={20}\n                                minLength={3}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_mobile}\n                                name=\"powerOfAttorney_mobile\"\n                                type=\"text\"\n                                placeholder=\"853-456-8464\"\n                                className=\"form-control\"\n                                maxLength={20}\n                                minLength={3}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <h3 style={{ color: '#244D92' }}>Betreuungsverfügung</h3>\n                {/* <div className=\"row\">\n                  <label htmlFor=\"CareProvisionMasterData\" className=\"col-sm-3 col-form-label fs-6\">\n                    Eintrag der Stammdaten\n                  </label>\n                  <div className=\"col-sm-9 radio-check-wrap mt-2\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={careProvisionChange}\n                      checked={careProvision.CareProvisionMasterData}\n                      name=\"CareProvisionMasterData\"\n                    />\n                    <span></span>\n                  </div>\n                </div> */}\n                <div className=\"row\">\n                  <label className=\"col-sm-2 col-form-label\">Betreuungsverein</label>\n                  <div className=\"col-sm-10\">\n                    <textarea\n                      value={careProvision.care_association}\n                      name=\"care_association\"\n                      onChange={careProvisionChange}\n                      className=\"form-control\"\n                      placeholder=\"Betreuungsverein\"\n                    />\n                  </div>\n                </div>\n                <hr />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <h3 style={{ color: '#244D92' }}>Vollmacht zur Absicherung des digitalen Erbes</h3>\n                {/* <div className=\"row\">\n                  <label htmlFor=\"SecuringMasterData\" className=\"col-sm-3 col-form-label fs-6\">\n                    Eintrag der Stammdaten\n                  </label>\n                  <div className=\"col-sm-9 radio-check-wrap mt-2\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={securingattorneyChange}\n                      checked={securingattorney.SecuringMasterData}\n                      name=\"SecuringMasterData\"\n                    />\n                    <span></span>\n                  </div>\n                </div> */}\n                <div className=\"row mb-2 mt-3\">\n                  <div className=\"col-sm-2\">\n                    <b>Vorname</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Nachname</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Geburtsdatum</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Straße mit Hausnummer</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>PLZ</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Ort</b>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"fname\"\n                          value={securingattorney.fname}\n                          type=\"text\"\n                          placeholder=\"Vorname\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"lname\"\n                          value={securingattorney.lname}\n                          type=\"text\"\n                          placeholder=\"Nachname\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <DatePiker\n                          className=\"form-control\"\n                          selected={securingattorney.dob}\n                          onChange={securingattorneyChange}\n                          // name=\"dataCollection\"\n                          placeholderText={'Geburtsdatum'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onBlur={handleBlur}\n                          onChange={securingattorneyChange}\n                          value={securingattorney.address}\n                          name=\"address\"\n                          type=\"text\"\n                          placeholder=\"Straße mit Hausnummer\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"plz\"\n                          value={securingattorney.plz}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"PLZ\"\n                          maxLength={10}\n                          minLength={3}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"ort\"\n                          value={securingattorney.ort}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Ort\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"text-end mx-3\">\n              <button\n                onClick={cancelData}\n                type=\"button\"\n                className=\"btn btn\"\n                style={{ background: '#d04545', color: 'white' }}\n              >\n                Abbrechen\n              </button>\n              &nbsp; &nbsp;\n              <button\n                onClick={saveData}\n                type=\"button\"\n                style={{ background: '#0b5995', color: 'white' }}\n                className=\"btn btn\"\n              >\n                Speichern\n              </button>\n            </div>\n          </div>\n        </div>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Attorney)\n"],"names":["_ref","onChange","selected","placeholderText","_jsx","children","DatePicker","className","date","day","getDate","month","getMonth","year","getFullYear","console","error","toString","padStart","concat","parsedDate","Date","dateFormat","Attorney","_recordData$powerOfAt","_recordData$careProvi","_recordData$securinga","_recordData$securinga2","_recordData$securinga3","_recordData$securinga4","_recordData$securinga5","_recordData$securinga6","recordData","setRecordData","useState","navigate","useNavigate","apiUrl","process","powerOfAttorney","setPowerOfAttorney","AttorneyMasterData","adoptDataFromHealthcare","Boolean","powerOfAttorneyData","Array","from","length","_recordData$healthCar","_recordData$healthCar2","_recordData$healthCar3","_recordData$healthCar4","_recordData$healthCar5","_recordData$healthCar6","_recordData$healthCar7","_recordData$healthCar8","_recordData$healthCar9","_recordData$healthCar10","powerOfAttorney_fname","healthCare","healthCareData","map","item","healthCare_fname","powerOfAttorney_lname","healthCare_lname","powerOfAttorney_address","healthCare_address","powerOfAttorney_mobile","healthCare_mobile","powerOfAttorney_phone","healthCare_phone","careProvision","setCareProvision","care_association","securingattorney","setSecuringattorney","fname","lname","address","dob","plz","ort","healthCareChange","e","index","name","value","type","checked","target","setHealthCare","prevHealthCare","updatedHealthCareData","inputValue","replace","test","_recordData$healthCar11","_recordData$healthCar12","_recordData$healthCar13","_recordData$healthCar14","_recordData$healthCar15","_recordData$healthCar16","_recordData$healthCar17","_recordData$healthCar18","_recordData$healthCar19","_recordData$healthCar20","powerOfAttorneyChange","prevPowerOfAttorney","updatedPowerOfAttorneyData","securingattorneyChange","yearString","parseInt","substring","newDate","undefined","salution","res","localStorage","getItem","resultt","JSON","parse","data","customer_id","_id","useEffect","_recordData$careProvi2","_recordData$securinga7","_recordData$securinga8","_recordData$securinga9","_recordData$securinga10","_recordData$securinga11","_recordData$securinga12","prevState","_","_recordData$healthCar21","_recordData$healthCar22","_recordData$healthCar23","_recordData$healthCar24","_recordData$healthCar25","_recordData$healthCar26","_recordData$healthCar27","_recordData$healthCar28","_recordData$healthCar29","_recordData$healthCar30","_recordData$healthCar31","_recordData$healthCar32","_recordData$healthCar33","_recordData$healthCar34","_recordData$healthCar35","_recordData$healthCar36","_recordData$healthCar37","_recordData$healthCar38","_prevHealthCare$healt","_recordData$healthCar39","_recordData$healthCar40","_recordData$healthCar41","_prevHealthCare$healt2","_recordData$healthCar42","_recordData$healthCar43","_recordData$healthCar44","_prevHealthCare$healt3","_recordData$healthCar45","_recordData$healthCar46","_recordData$healthCar47","_prevHealthCare$healt4","_recordData$healthCar48","_recordData$healthCar49","_recordData$healthCar50","_prevHealthCare$healt5","prev","async","result","fetch","json","getRecord","_jsxs","_Fragment","Customer","style","color","field","placeholder","id","maxLength","minLength","htmlFor","toggleAdoptDataFromHealthcare","DatePiker","onBlur","event","formattedAddress","trim","onClick","cancelData","removeItem","background","record","startsWith","toast","warning","currentDate","secureDate","_Date","birthDate","getTime","url","method","response","headers","body","stringify","status","success","ToastContainer","React"],"sourceRoot":""}