{"version":3,"file":"static/js/545.1449565e.chunk.js","mappings":"4NAEA,MAmHA,EAnHaA,KACX,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvC,CACEC,QAAS,QAEX,CACEA,QAAS,YAGNC,EAAWC,IAAgBH,EAAAA,EAAAA,UAAS,KAE3CI,EAAAA,EAAAA,YAAU,KAERC,GAAe,GACd,IAEH,MAAMA,EAAgBC,UACpB,IACE,MAAMC,QAAiBC,MAAM,qBACvBC,QAAaF,EAASG,OAC5BX,EAAYU,EACd,CAAE,MAAOE,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAyBIE,EAAoBA,CAACC,EAAOC,EAAKC,KACrCb,GAAcc,GACZA,EAAcC,KAAI,CAACC,EAAMC,IACnBA,IAAMN,EACD,IACFK,EACHlB,QAAS,IACJkB,EAAKlB,QACR,CAACc,GAAMC,IAING,KAEV,EASH,OACEE,EAAAA,EAAAA,MAAA,QAAMC,SAPcC,IAEpBA,EAAEC,iBACFZ,QAAQa,IAAIvB,EAAU,EAIOwB,SAAA,CAC1B5B,EAASoB,KAAI,CAACjB,EAASa,KACtBO,EAAAA,EAAAA,MAAA,OAAiBM,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,aAAc,QAASJ,SAAA,EACtFK,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLhB,MAAOf,EACPgC,SAAWV,IAAMW,OApDGC,EAoDkBlC,EAAQA,QApDbmC,EAoDsBb,EAAEc,OAAOD,aAlDtEjC,EADEiC,EACYnB,GAAkB,IAC3BA,EACH,CACEhB,QAAS,CACPqC,KAAMH,EACNI,OAAQ,GACRC,OAAQ,GACRC,OAAQ,IAEVC,KAAM,GACNC,KAAM,KAII1B,GACZA,EAAc2B,QAAQzB,GAASA,EAAKlB,QAAQqC,OAASH,KAjB9BD,IAACC,EAAaC,CAoDwC,KAE3EL,EAAAA,EAAAA,KAAA,SAAAL,SAAQzB,EAAQA,UACfC,EAAUgB,KAAI,CAACC,EAAM0B,IAChB1B,EAAKlB,QAAQqC,OAASrC,EAAQA,SAE9BoB,EAAAA,EAAAA,MAAA,OAAeM,MAAO,CAAEmB,WAAY,QAASpB,SAAA,EAC3CK,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLe,YAAY,UACZ/B,MAAOG,EAAKlB,QAAQsC,OACpBN,SAAWV,GAAMV,EAAkBgC,EAAK,SAAUtB,EAAEc,OAAOrB,UAE7De,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLe,YAAY,UACZ/B,MAAOG,EAAKlB,QAAQuC,OACpBP,SAAWV,GAAMV,EAAkBgC,EAAK,SAAUtB,EAAEc,OAAOrB,UAE7De,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLe,YAAY,UACZ/B,MAAOG,EAAKlB,QAAQwC,OACpBR,SAAWV,GAAMV,EAAkBgC,EAAK,SAAUtB,EAAEc,OAAOrB,WAjBrD6B,GAsBP,SAhCD/B,MAoCZiB,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQN,SAAC,aACjB,C","sources":["views/customer/Text.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst Text = () => {\n  const [problems, setProblems] = useState([\n    {\n      problem: 'pain',\n    },\n    {\n      problem: 'pain2',\n    },\n  ])\n  const [diagnosis, setDiagnosis] = useState([])\n\n  useEffect(() => {\n    // Fetch problems from API\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const response = await fetch('your/api/endpoint')\n      const data = await response.json()\n      setProblems(data)\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handleCheckboxChange = (problemName, checked) => {\n    if (checked) {\n      setDiagnosis((prevDiagnosis) => [\n        ...prevDiagnosis,\n        {\n          problem: {\n            name: problemName,\n            scale1: '',\n            scale2: '',\n            scale3: '',\n          },\n          date: '',\n          desc: '',\n        },\n      ])\n    } else {\n      setDiagnosis((prevDiagnosis) =>\n        prevDiagnosis.filter((item) => item.problem.name !== problemName),\n      )\n    }\n  }\n\n  const handleInputChange = (index, key, value) => {\n    setDiagnosis((prevDiagnosis) =>\n      prevDiagnosis.map((item, i) => {\n        if (i === index) {\n          return {\n            ...item,\n            problem: {\n              ...item.problem,\n              [key]: value,\n            },\n          }\n        }\n        return item\n      }),\n    )\n  }\n\n  const handleSubmit = (e) => {\n    // Send diagnosis data to backend\n    e.preventDefault()\n    console.log(diagnosis)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {problems.map((problem, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n          <input\n            type=\"checkbox\"\n            value={problem}\n            onChange={(e) => handleCheckboxChange(problem.problem, e.target.checked)}\n          />\n          <label>{problem.problem}</label>\n          {diagnosis.map((item, idx) => {\n            if (item.problem.name === problem.problem) {\n              return (\n                <div key={idx} style={{ marginLeft: '20px' }}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Scale 1\"\n                    value={item.problem.scale1}\n                    onChange={(e) => handleInputChange(idx, 'scale1', e.target.value)}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Scale 2\"\n                    value={item.problem.scale2}\n                    onChange={(e) => handleInputChange(idx, 'scale2', e.target.value)}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Scale 3\"\n                    value={item.problem.scale3}\n                    onChange={(e) => handleInputChange(idx, 'scale3', e.target.value)}\n                  />\n                </div>\n              )\n            }\n            return null\n          })}\n        </div>\n      ))}\n      <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nexport default Text\n"],"names":["Text","problems","setProblems","useState","problem","diagnosis","setDiagnosis","useEffect","fetchProblems","async","response","fetch","data","json","error","console","handleInputChange","index","key","value","prevDiagnosis","map","item","i","_jsxs","onSubmit","e","preventDefault","log","children","style","display","alignItems","marginBottom","_jsx","type","onChange","handleCheckboxChange","problemName","checked","target","name","scale1","scale2","scale3","date","desc","filter","idx","marginLeft","placeholder"],"sourceRoot":""}