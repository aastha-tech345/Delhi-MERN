{"version":3,"file":"static/js/5703.8da153e3.chunk.js","mappings":"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","sources":["views/customer/Date.jsx","views/customer/bills/Bills.jsx"],"sourcesContent":["// import React from 'react'\n// import DatePicker from 'react-datepicker'\n// import 'react-datepicker/dist/react-datepicker.css'\n// import PropTypes from 'prop-types'\n\n// const DatePiker = ({ onChange, selected, placeholderText }) => {\n//   DatePiker.propTypes = {\n//     onChange: PropTypes.func.isRequired,\n//     selected: PropTypes.func.isRequired,\n//     placeholderText: PropTypes.func.isRequired,\n//   }\n\n//   return (\n//     <div>\n//       <DatePicker\n//         className=\"form-control form-search-control w-101\"\n//         placeholderText={placeholderText}\n//         selected={selected}\n//         onChange={onChange}\n//         dateFormat=\"dd.MM.yyyy\"\n//       />\n//     </div>\n//   )\n// }\n\n// export default DatePiker\n\nimport React from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport PropTypes from 'prop-types'\n\nconst DatePiker = ({ onChange, selected, placeholderText }) => {\n  const handleDateChange = (e) => {\n    let yearString = e?.getFullYear()?.toString()\n    const year = parseInt(yearString?.substring(0, 4), 10)\n    if (yearString.length > 4) {\n      yearString = yearString?.substring(0, 4)\n    }\n    const newDate = new Date(`${year}.${e?.getMonth() + 1}.${e?.getDate()}`)\n    onChange(newDate)\n  }\n\n  const handleInputChange = (e) => {\n    let inputValue = e.target.value\n    let formattedValue = ''\n    inputValue = inputValue?.replace(/\\D/g, '')\n    for (let i = 0; i < inputValue?.length; i++) {\n      if (i === 2 || i === 4) {\n        formattedValue += '.'\n      }\n      formattedValue += inputValue[i]\n    }\n    e.target.value = formattedValue\n  }\n\n  return (\n    <div>\n      <DatePicker\n        className=\"form-control form-search-control w-101\"\n        placeholderText={placeholderText}\n        selected={selected}\n        onChange={handleDateChange}\n        onChangeRaw={handleInputChange}\n        dateFormat=\"dd.MM.yyyy\"\n        peekNextMonth\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n      />\n    </div>\n  )\n}\n\nDatePiker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.instanceOf(Date).isRequired,\n  placeholderText: PropTypes.string.isRequired,\n}\n\nexport default DatePiker\n","import React, { useEffect, useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Customer from '../Customer'\nimport { useNavigate } from 'react-router-dom'\nimport Select from 'react-select'\nimport DatePiker from '../Date'\n\nconst Bills = () => {\n  const [recordData, setRecordData] = useState([])\n  let res = localStorage.getItem('customerRecord')\n  let resultt = JSON.parse(res)\n  // console.log('first', resultt?._id)\n  // console.log('invoice', recordData?.colleague)\n  const navigate = useNavigate()\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [employeeData, setEmployeeData] = useState([])\n  const [customerInfo, setCustomerInfo] = useState([])\n  const [colleague, setColleague] = useState(recordData?.colleague)\n  const [invoiceDate, setInvoiceDate] = useState(recordData?.invoiceDate)\n  const [deliveryDate, setDeliveryDate] = useState(recordData?.deliveryDate)\n  const [product, setProduct] = useState(recordData?.product)\n  const [paymentMethod, setPaymentMethod] = useState(recordData?.paymentMethod)\n  const [invoiceAmount, setInvoiceAmount] = useState(recordData?.invoiceAmount)\n  let paidData = customerInfo?.customerDelivery?.alreadyPaid\n  // console.log('paidData', paidData)\n  const [alreadyPaid, setAlreadyPaid] = useState(paidData)\n  const invoiceChange = (e) => {\n    setInvoiceDate(e)\n  }\n\n  const deliveryDateChange = (date) => {\n    setDeliveryDate(date)\n  }\n\n  const cancelData = () => {\n    localStorage.removeItem('customerRecord')\n    navigate('/customer/customer_info')\n  }\n  const alreadypaidChange = (e) => {\n    setAlreadyPaid(e.target.checked)\n  }\n\n  const saveData = async () => {\n    try {\n      const data = {\n        product,\n        alreadyPaid,\n        paymentMethod,\n        invoiceAmount,\n        invoiceDate,\n        deliveryDate,\n        employeeData,\n        colleague,\n        customer_id: resultt?._id,\n      }\n\n      const response = await fetch(`${apiUrl}/invoice/get_invoice/${resultt?._id}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`)\n      }\n\n      toast.success('Rechnungsdaten erfolgreich gespeichert')\n    } catch (error) {\n      toast.error('Bitte füllen Sie alle Angaben aus')\n      // console.error('Error during API call:', error)\n    }\n  }\n\n  const option = [\n    { value: 'payPal', label: 'PayPal' },\n    { value: 'barzahlung', label: 'Barzahlung' },\n    { value: 'rechnung', label: 'Rechnung' },\n    { value: 'klarna', label: 'Klarna' },\n    { value: 'kreditkarte', label: 'Kreditkarte (für die Zukunft)' },\n    { value: 'andere', label: 'Andere' },\n  ]\n\n  const optionData = [\n    { value: 'HVD-PV', label: 'HVD-PV' },\n    { value: 'Vortrag', label: 'Vortrag' },\n    { value: 'SPV', label: 'SPV' },\n    { value: 'OPV', label: 'OPV' },\n  ]\n\n  const getEmployeeData = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/user/get/employeeData`)\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`)\n      }\n      const { data } = await response.json()\n      setEmployeeData(data)\n    } catch (error) {\n      console.error('Error fetching employee data:', error)\n    }\n  }\n  const getCustomerInfo = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/customer/get_record/${resultt._id}`)\n\n      const data = await response.json()\n      // console.log('data', data)\n      setCustomerInfo(data)\n    } catch (error) {\n      console.error('Error fetching employee data:', error)\n    }\n  }\n\n  const getRecord = async () => {\n    try {\n      const result = await fetch(`${apiUrl}/invoice/get_invoice/${resultt._id}`)\n      const data = await result.json()\n      setRecordData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  // console.log('recorddata', recordData)\n  // console.log('first', customerInfo?.customerDelivery?.alreadyPaid)\n  useEffect(() => {\n    getRecord()\n    getCustomerInfo()\n    getEmployeeData()\n    setAlreadyPaid(paidData)\n  }, [paidData])\n\n  useEffect(() => {\n    setColleague(recordData?.colleague)\n    setInvoiceDate(recordData?.invoiceDate)\n    setDeliveryDate(recordData?.deliveryDate)\n    setProduct(recordData?.product)\n    setPaymentMethod(recordData?.paymentMethod)\n    setInvoiceAmount(recordData?.invoiceAmount)\n  }, [recordData])\n\n  return (\n    <div className=\"inner-page-wrap\">\n      <div style={{ background: '#fff' }}>\n        <Customer />\n        <div className=\"tab-content\">\n          <div className=\"tab-title\">\n            <h4 className=\"mx-3\">Rechnung</h4>\n          </div>\n          <hr className=\"mx-3\" />\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"block-wrap\">\n                  {/* <h3>Rechnungstellung</h3> */}\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <div className=\"row\">\n                          <label htmlFor=\"product\" className=\"col-sm-4 col-form-label\">\n                            Transaktionsnr\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <input className=\"form-control\" disabled placeholder=\"Transaktionsnr\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <div className=\"row\">\n                          <label htmlFor=\"product\" className=\"col-sm-4 col-form-label\">\n                            Zahlungseingang\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <input\n                              className=\"form-control\"\n                              disabled\n                              placeholder=\"Zahlungseingang\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label htmlFor=\"product\" className=\"col-sm-4 col-form-label\">\n                            Produkt\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <Select\n                              className=\"w-100\"\n                              options={optionData}\n                              onChange={(selectedOption) => setProduct(selectedOption?.value || '')}\n                              value={optionData.find((opt) => opt.value === product)}\n                              name=\"product\"\n                              placeholder=\"HVD-PV\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <label htmlFor=\"invoiceAmount\" className=\"col-sm-4 col-form-label\">\n                            Rechnungsbetrag eintragen\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <input\n                              type=\"text\"\n                              placeholder=\"Rechnungsbetrag eintragen\"\n                              className=\"form-control\"\n                              name=\"invoiceAmount\"\n                              value={invoiceAmount}\n                              onChange={(e) => {\n                                const value = e.target.value\n                                const sanitizedValue = value.replace(/\\D/g, '')\n                                setInvoiceAmount(sanitizedValue)\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"mb-6 row\">\n                          <label htmlFor=\"invoiceDate\" className=\"col-sm-4 col-form-label\">\n                            Rechnungsdatum\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <DatePiker\n                              className=\"form-control\"\n                              selected={invoiceDate}\n                              onChange={invoiceChange}\n                              placeholderText={'Rechnungsdatum'}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"mb-6 row\">\n                          <label htmlFor=\"colleague\" className=\"col-sm-4 col-form-label\">\n                            MitarbeiterInnen\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <Select\n                              className=\"w-100\"\n                              placeholder=\"MitarbeiterInnen\"\n                              options={\n                                employeeData?.map((elem) => ({\n                                  value: elem.username,\n                                  label: elem.username,\n                                })) || []\n                              }\n                              onChange={(selectedOption) =>\n                                setColleague(selectedOption?.value || '')\n                              }\n                              value={{\n                                value: colleague || 'MitarbeiterInnen',\n                                label: colleague || 'MitarbeiterInnen',\n                              }}\n                              name=\"colleague\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        {/* <div className=\"mb-6 row\">\n                          <label htmlFor=\"alreadyPaid\" className=\"col-sm-4 col-form-label\">\n                            Bereits bezahlt\n                          </label>\n                          <div className=\"col-sm-6 radio-check-wrap\">\n                            <input\n                              type=\"checkbox\"\n                              name=\"alreadyPaid\"\n                              checked={alreadyPaid}\n                              onChange={(e) => setAlreadyPaid(e.target.checked)}\n                            />\n                          </div>\n                        </div> */}\n                        <div className=\"mb-6 row\">\n                          <label htmlFor=\"alreadyPaid\" className=\"col-sm-4 mb-2 col-form-label\">\n                            Bereits bezahlt\n                          </label>\n                          <div className=\"col-sm-6 radio-check-wrap\">\n                            <input\n                              readOnly\n                              type=\"checkbox\"\n                              name=\"alreadyPaid\"\n                              checked={alreadyPaid}\n                              onChange={alreadypaidChange}\n                              onClick={(e) => e.stopPropagation()}\n                            />\n                            <span></span>\n                          </div>\n                        </div>\n                        <div className=\"row mb-3\">\n                          <label htmlFor=\"paymentMethod\" className=\"col-sm-4 col-form-label\">\n                            Zahlungsart\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <Select\n                              className=\"w-100\"\n                              options={option}\n                              onChange={(selectedOption) =>\n                                setPaymentMethod(selectedOption?.value || '')\n                              }\n                              value={option.find((opt) => opt.value === paymentMethod)}\n                              name=\"paymentMethod\"\n                              placeholder=\"Barzahlung\"\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\"row\">\n                          <label htmlFor=\"deliveryDate\" className=\"col-sm-4 col-form-label\">\n                            Lieferdatum\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <DatePiker\n                              className=\"form-control\"\n                              selected={deliveryDate}\n                              onChange={deliveryDateChange}\n                              placeholderText={'Lieferdatum'}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"text-end mx-3\">\n            <button\n              type=\"button\"\n              onClick={cancelData}\n              className=\"btn btn\"\n              style={{ background: '#d04545', color: 'white' }}\n            >\n              Abbrechen\n            </button>\n            &nbsp; &nbsp;\n            <button\n              onClick={saveData}\n              type=\"button\"\n              style={{ background: '#0b5995', color: 'white' }}\n              className=\"btn btn\"\n            >\n              Speichern\n            </button>\n          </div>\n          <br />\n          <ToastContainer />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Bills)\n"],"names":["_ref","onChange","selected","placeholderText","_jsx","children","DatePicker","className","e","_e$getFullYear","_yearString","yearString","getFullYear","toString","year","parseInt","substring","_yearString2","length","newDate","Date","concat","getMonth","getDate","onChangeRaw","_inputValue","inputValue","target","value","formattedValue","replace","i","_inputValue2","dateFormat","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","Bills","_customerInfo$custome","recordData","setRecordData","useState","res","localStorage","getItem","resultt","JSON","parse","navigate","useNavigate","apiUrl","process","employeeData","setEmployeeData","customerInfo","setCustomerInfo","colleague","setColleague","invoiceDate","setInvoiceDate","deliveryDate","setDeliveryDate","product","setProduct","paymentMethod","setPaymentMethod","invoiceAmount","setInvoiceAmount","paidData","customerDelivery","alreadyPaid","setAlreadyPaid","option","label","optionData","useEffect","async","result","fetch","_id","data","json","error","console","getRecord","response","getCustomerInfo","ok","Error","status","getEmployeeData","_jsxs","style","background","Customer","htmlFor","disabled","placeholder","Select","options","selectedOption","find","opt","name","type","sanitizedValue","DatePiker","map","elem","username","readOnly","checked","onClick","stopPropagation","date","cancelData","removeItem","color","customer_id","method","headers","body","stringify","toast","success","ToastContainer","React"],"sourceRoot":""}