{"version":3,"file":"static/js/904.9e2eccf3.chunk.js","mappings":"8RAGA,SAASA,EAA2BC,EAAMC,EAAWC,GACnD,IAAI,UACFC,EAAS,SACTC,GACEJ,EACJ,MAAMK,GAAWC,EAAAA,EAAAA,IAAYL,GACvBM,GAAgBC,EAAAA,EAAAA,IAAiBP,GACjCQ,GAAcC,EAAAA,EAAAA,IAAcH,GAC5BI,GAAOC,EAAAA,EAAAA,IAAQX,GACfY,EAA0B,MAAbR,EACbS,EAAUX,EAAUY,EAAIZ,EAAUa,MAAQ,EAAIZ,EAASY,MAAQ,EAC/DC,EAAUd,EAAUe,EAAIf,EAAUgB,OAAS,EAAIf,EAASe,OAAS,EACjEC,EAAcjB,EAAUM,GAAe,EAAIL,EAASK,GAAe,EACzE,IAAIY,EACJ,OAAQV,GACN,IAAK,MACHU,EAAS,CACPN,EAAGD,EACHI,EAAGf,EAAUe,EAAId,EAASe,QAE5B,MACF,IAAK,SACHE,EAAS,CACPN,EAAGD,EACHI,EAAGf,EAAUe,EAAIf,EAAUgB,QAE7B,MACF,IAAK,QACHE,EAAS,CACPN,EAAGZ,EAAUY,EAAIZ,EAAUa,MAC3BE,EAAGD,GAEL,MACF,IAAK,OACHI,EAAS,CACPN,EAAGZ,EAAUY,EAAIX,EAASY,MAC1BE,EAAGD,GAEL,MACF,QACEI,EAAS,CACPN,EAAGZ,EAAUY,EACbG,EAAGf,EAAUe,GAGnB,QAAQI,EAAAA,EAAAA,IAAarB,IACnB,IAAK,QACHoB,EAAOd,IAAkBa,GAAelB,GAAOW,GAAc,EAAI,GACjE,MACF,IAAK,MACHQ,EAAOd,IAAkBa,GAAelB,GAAOW,GAAc,EAAI,GAGrE,OAAOQ,CACT,CASA,MAAME,EAAkBC,MAAOrB,EAAWC,EAAUqB,KAClD,MAAM,UACJxB,EAAY,SAAQ,SACpByB,EAAW,WAAU,WACrBC,EAAa,GAAE,SACfC,GACEH,EACEI,EAAkBF,EAAWG,OAAOC,SACpC7B,QAA+B,MAAlB0B,EAASI,WAAgB,EAASJ,EAASI,MAAM5B,IACpE,IAAI6B,QAAcL,EAASM,gBAAgB,CACzC/B,YACAC,WACAsB,cAEE,EACFX,EAAC,EACDG,GACEnB,EAA2BkC,EAAOhC,EAAWC,GAC7CiC,EAAoBlC,EACpBmC,EAAiB,CAAC,EAClBC,EAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAgBU,OAAQD,IAAK,CAC/C,MAAM,KACJE,EAAI,GACJC,GACEZ,EAAgBS,IAElBvB,EAAG2B,EACHxB,EAAGyB,EAAK,KACRC,EAAI,MACJC,SACQJ,EAAG,CACX1B,IACAG,IACA4B,iBAAkB7C,EAClBA,UAAWkC,EACXT,WACAU,iBACAH,QACAL,WACAmB,SAAU,CACR5C,YACAC,cAGJW,EAAa,MAAT2B,EAAgBA,EAAQ3B,EAC5BG,EAAa,MAATyB,EAAgBA,EAAQzB,EAC5BkB,EAAiB,IACZA,EACH,CAACI,GAAO,IACHJ,EAAeI,MACfI,IAGHC,GAASR,GAAc,KACzBA,IACqB,kBAAVQ,IACLA,EAAM5C,YACRkC,EAAoBU,EAAM5C,WAExB4C,EAAMZ,QACRA,GAAwB,IAAhBY,EAAMZ,YAAuBL,EAASM,gBAAgB,CAC5D/B,YACAC,WACAsB,aACGmB,EAAMZ,SAGXlB,IACAG,KACEnB,EAA2BkC,EAAOE,EAAmBjC,KAE3DoC,GAAK,EAET,CACA,MAAO,CACLvB,IACAG,IACAjB,UAAWkC,EACXT,WACAU,iBACD,EAWHZ,eAAewB,EAAeC,EAAOC,GACnC,IAAIC,OACY,IAAZD,IACFA,EAAU,CAAC,GAEb,MAAM,EACJnC,EAAC,EACDG,EAAC,SACDU,EAAQ,MACRK,EAAK,SACLc,EAAQ,SACRrB,GACEuB,GACE,SACJG,EAAW,oBAAmB,aAC9BC,EAAe,WAAU,eACzBC,EAAiB,WAAU,YAC3BC,GAAc,EAAK,QACnBC,EAAU,IACRC,EAAAA,EAAAA,IAASP,EAASD,GAChBS,GAAgBC,EAAAA,EAAAA,IAAiBH,GAEjCI,EAAUb,EAASQ,EADa,aAAnBD,EAAgC,YAAc,WACbA,GAC9CO,GAAqBC,EAAAA,EAAAA,UAAuBlC,EAASmC,gBAAgB,CACzEH,QAAiH,OAAtGT,QAAqD,MAAtBvB,EAASoC,eAAoB,EAASpC,EAASoC,UAAUJ,MAAqBT,EAAgCS,EAAUA,EAAQK,sBAAyD,MAA/BrC,EAASsC,wBAA6B,EAAStC,EAASsC,mBAAmBnB,EAAS3C,WACxRgD,WACAC,eACA3B,cAEIyC,EAA0B,aAAnBb,EAAgC,IACxCrB,EAAM7B,SACTW,IACAG,KACEe,EAAM9B,UACJiE,QAAkD,MAA5BxC,EAASyC,qBAA0B,EAASzC,EAASyC,gBAAgBtB,EAAS3C,WACpGkE,QAA4C,MAAtB1C,EAASoC,eAAoB,EAASpC,EAASoC,UAAUI,WAA+C,MAArBxC,EAAS2C,cAAmB,EAAS3C,EAAS2C,SAASH,KAGlK,CACFrD,EAAG,EACHG,EAAG,GAECsD,GAAoBV,EAAAA,EAAAA,IAAiBlC,EAAS6C,4DAA8D7C,EAAS6C,sDAAsD,CAC/K1B,WACAoB,OACAC,eACA1C,aACGyC,GACL,MAAO,CACLO,KAAMb,EAAmBa,IAAMF,EAAkBE,IAAMhB,EAAcgB,KAAOJ,EAAYpD,EACxFyD,QAASH,EAAkBG,OAASd,EAAmBc,OAASjB,EAAciB,QAAUL,EAAYpD,EACpG0D,MAAOf,EAAmBe,KAAOJ,EAAkBI,KAAOlB,EAAckB,MAAQN,EAAYvD,EAC5F8D,OAAQL,EAAkBK,MAAQhB,EAAmBgB,MAAQnB,EAAcmB,OAASP,EAAYvD,EAEpG,CAOA,MAAM+D,EAAQ5B,IAAW,CACvBV,KAAM,QACNU,UACA,QAAMT,CAAGQ,GACP,MAAM,EACJlC,EAAC,EACDG,EAAC,UACDjB,EAAS,MACTgC,EAAK,SACLL,EAAQ,SACRmB,EAAQ,eACRX,GACEa,GAEE,QACJW,EAAO,QACPJ,EAAU,IACRC,EAAAA,EAAAA,IAASP,EAASD,IAAU,CAAC,EACjC,GAAe,MAAXW,EACF,MAAO,CAAC,EAEV,MAAMF,GAAgBC,EAAAA,EAAAA,IAAiBH,GACjCnC,EAAS,CACbN,IACAG,KAEI6D,GAAOvE,EAAAA,EAAAA,IAAiBP,GACxBsC,GAAS7B,EAAAA,EAAAA,IAAcqE,GACvBC,QAAwBpD,EAASqD,cAAcrB,GAC/CsB,EAAmB,MAATH,EACVI,EAAUD,EAAU,MAAQ,OAC5BE,EAAUF,EAAU,SAAW,QAC/BG,EAAaH,EAAU,eAAiB,cACxCI,EAAUrD,EAAM9B,UAAUoC,GAAUN,EAAM9B,UAAU4E,GAAQ1D,EAAO0D,GAAQ9C,EAAM7B,SAASmC,GAC1FgD,EAAYlE,EAAO0D,GAAQ9C,EAAM9B,UAAU4E,GAC3CS,QAAuD,MAA5B5D,EAASyC,qBAA0B,EAASzC,EAASyC,gBAAgBT,IACtG,IAAI6B,EAAaD,EAAoBA,EAAkBH,GAAc,EAGhEI,SAA6C,MAAtB7D,EAASoC,eAAoB,EAASpC,EAASoC,UAAUwB,MACnFC,EAAa1C,EAAS3C,SAASiF,IAAepD,EAAM7B,SAASmC,IAE/D,MAAMmD,EAAoBJ,EAAU,EAAIC,EAAY,EAI9CI,EAAyBF,EAAa,EAAIT,EAAgBzC,GAAU,EAAI,EACxEqD,GAAaC,EAAAA,EAAAA,IAAInC,EAAcyB,GAAUQ,GACzCG,GAAaD,EAAAA,EAAAA,IAAInC,EAAc0B,GAAUO,GAIzCI,EAAQH,EACRI,EAAMP,EAAaT,EAAgBzC,GAAUuD,EAC7CG,EAASR,EAAa,EAAIT,EAAgBzC,GAAU,EAAImD,EACxDQ,GAASC,EAAAA,EAAAA,IAAMJ,EAAOE,EAAQD,GAM9BI,GAAmBhE,EAAe0C,OAAoC,OAA3BxD,EAAAA,EAAAA,IAAarB,IAAsBgG,IAAWC,GAAUjE,EAAM9B,UAAUoC,GAAU,GAAK0D,EAASF,EAAQH,EAAaE,GAAcd,EAAgBzC,GAAU,EAAI,EAC5M8D,EAAkBD,EAAkBH,EAASF,EAAQE,EAASF,EAAQE,EAASD,EAAM,EAC3F,MAAO,CACL,CAACjB,GAAO1D,EAAO0D,GAAQsB,EACvBzD,KAAM,CACJ,CAACmC,GAAOmB,EACRI,aAAcL,EAASC,EAASG,KAC5BD,GAAmB,CACrBC,oBAGJxD,MAAOuD,EAEX,IAkBF,MAAMG,EAAgB,SAAUrD,GAI9B,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLV,KAAM,gBACNU,UACA,QAAMT,CAAGQ,GACP,IAAIuD,EAAuBC,EAAwBC,EACnD,MAAM,MACJzE,EAAK,eACLG,EAAc,UACdnC,EAAS,SACT2B,EAAQ,SACRmB,GACEE,GACE,UACJ0D,GAAY,EAAK,UACjBC,EAAS,kBACTC,EAAoBC,EAAAA,GAAU,cAC9BC,GAAgB,KACbC,IACDvD,EAAAA,EAAAA,IAASP,EAASD,GAChBgE,OAA6BC,IAAdN,GAA2BC,IAAsBC,EAAAA,GAtC5E,SAA0BF,EAAWG,EAAeF,GAElD,OAD2CD,EAAY,IAAIC,EAAkB/E,QAAO7B,IAAaqB,EAAAA,EAAAA,IAAarB,KAAe2G,OAAeC,EAAkB/E,QAAO7B,IAAaqB,EAAAA,EAAAA,IAAarB,KAAe2G,KAAcC,EAAkB/E,QAAO7B,IAAaW,EAAAA,EAAAA,IAAQX,KAAeA,KAC/O6B,QAAO7B,IAC3C2G,IACKtF,EAAAA,EAAAA,IAAarB,KAAe2G,KAAcG,IAAgBI,EAAAA,EAAAA,IAA8BlH,KAAeA,GAIpH,CA8ByFmH,CAAiBR,GAAa,KAAMG,EAAeF,GAAqBA,EACrJQ,QAAiBrE,EAAeC,EAAO+D,GACvCM,GAA0E,OAAzDd,EAAwBpE,EAAemE,oBAAyB,EAASC,EAAsBe,QAAU,EAC1HC,EAAmBP,EAAaK,GACtC,GAAwB,MAApBE,EACF,MAAO,CAAC,EAEV,MAAMC,GAAiBC,EAAAA,EAAAA,IAAkBF,EAAkBvF,QAAgC,MAAlBL,EAASI,WAAgB,EAASJ,EAASI,MAAMe,EAAS3C,YAGnI,GAAIH,IAAcuH,EAChB,MAAO,CACL3E,MAAO,CACL5C,UAAWgH,EAAa,KAI9B,MAAMU,EAAmB,CAACN,GAASzG,EAAAA,EAAAA,IAAQ4G,IAAoBH,EAASI,EAAe,IAAKJ,EAASI,EAAe,KAC9GG,EAAe,KAAiE,OAA1DnB,EAAyBrE,EAAemE,oBAAyB,EAASE,EAAuBoB,YAAc,GAAK,CAC9I5H,UAAWuH,EACXK,UAAWF,IAEPG,EAAgBb,EAAaK,EAAe,GAGlD,GAAIQ,EACF,MAAO,CACLlF,KAAM,CACJ2E,MAAOD,EAAe,EACtBO,UAAWD,GAEb/E,MAAO,CACL5C,UAAW6H,IAIjB,MAAMC,EAA8BH,EAAaI,KAAIC,IACnD,MAAMrB,GAAYtF,EAAAA,EAAAA,IAAa2G,EAAEhI,WACjC,MAAO,CAACgI,EAAEhI,UAAW2G,GAAaD,EAElCsB,EAAEJ,UAAUK,MAAM,EAAG,GAAGC,QAAO,CAACC,EAAKC,IAAMD,EAAMC,GAAG,GAEpDJ,EAAEJ,UAAU,GAAII,EAAEJ,UAAU,IAC3BS,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAKrBC,GAA8E,OAA3D/B,EAJWqB,EAA4BjG,QAAOmG,GAAKA,EAAE,GAAGC,MAAM,GAGvF5G,EAAAA,EAAAA,IAAa2G,EAAE,IAAM,EAAI,GAAGS,OAAML,GAAKA,GAAK,MACiC,SAAc,EAAS3B,EAAsB,KAAOqB,EAA4B,GAAG,GAChK,OAAIU,IAAmBxI,EACd,CACL2C,KAAM,CACJ2E,MAAOD,EAAe,EACtBO,UAAWD,GAEb/E,MAAO,CACL5C,UAAWwI,IAIV,CAAC,CACV,EAEJ,EAQME,EAAO,SAAUzF,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLV,KAAM,OACNU,UACA,QAAMT,CAAGQ,GACP,IAAI2F,EAAuBC,EAC3B,MAAM,UACJ5I,EAAS,eACTmC,EAAc,MACdH,EAAK,iBACLa,EAAgB,SAChBlB,EAAQ,SACRmB,GACEE,GAEF6F,SAAUC,GAAgB,EAC1BpC,UAAWqC,GAAiB,EAC5BC,mBAAoBC,EAA2B,iBAC/CC,EAAmB,UAAS,0BAC5BC,EAA4B,OAAM,cAClCC,GAAgB,KACbrC,IACDvD,EAAAA,EAAAA,IAASP,EAASD,GAMtB,GAAsD,OAAjD2F,EAAwBxG,EAAe0C,QAAkB8D,EAAsBvC,gBAClF,MAAO,CAAC,EAEV,MAAM1F,GAAOC,EAAAA,EAAAA,IAAQX,GACfqJ,GAAkB1I,EAAAA,EAAAA,IAAQkC,KAAsBA,EAChD5C,QAA+B,MAAlB0B,EAASI,WAAgB,EAASJ,EAASI,MAAMe,EAAS3C,WACvE6I,EAAqBC,IAAgCI,IAAoBD,EAAgB,EAACE,EAAAA,EAAAA,IAAqBzG,KAAqB0G,EAAAA,EAAAA,IAAsB1G,IAC3JoG,GAA6D,SAA9BE,GAClCH,EAAmBQ,SAAQC,EAAAA,EAAAA,IAA0B5G,EAAkBuG,EAAeD,EAA2BlJ,IAEnH,MAAM4G,EAAa,CAAChE,KAAqBmG,GACnC5B,QAAiBrE,EAAeC,EAAO+D,GACvCa,EAAY,GAClB,IAAI8B,GAAiE,OAA/Cd,EAAuBzG,EAAeuG,WAAgB,EAASE,EAAqBhB,YAAc,GAIxH,GAHIkB,GACFlB,EAAU4B,KAAKpC,EAAS1G,IAEtBqI,EAAgB,CAClB,MAAMY,GAAQlC,EAAAA,EAAAA,IAAkBzH,EAAWgC,EAAO/B,GAClD2H,EAAU4B,KAAKpC,EAASuC,EAAM,IAAKvC,EAASuC,EAAM,IACpD,CAOA,GANAD,EAAgB,IAAIA,EAAe,CACjC1J,YACA4H,eAIGA,EAAUa,OAAM/H,GAAQA,GAAQ,IAAI,CACvC,IAAIkJ,EAAuBC,EAC3B,MAAMC,IAA+D,OAAhDF,EAAwBzH,EAAeuG,WAAgB,EAASkB,EAAsBtC,QAAU,GAAK,EACpHO,EAAgBhB,EAAWiD,GACjC,GAAIjC,EAEF,MAAO,CACLlF,KAAM,CACJ2E,MAAOwC,EACPlC,UAAW8B,GAEb9G,MAAO,CACL5C,UAAW6H,IAOjB,IAAIW,EAAgJ,OAA9HqB,EAAwBH,EAAc7H,QAAOmG,GAAKA,EAAEJ,UAAU,IAAM,IAAGS,MAAK,CAACC,EAAGC,IAAMD,EAAEV,UAAU,GAAKW,EAAEX,UAAU,KAAI,SAAc,EAASiC,EAAsB7J,UAG1L,IAAKwI,EACH,OAAQU,GACN,IAAK,UACH,CACE,IAAIa,EACJ,MAAM/J,EAAyM,OAA5L+J,EAAwBL,EAAc3B,KAAIC,GAAK,CAACA,EAAEhI,UAAWgI,EAAEJ,UAAU/F,QAAOuF,GAAYA,EAAW,IAAGc,QAAO,CAACC,EAAKf,IAAae,EAAMf,GAAU,MAAKiB,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAAI,SAAc,EAASwB,EAAsB,GACjP/J,IACFwI,EAAiBxI,GAEnB,KACF,CACF,IAAK,mBACHwI,EAAiB3F,EAIvB,GAAI7C,IAAcwI,EAChB,MAAO,CACL5F,MAAO,CACL5C,UAAWwI,GAInB,CACA,MAAO,CAAC,CACV,EAEJ,EAEA,SAASwB,EAAe5C,EAAUlD,GAChC,MAAO,CACLO,IAAK2C,EAAS3C,IAAMP,EAAKhD,OACzB0D,MAAOwC,EAASxC,MAAQV,EAAKnD,MAC7B2D,OAAQ0C,EAAS1C,OAASR,EAAKhD,OAC/ByD,KAAMyC,EAASzC,KAAOT,EAAKnD,MAE/B,CACA,SAASkJ,EAAsB7C,GAC7B,OAAOuC,EAAAA,GAAMO,MAAKxJ,GAAQ0G,EAAS1G,IAAS,GAC9C,CAMA,MAAMyJ,EAAO,SAAUlH,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLV,KAAM,OACNU,UACA,QAAMT,CAAGQ,GACP,MAAM,MACJhB,GACEgB,GACE,SACJvB,EAAW,qBACRsF,IACDvD,EAAAA,EAAAA,IAASP,EAASD,GACtB,OAAQvB,GACN,IAAK,kBACH,CACE,MAIM2I,EAAUJ,QAJOjH,EAAeC,EAAO,IACxC+D,EACH1D,eAAgB,cAEuBrB,EAAM9B,WAC/C,MAAO,CACLyC,KAAM,CACJ0H,uBAAwBD,EACxBE,gBAAiBL,EAAsBG,IAG7C,CACF,IAAK,UACH,CACE,MAIMA,EAAUJ,QAJOjH,EAAeC,EAAO,IACxC+D,EACHzD,aAAa,IAE0BtB,EAAM7B,UAC/C,MAAO,CACLwC,KAAM,CACJ4H,eAAgBH,EAChBI,QAASP,EAAsBG,IAGrC,CACF,QAEI,MAAO,CAAC,EAGhB,EAEJ,EAEA,SAASK,EAAgBzI,GACvB,MAAM0I,GAAO9E,EAAAA,EAAAA,OAAO5D,EAAM+F,KAAI7D,GAAQA,EAAKS,QACrCgG,GAAO/E,EAAAA,EAAAA,OAAO5D,EAAM+F,KAAI7D,GAAQA,EAAKO,OAG3C,MAAO,CACL3D,EAAG4J,EACHzJ,EAAG0J,EACH5J,OALWgF,EAAAA,EAAAA,OAAO/D,EAAM+F,KAAI7D,GAAQA,EAAKU,SAK3B8F,EACdxJ,QALW6E,EAAAA,EAAAA,OAAO/D,EAAM+F,KAAI7D,GAAQA,EAAKQ,UAK1BiG,EAEnB,CAqBA,MAAMC,EAAS,SAAU3H,GAIvB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLV,KAAM,SACNU,UACA,QAAMT,CAAGQ,GACP,MAAM,UACJhD,EAAS,SACT8C,EAAQ,MACRd,EAAK,SACLL,EAAQ,SACRF,GACEuB,GAIE,QACJO,EAAU,EAAC,EACXzC,EAAC,EACDG,IACEuC,EAAAA,EAAAA,IAASP,EAASD,GAChB6H,EAAoBC,MAAMC,WAAwC,MAA3BpJ,EAASqJ,oBAAyB,EAASrJ,EAASqJ,eAAelI,EAAS5C,aAAgB,IACnI+K,EA5CZ,SAAwBjJ,GACtB,MAAMkJ,EAAclJ,EAAMiG,QAAQI,MAAK,CAACC,EAAGC,IAAMD,EAAErH,EAAIsH,EAAEtH,IACnDkK,EAAS,GACf,IAAIC,EAAW,KACf,IAAK,IAAI/I,EAAI,EAAGA,EAAI6I,EAAY5I,OAAQD,IAAK,CAC3C,MAAM6B,EAAOgH,EAAY7I,IACpB+I,GAAYlH,EAAKjD,EAAImK,EAASnK,EAAImK,EAASlK,OAAS,EACvDiK,EAAO3B,KAAK,CAACtF,IAEbiH,EAAOA,EAAO7I,OAAS,GAAGkH,KAAKtF,GAEjCkH,EAAWlH,CACb,CACA,OAAOiH,EAAOpD,KAAI7D,IAAQL,EAAAA,EAAAA,IAAiB4G,EAAgBvG,KAC7D,CA8B0BmH,CAAeR,GAC7BS,GAAWzH,EAAAA,EAAAA,IAAiB4G,EAAgBI,IAC5CpH,GAAgBC,EAAAA,EAAAA,IAAiBH,GAsDvC,MAAMgI,QAAmB5J,EAASM,gBAAgB,CAChD/B,UAAW,CACTsL,sBAvDJ,WAEE,GAA2B,IAAvBP,EAAY3I,QAAgB2I,EAAY,GAAGtG,KAAOsG,EAAY,GAAGrG,OAAc,MAAL9D,GAAkB,MAALG,EAEzF,OAAOgK,EAAYQ,MAAKvH,GAAQpD,EAAIoD,EAAKS,KAAOlB,EAAckB,MAAQ7D,EAAIoD,EAAKU,MAAQnB,EAAcmB,OAAS3D,EAAIiD,EAAKO,IAAMhB,EAAcgB,KAAOxD,EAAIiD,EAAKQ,OAASjB,EAAciB,UAAW4G,EAI/L,GAAIL,EAAY3I,QAAU,EAAG,CAC3B,GAA+B,OAA3BjC,EAAAA,EAAAA,IAAYL,GAAoB,CAClC,MAAM0L,EAAYT,EAAY,GACxBU,EAAWV,EAAYA,EAAY3I,OAAS,GAC5CsJ,EAA+B,SAAvBjL,EAAAA,EAAAA,IAAQX,GAChByE,EAAMiH,EAAUjH,IAChBC,EAASiH,EAASjH,OAClBC,EAAOiH,EAAQF,EAAU/G,KAAOgH,EAAShH,KACzCC,EAAQgH,EAAQF,EAAU9G,MAAQ+G,EAAS/G,MAGjD,MAAO,CACLH,MACAC,SACAC,OACAC,QACA7D,MAPY6D,EAAQD,EAQpBzD,OAPawD,EAASD,EAQtB3D,EAAG6D,EACH1D,EAAGwD,EAEP,CACA,MAAMoH,EAAoC,UAAvBlL,EAAAA,EAAAA,IAAQX,GACrB8L,GAAW/F,EAAAA,EAAAA,OAAOkF,EAAYlD,KAAI7D,GAAQA,EAAKU,SAC/CmH,GAAUnG,EAAAA,EAAAA,OAAOqF,EAAYlD,KAAI7D,GAAQA,EAAKS,QAC9CqH,EAAef,EAAYpJ,QAAOqC,GAAQ2H,EAAa3H,EAAKS,OAASoH,EAAU7H,EAAKU,QAAUkH,IAC9FrH,EAAMuH,EAAa,GAAGvH,IACtBC,EAASsH,EAAaA,EAAa1J,OAAS,GAAGoC,OAKrD,MAAO,CACLD,MACAC,SACAC,KAPWoH,EAQXnH,MAPYkH,EAQZ/K,MARY+K,EADDC,EAUX7K,OAPawD,EAASD,EAQtB3D,EAXWiL,EAYX9K,EAAGwD,EAEP,CACA,OAAO6G,CACT,GAKEnL,SAAU2C,EAAS3C,SACnBsB,aAEF,OAAIO,EAAM9B,UAAUY,IAAMyK,EAAWrL,UAAUY,GAAKkB,EAAM9B,UAAUe,IAAMsK,EAAWrL,UAAUe,GAAKe,EAAM9B,UAAUa,QAAUwK,EAAWrL,UAAUa,OAASiB,EAAM9B,UAAUgB,SAAWqK,EAAWrL,UAAUgB,OACnM,CACL0B,MAAO,CACLZ,MAAOuJ,IAIN,CAAC,CACV,EAEJ,EAmDA,MAAMtF,EAAS,SAAUhD,GAIvB,YAHgB,IAAZA,IACFA,EAAU,GAEL,CACLV,KAAM,SACNU,UACA,QAAMT,CAAGQ,GACP,IAAIiJ,EAAuBtD,EAC3B,MAAM,EACJ7H,EAAC,EACDG,EAAC,UACDjB,EAAS,eACTmC,GACEa,EACEkJ,QA7DZ3K,eAAoCyB,EAAOC,GACzC,MAAM,UACJjD,EAAS,SACT2B,EAAQ,SACRmB,GACEE,EACE/C,QAA+B,MAAlB0B,EAASI,WAAgB,EAASJ,EAASI,MAAMe,EAAS3C,WACvEO,GAAOC,EAAAA,EAAAA,IAAQX,GACf2G,GAAYtF,EAAAA,EAAAA,IAAarB,GACzBY,EAAwC,OAA3BP,EAAAA,EAAAA,IAAYL,GACzBmM,EAAgB,CAAC,OAAQ,OAAOC,SAAS1L,IAAS,EAAI,EACtD2L,EAAiBpM,GAAOW,GAAc,EAAI,EAC1C0L,GAAW9I,EAAAA,EAAAA,IAASP,EAASD,GACnC,IAAI,SACF6F,EAAQ,UACRnC,EAAS,cACTpG,GACsB,kBAAbgM,EAAwB,CACjCzD,SAAUyD,EACV5F,UAAW,EACXpG,cAAe,MACb,CACFuI,SAAU,EACVnC,UAAW,EACXpG,cAAe,QACZgM,GAKL,OAHI3F,GAAsC,kBAAlBrG,IACtBoG,EAA0B,QAAdC,GAAuC,EAAjBrG,EAAqBA,GAElDM,EAAa,CAClBE,EAAG4F,EAAY2F,EACfpL,EAAG4H,EAAWsD,GACZ,CACFrL,EAAG+H,EAAWsD,EACdlL,EAAGyF,EAAY2F,EAEnB,CAwB+BE,CAAqBvJ,EAAOC,GAIrD,OAAIjD,KAAkE,OAAlDiM,EAAwB9J,EAAe8D,aAAkB,EAASgG,EAAsBjM,YAAgE,OAAjD2I,EAAwBxG,EAAe0C,QAAkB8D,EAAsBvC,gBACjM,CAAC,EAEH,CACLtF,EAAGA,EAAIoL,EAAWpL,EAClBG,EAAGA,EAAIiL,EAAWjL,EAClB0B,KAAM,IACDuJ,EACHlM,aAGN,EAEJ,EAOMwM,EAAQ,SAAUvJ,GAItB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLV,KAAM,QACNU,UACA,QAAMT,CAAGQ,GACP,MAAM,EACJlC,EAAC,EACDG,EAAC,UACDjB,GACEgD,GAEF6F,SAAUC,GAAgB,EAC1BpC,UAAWqC,GAAiB,EAAK,QACjC0D,EAAU,CACRjK,GAAIzC,IACF,IAAI,EACFe,EAAC,EACDG,GACElB,EACJ,MAAO,CACLe,IACAG,IACD,MAGF8F,IACDvD,EAAAA,EAAAA,IAASP,EAASD,GAChB5B,EAAS,CACbN,IACAG,KAEImG,QAAiBrE,EAAeC,EAAO+D,GACvCL,GAAYrG,EAAAA,EAAAA,KAAYM,EAAAA,EAAAA,IAAQX,IAChC6I,GAAW6D,EAAAA,EAAAA,IAAgBhG,GACjC,IAAIiG,EAAgBvL,EAAOyH,GACvB+D,EAAiBxL,EAAOsF,GAC5B,GAAIoC,EAAe,CACjB,MACM+D,EAAuB,MAAbhE,EAAmB,SAAW,QACxCjD,EAAM+G,EAAgBvF,EAFC,MAAbyB,EAAmB,MAAQ,QAGrC9C,EAAM4G,EAAgBvF,EAASyF,GACrCF,GAAgBzG,EAAAA,EAAAA,IAAMN,EAAK+G,EAAe5G,EAC5C,CACA,GAAIgD,EAAgB,CAClB,MACM8D,EAAwB,MAAdnG,EAAoB,SAAW,QACzCd,EAAMgH,EAAiBxF,EAFC,MAAdV,EAAoB,MAAQ,QAGtCX,EAAM6G,EAAiBxF,EAASyF,GACtCD,GAAiB1G,EAAAA,EAAAA,IAAMN,EAAKgH,EAAgB7G,EAC9C,CACA,MAAM+G,EAAgBL,EAAQjK,GAAG,IAC5BQ,EACH,CAAC6F,GAAW8D,EACZ,CAACjG,GAAYkG,IAEf,MAAO,IACFE,EACHnK,KAAM,CACJ7B,EAAGgM,EAAchM,EAAIA,EACrBG,EAAG6L,EAAc7L,EAAIA,GAG3B,EAEJ,EAIM8L,EAAa,SAAU9J,GAI3B,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLA,UACAT,EAAAA,CAAGQ,GACD,MAAM,EACJlC,EAAC,EACDG,EAAC,UACDjB,EAAS,MACTgC,EAAK,eACLG,GACEa,GACE,OACJiD,EAAS,EACT4C,SAAUC,GAAgB,EAC1BpC,UAAWqC,GAAiB,IAC1BvF,EAAAA,EAAAA,IAASP,EAASD,GAChB5B,EAAS,CACbN,IACAG,KAEIyF,GAAYrG,EAAAA,EAAAA,IAAYL,GACxB6I,GAAW6D,EAAAA,EAAAA,IAAgBhG,GACjC,IAAIiG,EAAgBvL,EAAOyH,GACvB+D,EAAiBxL,EAAOsF,GAC5B,MAAMsG,GAAYxJ,EAAAA,EAAAA,IAASyC,EAAQjD,GAC7BiK,EAAsC,kBAAdD,EAAyB,CACrDnE,SAAUmE,EACVtG,UAAW,GACT,CACFmC,SAAU,EACVnC,UAAW,KACRsG,GAEL,GAAIlE,EAAe,CACjB,MAAMoE,EAAmB,MAAbrE,EAAmB,SAAW,QACpCsE,EAAWnL,EAAM9B,UAAU2I,GAAY7G,EAAM7B,SAAS+M,GAAOD,EAAepE,SAC5EuE,EAAWpL,EAAM9B,UAAU2I,GAAY7G,EAAM9B,UAAUgN,GAAOD,EAAepE,SAC/E8D,EAAgBQ,EAClBR,EAAgBQ,EACPR,EAAgBS,IACzBT,EAAgBS,EAEpB,CACA,GAAIrE,EAAgB,CAClB,IAAIkD,EAAuBoB,EAC3B,MAAMH,EAAmB,MAAbrE,EAAmB,QAAU,SACnCyE,EAAe,CAAC,MAAO,QAAQlB,UAASzL,EAAAA,EAAAA,IAAQX,IAChDmN,EAAWnL,EAAM9B,UAAUwG,GAAa1E,EAAM7B,SAAS+M,IAAQI,IAAmE,OAAlDrB,EAAwB9J,EAAe8D,aAAkB,EAASgG,EAAsBvF,KAAmB,IAAM4G,EAAe,EAAIL,EAAevG,WACnO0G,EAAWpL,EAAM9B,UAAUwG,GAAa1E,EAAM9B,UAAUgN,IAAQI,EAAe,GAAyD,OAAnDD,EAAyBlL,EAAe8D,aAAkB,EAASoH,EAAuB3G,KAAe,IAAM4G,EAAeL,EAAevG,UAAY,GAChPkG,EAAiBO,EACnBP,EAAiBO,EACRP,EAAiBQ,IAC1BR,EAAiBQ,EAErB,CACA,MAAO,CACL,CAACvE,GAAW8D,EACZ,CAACjG,GAAYkG,EAEjB,EAEJ,EAQMW,EAAO,SAAUtK,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLV,KAAM,OACNU,UACA,QAAMT,CAAGQ,GACP,MAAM,UACJhD,EAAS,MACTgC,EAAK,SACLL,EAAQ,SACRmB,GACEE,GACE,MACJwK,EAAQA,YACLzG,IACDvD,EAAAA,EAAAA,IAASP,EAASD,GAChBoE,QAAiBrE,EAAeC,EAAO+D,GACvCrG,GAAOC,EAAAA,EAAAA,IAAQX,GACf2G,GAAYtF,EAAAA,EAAAA,IAAarB,GACzBiF,EAAqC,OAA3B5E,EAAAA,EAAAA,IAAYL,IACtB,MACJe,EAAK,OACLG,GACEc,EAAM7B,SACV,IAAIsN,EACAC,EACS,QAAThN,GAA2B,WAATA,GACpB+M,EAAa/M,EACbgN,EAAY/G,WAAyC,MAAlBhF,EAASI,WAAgB,EAASJ,EAASI,MAAMe,EAAS3C,WAAc,QAAU,OAAS,OAAS,UAEvIuN,EAAYhN,EACZ+M,EAA2B,QAAd9G,EAAsB,MAAQ,UAE7C,MAAMgH,EAA0BzM,EAASkG,EAASqG,GAC5CG,EAAyB7M,EAAQqG,EAASsG,GAC1CG,GAAW7K,EAAMb,eAAeqK,MACtC,IAAIsB,EAAkBH,EAClBI,EAAiBH,EACrB,GAAI3I,EAAS,CACX,MAAM+I,EAAuBjN,EAAQqG,EAASzC,KAAOyC,EAASxC,MAC9DmJ,EAAiBpH,GAAakH,GAAUjI,EAAAA,EAAAA,IAAIgI,EAAwBI,GAAwBA,CAC9F,KAAO,CACL,MAAMC,EAAwB/M,EAASkG,EAAS3C,IAAM2C,EAAS1C,OAC/DoJ,EAAkBnH,GAAakH,GAAUjI,EAAAA,EAAAA,IAAI+H,EAAyBM,GAAyBA,CACjG,CACA,GAAIJ,IAAYlH,EAAW,CACzB,MAAMuH,GAAOnI,EAAAA,EAAAA,IAAIqB,EAASzC,KAAM,GAC1BwJ,GAAOpI,EAAAA,EAAAA,IAAIqB,EAASxC,MAAO,GAC3BwJ,GAAOrI,EAAAA,EAAAA,IAAIqB,EAAS3C,IAAK,GACzB4J,GAAOtI,EAAAA,EAAAA,IAAIqB,EAAS1C,OAAQ,GAC9BO,EACF8I,EAAiBhN,EAAQ,GAAc,IAATmN,GAAuB,IAATC,EAAaD,EAAOC,GAAOpI,EAAAA,EAAAA,IAAIqB,EAASzC,KAAMyC,EAASxC,QAEnGkJ,EAAkB5M,EAAS,GAAc,IAATkN,GAAuB,IAATC,EAAaD,EAAOC,GAAOtI,EAAAA,EAAAA,IAAIqB,EAAS3C,IAAK2C,EAAS1C,QAExG,OACM8I,EAAM,IACPxK,EACH+K,iBACAD,oBAEF,MAAMQ,QAAuB3M,EAASqD,cAAclC,EAAS3C,UAC7D,OAAIY,IAAUuN,EAAevN,OAASG,IAAWoN,EAAepN,OACvD,CACL0B,MAAO,CACLZ,OAAO,IAIN,CAAC,CACV,EAEJ,C,kKCr/BA,SAASuM,EAAiB5K,GACxB,MAAM6K,GAAMC,EAAAA,EAAAA,IAAiB9K,GAG7B,IAAI5C,EAAQ2N,WAAWF,EAAIzN,QAAU,EACjCG,EAASwN,WAAWF,EAAItN,SAAW,EACvC,MAAMyN,GAAYC,EAAAA,EAAAA,IAAcjL,GAC1BkL,EAAcF,EAAYhL,EAAQkL,YAAc9N,EAChD+N,EAAeH,EAAYhL,EAAQmL,aAAe5N,EAClD6N,GAAiBC,EAAAA,EAAAA,IAAMjO,KAAW8N,IAAeG,EAAAA,EAAAA,IAAM9N,KAAY4N,EAKzE,OAJIC,IACFhO,EAAQ8N,EACR3N,EAAS4N,GAEJ,CACL/N,QACAG,SACA+N,EAAGF,EAEP,CAEA,SAASG,EAAcvL,GACrB,OAAQI,EAAAA,EAAAA,IAAUJ,GAAoCA,EAAzBA,EAAQK,cACvC,CAEA,SAASM,EAASX,GAChB,MAAMwL,EAAaD,EAAcvL,GACjC,KAAKiL,EAAAA,EAAAA,IAAcO,GACjB,OAAOC,EAAAA,EAAAA,IAAa,GAEtB,MAAMlL,EAAOiL,EAAW3D,yBAClB,MACJzK,EAAK,OACLG,EAAM,EACN+N,GACEV,EAAiBY,GACrB,IAAIrO,GAAKmO,GAAID,EAAAA,EAAAA,IAAM9K,EAAKnD,OAASmD,EAAKnD,OAASA,EAC3CE,GAAKgO,GAAID,EAAAA,EAAAA,IAAM9K,EAAKhD,QAAUgD,EAAKhD,QAAUA,EAUjD,OANKJ,GAAMuO,OAAOC,SAASxO,KACzBA,EAAI,GAEDG,GAAMoO,OAAOC,SAASrO,KACzBA,EAAI,GAEC,CACLH,IACAG,IAEJ,CAEA,MAAMsO,GAAyBH,EAAAA,EAAAA,IAAa,GAC5C,SAASI,EAAiB7L,GACxB,MAAM8L,GAAMC,EAAAA,EAAAA,IAAU/L,GACtB,OAAKgM,EAAAA,EAAAA,OAAeF,EAAIG,eAGjB,CACL9O,EAAG2O,EAAIG,eAAeC,WACtB5O,EAAGwO,EAAIG,eAAeE,WAJfP,CAMX,CAWA,SAAS/D,EAAsB7H,EAASoM,EAAcC,EAAiB7L,QAChD,IAAjB4L,IACFA,GAAe,QAEO,IAApBC,IACFA,GAAkB,GAEpB,MAAMC,EAAatM,EAAQ6H,wBACrB2D,EAAaD,EAAcvL,GACjC,IAAIuM,GAAQd,EAAAA,EAAAA,IAAa,GACrBW,IACE5L,GACEJ,EAAAA,EAAAA,IAAUI,KACZ+L,EAAQ5L,EAASH,IAGnB+L,EAAQ5L,EAASX,IAGrB,MAAMwM,EA7BR,SAAgCxM,EAASyM,EAASC,GAIhD,YAHgB,IAAZD,IACFA,GAAU,MAEPC,GAAwBD,GAAWC,KAAyBX,EAAAA,EAAAA,IAAU/L,KAGpEyM,CACT,CAqBwBE,CAAuBnB,EAAYa,EAAiB7L,GAAgBqL,EAAiBL,IAAcC,EAAAA,EAAAA,IAAa,GACtI,IAAItO,GAAKmP,EAAWtL,KAAOwL,EAAcrP,GAAKoP,EAAMpP,EAChDG,GAAKgP,EAAWxL,IAAM0L,EAAclP,GAAKiP,EAAMjP,EAC/CF,EAAQkP,EAAWlP,MAAQmP,EAAMpP,EACjCI,EAAS+O,EAAW/O,OAASgP,EAAMjP,EACvC,GAAIkO,EAAY,CACd,MAAMM,GAAMC,EAAAA,EAAAA,IAAUP,GAChBoB,EAAYpM,IAAgBJ,EAAAA,EAAAA,IAAUI,IAAgBuL,EAAAA,EAAAA,IAAUvL,GAAgBA,EACtF,IAAIqM,EAAgBf,EAAIgB,aACxB,KAAOD,GAAiBrM,GAAgBoM,IAAcd,GAAK,CACzD,MAAMiB,EAAcpM,EAASkM,GACvBG,EAAaH,EAAchF,wBAC3BgD,GAAMC,EAAAA,EAAAA,IAAiB+B,GACvB7L,EAAOgM,EAAWhM,MAAQ6L,EAAcI,WAAalC,WAAWF,EAAIqC,cAAgBH,EAAY5P,EAChG2D,EAAMkM,EAAWlM,KAAO+L,EAAcM,UAAYpC,WAAWF,EAAIuC,aAAeL,EAAYzP,EAClGH,GAAK4P,EAAY5P,EACjBG,GAAKyP,EAAYzP,EACjBF,GAAS2P,EAAY5P,EACrBI,GAAUwP,EAAYzP,EACtBH,GAAK6D,EACL1D,GAAKwD,EACL+L,GAAgBd,EAAAA,EAAAA,IAAUc,GAAeC,YAC3C,CACF,CACA,OAAO5M,EAAAA,EAAAA,IAAiB,CACtB9C,QACAG,SACAJ,IACAG,KAEJ,CAEA,MAAM+P,EAAoB,CAAC,gBAAiB,UAC5C,SAASC,EAAS9Q,GAChB,IAAI+Q,GAAa,EACbpQ,EAAI,EACJG,EAAI,EASR,GAHA+P,EAAkBG,SAAQC,KAL1B,SAAuBA,GACrB,IACEF,EAAaA,GAAc/Q,EAASkR,QAAQD,EAC9C,CAAE,MAAOE,GAAI,CACf,CAEEC,CAAcH,EAAS,IAErBF,EAAY,CACd,MAAMM,GAAkBC,EAAAA,EAAAA,IAAmBtR,GAC3C,GAAIqR,EAAiB,CACnB,MAAMtN,EAAOsN,EAAgBhG,wBAC7B1K,EAAIoD,EAAKpD,EACTG,EAAIiD,EAAKjD,CACX,CACF,CACA,MAAO,CAACiQ,EAAYpQ,EAAGG,EACzB,CA4CA,SAASyQ,EAAoB/N,GAG3B,OAAO6H,GAAsBvH,EAAAA,EAAAA,IAAmBN,IAAUgB,MAAOgN,EAAAA,EAAAA,IAAchO,GAASiO,UAC1F,CAiEA,SAASC,EAAkClO,EAASmO,EAAkBrQ,GACpE,IAAIyC,EACJ,GAAyB,aAArB4N,EACF5N,EA7CJ,SAAyBP,EAASlC,GAChC,MAAMgO,GAAMC,EAAAA,EAAAA,IAAU/L,GAChBoO,GAAO9N,EAAAA,EAAAA,IAAmBN,GAC1BiM,EAAiBH,EAAIG,eAC3B,IAAI7O,EAAQgR,EAAKC,YACb9Q,EAAS6Q,EAAKE,aACdnR,EAAI,EACJG,EAAI,EACR,GAAI2O,EAAgB,CAClB7O,EAAQ6O,EAAe7O,MACvBG,EAAS0O,EAAe1O,OACxB,MAAMgR,GAAsBvC,EAAAA,EAAAA,QACvBuC,GAAuBA,GAAoC,UAAbzQ,KACjDX,EAAI8O,EAAeC,WACnB5O,EAAI2O,EAAeE,UAEvB,CACA,MAAO,CACL/O,QACAG,SACAJ,IACAG,IAEJ,CAsBWkR,CAAgBxO,EAASlC,QAC3B,GAAyB,aAArBqQ,EACT5N,EAlEJ,SAAyBP,GACvB,MAAMoO,GAAO9N,EAAAA,EAAAA,IAAmBN,GAC1ByO,GAAST,EAAAA,EAAAA,IAAchO,GACvB0O,EAAO1O,EAAQ2O,cAAcD,KAC7BtR,GAAQgF,EAAAA,EAAAA,IAAIgM,EAAKQ,YAAaR,EAAKC,YAAaK,EAAKE,YAAaF,EAAKL,aACvE9Q,GAAS6E,EAAAA,EAAAA,IAAIgM,EAAKS,aAAcT,EAAKE,aAAcI,EAAKG,aAAcH,EAAKJ,cACjF,IAAInR,GAAKsR,EAAOR,WAAaF,EAAoB/N,GACjD,MAAM1C,GAAKmR,EAAOK,UAIlB,MAHyC,SAArChE,EAAAA,EAAAA,IAAiB4D,GAAMK,YACzB5R,IAAKiF,EAAAA,EAAAA,IAAIgM,EAAKC,YAAaK,EAAKL,aAAejR,GAE1C,CACLA,QACAG,SACAJ,IACAG,IAEJ,CAiDW0R,EAAgB1O,EAAAA,EAAAA,IAAmBN,SACrC,IAAII,EAAAA,EAAAA,IAAU+N,GACnB5N,EAvBJ,SAAoCP,EAASlC,GAC3C,MAAMwO,EAAazE,EAAsB7H,GAAS,EAAmB,UAAblC,GAClDgD,EAAMwL,EAAWxL,IAAMd,EAAQmN,UAC/BnM,EAAOsL,EAAWtL,KAAOhB,EAAQiN,WACjCV,GAAQtB,EAAAA,EAAAA,IAAcjL,GAAWW,EAASX,IAAWyL,EAAAA,EAAAA,IAAa,GAKxE,MAAO,CACLrO,MALY4C,EAAQqO,YAAc9B,EAAMpP,EAMxCI,OALayC,EAAQsO,aAAe/B,EAAMjP,EAM1CH,EALQ6D,EAAOuL,EAAMpP,EAMrBG,EALQwD,EAAMyL,EAAMjP,EAOxB,CAQW2R,CAA2Bd,EAAkBrQ,OAC/C,CACL,MAAM0O,EAAgBX,EAAiB7L,GACvCO,EAAO,IACF4N,EACHhR,EAAGgR,EAAiBhR,EAAIqP,EAAcrP,EACtCG,EAAG6Q,EAAiB7Q,EAAIkP,EAAclP,EAE1C,CACA,OAAO4C,EAAAA,EAAAA,IAAiBK,EAC1B,CACA,SAAS2O,EAAyBlP,EAASmP,GACzC,MAAMC,GAAaC,EAAAA,EAAAA,IAAcrP,GACjC,QAAIoP,IAAeD,KAAa/O,EAAAA,EAAAA,IAAUgP,KAAeE,EAAAA,EAAAA,IAAsBF,MAG9B,WAA1CtE,EAAAA,EAAAA,IAAiBsE,GAAYG,UAAwBL,EAAyBE,EAAYD,GACnG,CA2EA,SAASK,EAA8BxP,EAASQ,EAAc1C,EAAUtB,GACtE,MAAMiT,GAA0BxE,EAAAA,EAAAA,IAAczK,GACxCkP,GAAkBpP,EAAAA,EAAAA,IAAmBE,GACrCiM,EAAuB,UAAb3O,EACVyC,EAAOsH,EAAsB7H,GAAS,EAAMyM,EAASjM,GAC3D,IAAIiO,EAAS,CACXR,WAAY,EACZa,UAAW,GAEb,MAAMrI,GAAUgF,EAAAA,EAAAA,IAAa,GAC7B,GAAIgE,IAA4BA,IAA4BhD,EAI1D,IAHkC,UAA9BkD,EAAAA,EAAAA,IAAYnP,KAA4BoP,EAAAA,EAAAA,IAAkBF,MAC5DjB,GAAST,EAAAA,EAAAA,IAAcxN,IAErBiP,EAAyB,CAC3B,MAAMI,EAAahI,EAAsBrH,GAAc,EAAMiM,EAASjM,GACtEiG,EAAQtJ,EAAI0S,EAAW1S,EAAIqD,EAAayM,WACxCxG,EAAQnJ,EAAIuS,EAAWvS,EAAIkD,EAAa2M,SAC1C,MAAWuC,IACTjJ,EAAQtJ,EAAI4Q,EAAoB2B,IAGpC,IAAIvS,EAAIoD,EAAKS,KAAOyN,EAAOR,WAAaxH,EAAQtJ,EAC5CG,EAAIiD,EAAKO,IAAM2N,EAAOK,UAAYrI,EAAQnJ,EAC9C,MAAOiQ,EAAYuC,EAAWC,GAAazC,EAAS9Q,GASpD,OARI+Q,IACFpQ,GAAK2S,EACLxS,GAAKyS,EACDN,IACFtS,GAAKqD,EAAayM,WAClB3P,GAAKkD,EAAa2M,YAGf,CACLhQ,IACAG,IACAF,MAAOmD,EAAKnD,MACZG,OAAQgD,EAAKhD,OAEjB,CAEA,SAASyS,EAAoBhQ,EAASiQ,GACpC,OAAKhF,EAAAA,EAAAA,IAAcjL,IAAmD,WAAvC8K,EAAAA,EAAAA,IAAiB9K,GAASuP,SAGrDU,EACKA,EAASjQ,GAEXA,EAAQQ,aALN,IAMX,CAIA,SAASC,EAAgBT,EAASiQ,GAChC,MAAMC,GAASnE,EAAAA,EAAAA,IAAU/L,GACzB,KAAKiL,EAAAA,EAAAA,IAAcjL,GACjB,OAAOkQ,EAET,IAAI1P,EAAewP,EAAoBhQ,EAASiQ,GAChD,KAAOzP,IAAgB2P,EAAAA,EAAAA,IAAe3P,IAA6D,YAA5CsK,EAAAA,EAAAA,IAAiBtK,GAAc+O,UACpF/O,EAAewP,EAAoBxP,EAAcyP,GAEnD,OAAIzP,IAA+C,UAA9BmP,EAAAA,EAAAA,IAAYnP,IAA0D,UAA9BmP,EAAAA,EAAAA,IAAYnP,IAAwE,YAA5CsK,EAAAA,EAAAA,IAAiBtK,GAAc+O,YAA0Ba,EAAAA,EAAAA,IAAkB5P,IACvK0P,EAEF1P,IAAgBsN,EAAAA,EAAAA,IAAmB9N,IAAYkQ,CACxD,CAmBA,MAAMlS,EAAW,CACf6C,sDAxSF,SAA+DzE,GAC7D,IAAI,SACF+C,EAAQ,KACRoB,EAAI,aACJC,EAAY,SACZ1C,GACE1B,EACJ,MAAMsT,GAAkBpP,EAAAA,EAAAA,IAAmBE,IACpC+M,GAAcpO,EAAWmO,EAASnO,EAAS3C,UAAY,EAAC,GAC/D,GAAIgE,IAAiBkP,GAAmBnC,EACtC,OAAOhN,EAET,IAAIkO,EAAS,CACXR,WAAY,EACZa,UAAW,GAETvC,GAAQd,EAAAA,EAAAA,IAAa,GACzB,MAAMhF,GAAUgF,EAAAA,EAAAA,IAAa,GACvBgE,GAA0BxE,EAAAA,EAAAA,IAAczK,GAC9C,IAAIiP,IAA4BA,GAAwC,UAAb3R,MACvB,UAA9B6R,EAAAA,EAAAA,IAAYnP,KAA4BoP,EAAAA,EAAAA,IAAkBF,MAC5DjB,GAAST,EAAAA,EAAAA,IAAcxN,KAErByK,EAAAA,EAAAA,IAAczK,IAAe,CAC/B,MAAMqP,EAAahI,EAAsBrH,GACzC+L,EAAQ5L,EAASH,GACjBiG,EAAQtJ,EAAI0S,EAAW1S,EAAIqD,EAAayM,WACxCxG,EAAQnJ,EAAIuS,EAAWvS,EAAIkD,EAAa2M,SAC1C,CAEF,MAAO,CACL/P,MAAOmD,EAAKnD,MAAQmP,EAAMpP,EAC1BI,OAAQgD,EAAKhD,OAASgP,EAAMjP,EAC5BH,EAAGoD,EAAKpD,EAAIoP,EAAMpP,EAAIsR,EAAOR,WAAa1B,EAAMpP,EAAIsJ,EAAQtJ,EAC5DG,EAAGiD,EAAKjD,EAAIiP,EAAMjP,EAAImR,EAAOK,UAAYvC,EAAMjP,EAAImJ,EAAQnJ,EAE/D,EAqQEgD,mBAAkB,KAClBH,gBA7HF,SAAyB/D,GACvB,IAAI,QACF4D,EAAO,SACPR,EAAQ,aACRC,EAAY,SACZ3B,GACE1B,EACJ,MACMiU,EAAoB,IADoB,sBAAb7Q,EAxCnC,SAAqCQ,EAASsQ,GAC5C,MAAMC,EAAeD,EAAME,IAAIxQ,GAC/B,GAAIuQ,EACF,OAAOA,EAET,IAAIE,GAASC,EAAAA,EAAAA,IAAqB1Q,EAAS,IAAI,GAAO9B,QAAOyS,IAAMvQ,EAAAA,EAAAA,IAAUuQ,IAA2B,UAApBhB,EAAAA,EAAAA,IAAYgB,KAC5FC,EAAsC,KAC1C,MAAMC,EAAwD,WAAvC/F,EAAAA,EAAAA,IAAiB9K,GAASuP,SACjD,IAAIuB,EAAcD,GAAiBxB,EAAAA,EAAAA,IAAcrP,GAAWA,EAG5D,MAAOI,EAAAA,EAAAA,IAAU0Q,MAAiBxB,EAAAA,EAAAA,IAAsBwB,IAAc,CACpE,MAAMC,GAAgBjG,EAAAA,EAAAA,IAAiBgG,GACjCE,GAA0BZ,EAAAA,EAAAA,IAAkBU,GAC7CE,GAAsD,UAA3BD,EAAcxB,WAC5CqB,EAAsC,OAEVC,GAAkBG,IAA4BJ,GAAuCI,GAAsD,WAA3BD,EAAcxB,UAA2BqB,GAAuC,CAAC,WAAY,SAASnI,SAASmI,EAAoCrB,YAAaK,EAAAA,EAAAA,IAAkBkB,KAAiBE,GAA2B9B,EAAyBlP,EAAS8Q,IAG5YL,EAASA,EAAOvS,QAAO+S,GAAYA,IAAaH,IAGhDF,EAAsCG,EAExCD,GAAczB,EAAAA,EAAAA,IAAcyB,EAC9B,CAEA,OADAR,EAAMY,IAAIlR,EAASyQ,GACZA,CACT,CAWsEU,CAA4BnR,EAASoR,KAAKC,IAAM,GAAGC,OAAO9R,GACtEC,GAClD8R,EAAwBlB,EAAkB,GAC1CmB,EAAenB,EAAkB9L,QAAO,CAACkN,EAAStD,KACtD,MAAM5N,EAAO2N,EAAkClO,EAASmO,EAAkBrQ,GAK1E,OAJA2T,EAAQ3Q,KAAMsB,EAAAA,EAAAA,IAAI7B,EAAKO,IAAK2Q,EAAQ3Q,KACpC2Q,EAAQxQ,OAAQgB,EAAAA,EAAAA,IAAI1B,EAAKU,MAAOwQ,EAAQxQ,OACxCwQ,EAAQ1Q,QAASkB,EAAAA,EAAAA,IAAI1B,EAAKQ,OAAQ0Q,EAAQ1Q,QAC1C0Q,EAAQzQ,MAAOoB,EAAAA,EAAAA,IAAI7B,EAAKS,KAAMyQ,EAAQzQ,MAC/ByQ,CAAO,GACbvD,EAAkClO,EAASuR,EAAuBzT,IACrE,MAAO,CACLV,MAAOoU,EAAavQ,MAAQuQ,EAAaxQ,KACzCzD,OAAQiU,EAAazQ,OAASyQ,EAAa1Q,IAC3C3D,EAAGqU,EAAaxQ,KAChB1D,EAAGkU,EAAa1Q,IAEpB,EAsGEL,kBACAnC,gBAtBsBV,eAAgBoB,GACtC,MAAM0S,EAAoBN,KAAK3Q,iBAAmBA,EAC5CkR,EAAkBP,KAAK/P,cAC7B,MAAO,CACL9E,UAAWiT,EAA8BxQ,EAAKzC,gBAAiBmV,EAAkB1S,EAAKxC,UAAWwC,EAAKlB,SAAUkB,EAAKxC,UACrHA,SAAU,CACRW,EAAG,EACHG,EAAG,WACOqU,EAAgB3S,EAAKxC,WAGrC,EAYE6K,eAvQF,SAAwBrH,GACtB,OAAOmH,MAAMC,KAAKpH,EAAQqH,iBAC5B,EAsQEhG,cAvGF,SAAuBrB,GACrB,MAAM,MACJ5C,EAAK,OACLG,GACEqN,EAAiB5K,GACrB,MAAO,CACL5C,QACAG,SAEJ,EA+FEoD,WACAP,UAAS,KACThC,MAdF,SAAe4B,GACb,MAA+C,SAAxC8K,EAAAA,EAAAA,IAAiB9K,GAAS+O,SACnC,GAkGA,SAAS6C,EAAWrV,EAAWC,EAAUqV,EAAQvS,QAC/B,IAAZA,IACFA,EAAU,CAAC,GAEb,MAAM,eACJwS,GAAiB,EAAI,eACrBC,GAAiB,EAAI,cACrBC,EAA0C,oBAAnBC,eAA6B,YACpDC,EAA8C,oBAAzBC,qBAAmC,eACxDC,GAAiB,GACf9S,EACE+S,EAAc9G,EAAchP,GAC5B+V,EAAYR,GAAkBC,EAAiB,IAAKM,GAAc3B,EAAAA,EAAAA,IAAqB2B,GAAe,OAAQ3B,EAAAA,EAAAA,IAAqBlU,IAAa,GACtJ8V,EAAU9E,SAAQyD,IAChBa,GAAkBb,EAASsB,iBAAiB,SAAUV,EAAQ,CAC5DW,SAAS,IAEXT,GAAkBd,EAASsB,iBAAiB,SAAUV,EAAO,IAE/D,MAAMY,EAAYJ,GAAeH,EArGnC,SAAqBlS,EAAS0S,GAC5B,IACIC,EADAC,EAAK,KAET,MAAMC,GAAOvS,EAAAA,EAAAA,IAAmBN,GAChC,SAAS8S,IACP,IAAIC,EACJC,aAAaL,GACC,OAAbI,EAAMH,IAAeG,EAAIE,aAC1BL,EAAK,IACP,CA8DA,OA7DA,SAASM,EAAQC,EAAMC,QACR,IAATD,IACFA,GAAO,QAES,IAAdC,IACFA,EAAY,GAEdN,IACA,MAAM,KACJ9R,EAAI,IACJF,EAAG,MACH1D,EAAK,OACLG,GACEyC,EAAQ6H,wBAIZ,GAHKsL,GACHT,KAEGtV,IAAUG,EACb,OAEF,MAKM+B,EAAU,CACd+T,aANeC,EAAAA,EAAAA,IAAMxS,GAIQ,QAHZwS,EAAAA,EAAAA,IAAMT,EAAKxE,aAAerN,EAAO5D,IAGC,QAFjCkW,EAAAA,EAAAA,IAAMT,EAAKvE,cAAgBxN,EAAMvD,IAEuB,QAD1D+V,EAAAA,EAAAA,IAAMtS,GACyE,KAG/FoS,WAAWhR,EAAAA,EAAAA,IAAI,GAAGH,EAAAA,EAAAA,IAAI,EAAGmR,KAAe,GAE1C,IAAIG,GAAgB,EACpB,SAASC,EAAcC,GACrB,MAAMC,EAAQD,EAAQ,GAAGE,kBACzB,GAAID,IAAUN,EAAW,CACvB,IAAKG,EACH,OAAOL,IAEJQ,EAKHR,GAAQ,EAAOQ,GAJff,EAAYiB,YAAW,KACrBV,GAAQ,EAAO,KAAK,GACnB,IAIP,CACAK,GAAgB,CAClB,CAIA,IACEX,EAAK,IAAIT,qBAAqBqB,EAAe,IACxClU,EAEHuT,KAAMA,EAAKlE,eAEf,CAAE,MAAOhB,GACPiF,EAAK,IAAIT,qBAAqBqB,EAAelU,EAC/C,CACAsT,EAAGiB,QAAQ7T,EACb,CACAkT,EAAQ,GACDJ,CACT,CA6BiDgB,CAAYzB,EAAaR,GAAU,KAClF,IAsBIkC,EAtBAC,GAAkB,EAClBC,EAAiB,KACjBjC,IACFiC,EAAiB,IAAIhC,gBAAe7V,IAClC,IAAK8X,GAAc9X,EACf8X,GAAcA,EAAWC,SAAW9B,GAAe4B,IAGrDA,EAAeG,UAAU5X,GACzB6X,qBAAqBL,GACrBA,EAAiBM,uBAAsB,KACrC,IAAIC,EACkC,OAArCA,EAAkBN,IAA2BM,EAAgBV,QAAQrX,EAAS,KAGnFqV,GAAQ,IAENQ,IAAgBD,GAClB6B,EAAeJ,QAAQxB,GAEzB4B,EAAeJ,QAAQrX,IAGzB,IAAIgY,EAAcpC,EAAiBvK,EAAsBtL,GAAa,KAatE,OAZI6V,GAGJ,SAASqC,IACP,MAAMC,EAAc7M,EAAsBtL,IACtCiY,GAAgBE,EAAYvX,IAAMqX,EAAYrX,GAAKuX,EAAYpX,IAAMkX,EAAYlX,GAAKoX,EAAYtX,QAAUoX,EAAYpX,OAASsX,EAAYnX,SAAWiX,EAAYjX,QACtKsU,IAEF2C,EAAcE,EACdX,EAAUO,sBAAsBG,EAClC,CATEA,GAUF5C,IACO,KACL,IAAI8C,EACJrC,EAAU9E,SAAQyD,IAChBa,GAAkBb,EAAS2D,oBAAoB,SAAU/C,GACzDE,GAAkBd,EAAS2D,oBAAoB,SAAU/C,EAAO,IAErD,MAAbY,GAAqBA,IACkB,OAAtCkC,EAAmBV,IAA2BU,EAAiB1B,aAChEgB,EAAiB,KACb7B,GACFiC,qBAAqBN,EACvB,CAEJ,CAQA,MAAMpR,EAAgBkS,EAAAA,GAOhBhM,EAAQiM,EAAAA,GAQR/P,EAAOgQ,EAAAA,GAQPnL,EAAOoL,EAAAA,GAOPxO,EAAOyO,EAAAA,GAOP/T,EAAQgU,EAAAA,GAORjO,EAASkO,EAAAA,GAKT/L,EAAagM,EAAAA,GAMbzX,EAAkBA,CAACpB,EAAWC,EAAU8C,KAI5C,MAAMgR,EAAQ,IAAI+E,IACZC,EAAgB,CACpBtX,cACGsB,GAECiW,EAAoB,IACrBD,EAActX,SACjBqT,GAAIf,GAEN,OAAOkF,EAAAA,EAAAA,IAAkBjZ,EAAWC,EAAU,IACzC8Y,EACHtX,SAAUuX,GACV,C,kBCtrBJ,SAAS5F,EAAY8F,GACnB,OAAIC,EAAOD,IACDA,EAAKE,UAAY,IAAIC,cAKxB,WACT,CACA,SAAS7J,EAAU0J,GACjB,IAAII,EACJ,OAAgB,MAARJ,GAA8D,OAA7CI,EAAsBJ,EAAK9G,oBAAyB,EAASkH,EAAoBC,cAAgB5F,MAC5H,CACA,SAAS5P,EAAmBmV,GAC1B,IAAIrZ,EACJ,OAA0F,OAAlFA,GAAQsZ,EAAOD,GAAQA,EAAK9G,cAAgB8G,EAAKM,WAAa7F,OAAO6F,eAAoB,EAAS3Z,EAAKsT,eACjH,CACA,SAASgG,EAAOM,GACd,OAAOA,aAAiBC,MAAQD,aAAiBjK,EAAUiK,GAAOC,IACpE,CACA,SAAS7V,EAAU4V,GACjB,OAAOA,aAAiBE,SAAWF,aAAiBjK,EAAUiK,GAAOE,OACvE,CACA,SAASjL,EAAc+K,GACrB,OAAOA,aAAiBG,aAAeH,aAAiBjK,EAAUiK,GAAOG,WAC3E,CACA,SAASC,EAAaJ,GAEpB,MAA0B,qBAAfK,aAGJL,aAAiBK,YAAcL,aAAiBjK,EAAUiK,GAAOK,WAC1E,CACA,SAASzG,EAAkB5P,GACzB,MAAM,SACJyD,EAAQ,UACR6S,EAAS,UACTC,EAAS,QACTC,GACE1L,EAAiB9K,GACrB,MAAO,kCAAkCyW,KAAKhT,EAAW8S,EAAYD,KAAe,CAAC,SAAU,YAAY7N,SAAS+N,EACtH,CACA,SAASrG,EAAenQ,GACtB,MAAO,CAAC,QAAS,KAAM,MAAMyI,SAASkH,EAAY3P,GACpD,CACA,SAASoQ,EAAkBpQ,GACzB,MAAM0W,EAAS1K,IACTnB,EAAMC,EAAiB9K,GAG7B,MAAyB,SAAlB6K,EAAI8L,WAA4C,SAApB9L,EAAI+L,eAA2B/L,EAAIgM,eAAsC,WAAtBhM,EAAIgM,gBAAwCH,KAAW7L,EAAIiM,gBAAwC,SAAvBjM,EAAIiM,iBAAuCJ,KAAW7L,EAAI3M,QAAwB,SAAf2M,EAAI3M,QAA8B,CAAC,YAAa,cAAe,UAAUqI,MAAKyP,IAAUnL,EAAIkM,YAAc,IAAItO,SAASuN,MAAW,CAAC,QAAS,SAAU,SAAU,WAAWzP,MAAKyP,IAAUnL,EAAImM,SAAW,IAAIvO,SAASuN,IAC7b,CACA,SAASlI,EAAmB9N,GAC1B,IAAI8Q,EAAczB,EAAcrP,GAChC,KAAOiL,EAAc6F,KAAiBxB,EAAsBwB,IAAc,CACxE,GAAIV,EAAkBU,GACpB,OAAOA,EAEPA,EAAczB,EAAcyB,EAEhC,CACA,OAAO,IACT,CACA,SAAS9E,IACP,QAAmB,qBAARiL,MAAwBA,IAAIC,WAChCD,IAAIC,SAAS,0BAA2B,OACjD,CACA,SAAS5H,EAAsBmG,GAC7B,MAAO,CAAC,OAAQ,OAAQ,aAAahN,SAASkH,EAAY8F,GAC5D,CACA,SAAS3K,EAAiB9K,GACxB,OAAO+L,EAAU/L,GAAS8K,iBAAiB9K,EAC7C,CACA,SAASgO,EAAchO,GACrB,OAAII,EAAUJ,GACL,CACLiO,WAAYjO,EAAQiO,WACpBa,UAAW9O,EAAQ8O,WAGhB,CACLb,WAAYjO,EAAQmX,YACpBrI,UAAW9O,EAAQoX,YAEvB,CACA,SAAS/H,EAAcoG,GACrB,GAA0B,SAAtB9F,EAAY8F,GACd,OAAOA,EAET,MAAMhF,EAENgF,EAAK4B,cAEL5B,EAAKrG,YAELgH,EAAaX,IAASA,EAAK6B,MAE3BhX,EAAmBmV,GACnB,OAAOW,EAAa3F,GAAUA,EAAO6G,KAAO7G,CAC9C,CACA,SAAS8G,EAA2B9B,GAClC,MAAMrG,EAAaC,EAAcoG,GACjC,OAAInG,EAAsBF,GACjBqG,EAAK9G,cAAgB8G,EAAK9G,cAAcD,KAAO+G,EAAK/G,KAEzDzD,EAAcmE,IAAeQ,EAAkBR,GAC1CA,EAEFmI,EAA2BnI,EACpC,CACA,SAASsB,EAAqB+E,EAAM+B,EAAMC,GACxC,IAAIC,OACS,IAATF,IACFA,EAAO,SAEe,IAApBC,IACFA,GAAkB,GAEpB,MAAME,EAAqBJ,EAA2B9B,GAChDmC,EAASD,KAAuE,OAA9CD,EAAuBjC,EAAK9G,oBAAyB,EAAS+I,EAAqBhJ,MACrH5C,EAAMC,EAAU4L,GACtB,OAAIC,EACKJ,EAAKlG,OAAOxF,EAAKA,EAAIG,gBAAkB,GAAI2D,EAAkB+H,GAAsBA,EAAqB,GAAI7L,EAAIgB,cAAgB2K,EAAkB/G,EAAqB5E,EAAIgB,cAAgB,IAE7L0K,EAAKlG,OAAOqG,EAAoBjH,EAAqBiH,EAAoB,GAAIF,GACtF,C,yXCxHA,MAAMzR,EAAQ,CAAC,MAAO,QAAS,SAAU,QACnC6R,EAAa,CAAC,QAAS,OACvB3U,EAA0B8C,EAAMzB,QAAO,CAACC,EAAKzH,IAASyH,EAAI8M,OAAOvU,EAAMA,EAAO,IAAM8a,EAAW,GAAI9a,EAAO,IAAM8a,EAAW,KAAK,IAChI5V,EAAM6V,KAAK7V,IACXG,EAAM0V,KAAK1V,IACXiJ,EAAQyM,KAAKzM,MACbiI,EAAQwE,KAAKxE,MACb7H,EAAehH,IAAK,CACxBtH,EAAGsH,EACHnH,EAAGmH,IAECsT,EAAkB,CACtB/W,KAAM,QACNC,MAAO,OACPF,OAAQ,MACRD,IAAK,UAEDkX,EAAuB,CAC3BC,MAAO,MACPC,IAAK,SAEP,SAAS3V,EAAM0V,EAAOjC,EAAOkC,GAC3B,OAAO9V,EAAI6V,EAAOhW,EAAI+T,EAAOkC,GAC/B,CACA,SAASrY,EAASmW,EAAOmC,GACvB,MAAwB,oBAAVnC,EAAuBA,EAAMmC,GAASnC,CACtD,CACA,SAAShZ,EAAQX,GACf,OAAOA,EAAU+b,MAAM,KAAK,EAC9B,CACA,SAAS1a,EAAarB,GACpB,OAAOA,EAAU+b,MAAM,KAAK,EAC9B,CACA,SAASrP,EAAgB5H,GACvB,MAAgB,MAATA,EAAe,IAAM,GAC9B,CACA,SAASrE,EAAcqE,GACrB,MAAgB,MAATA,EAAe,SAAW,OACnC,CACA,SAASzE,EAAYL,GACnB,MAAO,CAAC,MAAO,UAAUoM,SAASzL,EAAQX,IAAc,IAAM,GAChE,CACA,SAASO,EAAiBP,GACxB,OAAO0M,EAAgBrM,EAAYL,GACrC,CACA,SAASyH,EAAkBzH,EAAWgC,EAAO/B,QAC/B,IAARA,IACFA,GAAM,GAER,MAAM0G,EAAYtF,EAAarB,GACzBM,EAAgBC,EAAiBP,GACjCsC,EAAS7B,EAAcH,GAC7B,IAAI0b,EAAsC,MAAlB1b,EAAwBqG,KAAe1G,EAAM,MAAQ,SAAW,QAAU,OAAuB,UAAd0G,EAAwB,SAAW,MAI9I,OAHI3E,EAAM9B,UAAUoC,GAAUN,EAAM7B,SAASmC,KAC3C0Z,EAAoB1S,EAAqB0S,IAEpC,CAACA,EAAmB1S,EAAqB0S,GAClD,CACA,SAASzS,EAAsBvJ,GAC7B,MAAMic,EAAoB3S,EAAqBtJ,GAC/C,MAAO,CAACkH,EAA8BlH,GAAYic,EAAmB/U,EAA8B+U,GACrG,CACA,SAAS/U,EAA8BlH,GACrC,OAAOA,EAAUkc,QAAQ,cAAcvV,GAAagV,EAAqBhV,IAC3E,CAkBA,SAAS8C,EAA0BzJ,EAAWoJ,EAAesJ,EAAWzS,GACtE,MAAM0G,EAAYtF,EAAarB,GAC/B,IAAImb,EAnBN,SAAqBza,EAAMyb,EAASlc,GAClC,MAAMmc,EAAK,CAAC,OAAQ,SACdC,EAAK,CAAC,QAAS,QACfC,EAAK,CAAC,MAAO,UACbC,EAAK,CAAC,SAAU,OACtB,OAAQ7b,GACN,IAAK,MACL,IAAK,SACH,OAAIT,EAAYkc,EAAUE,EAAKD,EACxBD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EAAUG,EAAKC,EACxB,QACE,MAAO,GAEb,CAGaC,CAAY7b,EAAQX,GAA0B,UAAd0S,EAAuBzS,GAOlE,OANI0G,IACFwU,EAAOA,EAAKpT,KAAIrH,GAAQA,EAAO,IAAMiG,IACjCyC,IACF+R,EAAOA,EAAKlG,OAAOkG,EAAKpT,IAAIb,MAGzBiU,CACT,CACA,SAAS7R,EAAqBtJ,GAC5B,OAAOA,EAAUkc,QAAQ,0BAA0Bxb,GAAQgb,EAAgBhb,IAC7E,CAUA,SAASgD,EAAiBH,GACxB,MAA0B,kBAAZA,EAVhB,SAA6BA,GAC3B,MAAO,CACLkB,IAAK,EACLG,MAAO,EACPF,OAAQ,EACRC,KAAM,KACHpB,EAEP,CAEuCkZ,CAAoBlZ,GAAW,CAClEkB,IAAKlB,EACLqB,MAAOrB,EACPmB,OAAQnB,EACRoB,KAAMpB,EAEV,CACA,SAASM,EAAiBK,GACxB,MAAO,IACFA,EACHO,IAAKP,EAAKjD,EACV0D,KAAMT,EAAKpD,EACX8D,MAAOV,EAAKpD,EAAIoD,EAAKnD,MACrB2D,OAAQR,EAAKjD,EAAIiD,EAAKhD,OAE1B,C","sources":["../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"],"sourcesContent":["import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getContainingBlock, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction topLayer(floating) {\n  let isTopLayer = false;\n  let x = 0;\n  let y = 0;\n  function setIsTopLayer(selector) {\n    try {\n      isTopLayer = isTopLayer || floating.matches(selector);\n    } catch (e) {}\n  }\n  topLayerSelectors.forEach(selector => {\n    setIsTopLayer(selector);\n  });\n  if (isTopLayer) {\n    const containingBlock = getContainingBlock(floating);\n    if (containingBlock) {\n      const rect = containingBlock.getBoundingClientRect();\n      x = rect.x;\n      y = rect.y;\n    }\n  }\n  return [isTopLayer, x, y];\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const documentElement = getDocumentElement(offsetParent);\n  const [isTopLayer] = elements ? topLayer(elements.floating) : [false];\n  if (offsetParent === documentElement || isTopLayer) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy, floating) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  let x = rect.left + scroll.scrollLeft - offsets.x;\n  let y = rect.top + scroll.scrollTop - offsets.y;\n  const [isTopLayer, topLayerX, topLayerY] = topLayer(floating);\n  if (isTopLayer) {\n    x += topLayerX;\n    y += topLayerY;\n    if (isOffsetParentAnElement) {\n      x += offsetParent.clientLeft;\n      y += offsetParent.clientTop;\n    }\n  }\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy, data.floating),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n"],"names":["computeCoordsFromPlacement","_ref","placement","rtl","reference","floating","sideAxis","getSideAxis","alignmentAxis","getAlignmentAxis","alignLength","getAxisLength","side","getSide","isVertical","commonX","x","width","commonY","y","height","commonAlign","coords","getAlignment","computePosition","async","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","rects","getElementRects","statefulPlacement","middlewareData","resetCount","i","length","name","fn","nextX","nextY","data","reset","initialPlacement","elements","detectOverflow","state","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","padding","evaluate","paddingObject","getPaddingObject","element","clippingClientRect","rectToClientRect","getClippingRect","isElement","contextElement","getDocumentElement","rect","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","top","bottom","left","right","arrow","axis","arrowDimensions","getDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","min","maxPadding","min$1","max","center","offset","clamp","shouldAddOffset","alignmentOffset","centerOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","alignment","allowedPlacements","placements","autoAlignment","detectOverflowOptions","placements$1","undefined","getOppositeAlignmentPlacement","getPlacementList","overflow","currentIndex","index","currentPlacement","alignmentSides","getAlignmentSides","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","reduce","acc","v","sort","a","b","resetPlacement","every","flip","_middlewareData$arrow","_middlewareData$flip","mainAxis","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","getOppositePlacement","getExpandedPlacements","push","getOppositeAxisPlacements","overflowsData","sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","inline","nativeClientRects","Array","from","getClientRects","clientRects","sortedRects","groups","prevRect","getRectsByLine","fallback","resetRects","getBoundingClientRect","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","_middlewareData$offse","diffCoords","mainAxisMulti","includes","crossAxisMulti","rawValue","convertValueToCoords","shift","limiter","getOppositeAxis","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","getCssDimensions","css","getComputedStyle","parseFloat","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","round","$","unwrapElement","domElement","createCoords","Number","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","topLayer","isTopLayer","forEach","selector","matches","e","setIsTopLayer","containingBlock","getContainingBlock","getWindowScrollBarX","getNodeScroll","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","ownerDocument","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","getNodeName","isOverflowElement","offsetRect","topLayerX","topLayerY","getTrueOffsetParent","polyfill","window","isTableElement","isContainingBlock","clippingAncestors","cache","cachedResult","get","result","getOverflowAncestors","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","concat","firstClippingAncestor","clippingRect","accRect","getOffsetParentFn","getDimensionsFn","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","floor","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","autoPlacement$1","shift$1","flip$1","size$1","hide$1","arrow$1","inline$1","limitShift$1","Map","mergedOptions","platformWithCache","computePosition$1","node","isNode","nodeName","toLowerCase","_node$ownerDocument","defaultView","document","value","Node","Element","HTMLElement","isShadowRoot","ShadowRoot","overflowX","overflowY","display","test","webkit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","pageXOffset","pageYOffset","assignedSlot","host","getNearestOverflowAncestor","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","alignments","Math","oppositeSideMap","oppositeAlignmentMap","start","end","param","split","mainAlignmentSide","oppositePlacement","replace","isStart","lr","rl","tb","bt","getSideList","expandPaddingObject"],"sourceRoot":""}