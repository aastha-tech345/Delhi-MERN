{"version":3,"file":"static/js/760.b501dd75.chunk.js","mappings":"8OAMA,MAAMA,EAAWC,IAA0B,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAxB,gBAAEC,GAAiBP,EAKnC,MAAMQ,GAAWC,EAAAA,EAAAA,MAEjB,IAAIC,EAAYC,aAAaC,QAAQ,UAAY,gBAEjD,MAAMC,EAAiBA,CAACC,EAAOC,EAAMC,KAC/BA,GAAwC,MAAnCA,EAAEC,OAAOC,QAAQC,eACxBH,EAAEI,iBAES,gBAATL,GACFJ,aAAaU,QAAQ,QAAS,iBACvBb,EAAS,4BACE,aAATO,GACTJ,aAAaU,QAAQ,QAAS,WACvBb,EAAS,sBACE,cAATO,GACTJ,aAAaU,QAAQ,QAAS,YACvBb,EAAS,uBACE,cAATO,GACTJ,aAAaU,QAAQ,QAAS,YACvBb,EAAS,uBACE,gBAATO,GACTJ,aAAaU,QAAQ,QAAS,YACvBb,EAAS,uBACE,QAATO,GACTJ,aAAaU,QAAQ,QAAS,YACvBb,EAAS,uBACE,aAATO,GACTJ,aAAaU,QAAQ,QAAS,SACvBb,EAAS,yBAFX,IAKTc,EAAAA,EAAAA,YAAU,KACRT,GAAgB,GACf,CAACH,IAEJ,IAAIa,EAAWZ,aAAaC,QAAQ,kBAChCY,EAAMC,KAAKC,MAAMH,GAGrB,MAAMI,GAAe,OAAHH,QAAG,IAAHA,GAAU,QAAPvB,EAAHuB,EAAKI,aAAK,IAAA3B,OAAP,EAAHA,EAAY4B,MAAM,EAAG,GAAGC,gBAAmB,OAAHN,QAAG,IAAHA,GAAU,QAAPtB,EAAHsB,EAAKI,aAAK,IAAA1B,OAAP,EAAHA,EAAY2B,MAAM,GAAGV,eACzEY,GAAc,OAAHP,QAAG,IAAHA,GAAU,QAAPrB,EAAHqB,EAAKQ,aAAK,IAAA7B,OAAP,EAAHA,EAAY0B,MAAM,EAAG,GAAGC,gBAAmB,OAAHN,QAAG,IAAHA,GAAU,QAAPpB,EAAHoB,EAAKQ,aAAK,IAAA5B,OAAP,EAAHA,EAAYyB,MAAM,GAAGV,eAC9E,IAAIc,GACC,OAAHT,QAAG,IAAHA,GAAW,QAARnB,EAAHmB,EAAKS,cAAM,IAAA5B,OAAR,EAAHA,EAAawB,MAAM,EAAG,GAAGC,gBACtB,OAAHN,QAAG,IAAHA,GAAW,QAARlB,EAAHkB,EAAKS,cAAM,IAAA3B,OAAR,EAAHA,EAAauB,MAAM,GAAGV,eADtB,SAIG,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKU,KACL,MACG,OAAHV,QAAG,IAAHA,OAAG,EAAHA,EAAKW,MAEP,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAAYF,UACzBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BF,SAAA,EAC5CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EAIvBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBAAa,GAAAG,OAAId,EAAS,KAAAc,OAAIV,OAElCQ,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,SAAA,EAEXF,EAAAA,EAAAA,KAAA,KAAGW,SAAS,uBAAsBT,UAChCF,EAAAA,EAAAA,KAAA,QACEY,EAAE,y4CACFF,KAAK,aAGTV,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,YAAUa,GAAG,iBAAgBX,UAC3BF,EAAAA,EAAAA,KAAA,QAAMO,MAAM,KAAKC,OAAO,KAAKE,KAAK,kBAIxCV,EAAAA,EAAAA,KAAA,QAAAE,SAAOL,WAGXG,EAAAA,EAAAA,KAAA,OACEI,UAAU,uBACVF,UAEAC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wDAAuDF,SAAA,EACpEF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,6BAA4BF,UAoB5CC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,IAAK,OAAHd,QAAG,IAAHA,OAAG,EAAHA,EAAK0B,gBAEfX,EAAAA,EAAAA,MAAA,UAAQC,UAAU,6BAA4BF,SAAA,EAC5CC,EAAAA,EAAAA,MAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,SAAA,EAEXF,EAAAA,EAAAA,KAAA,KAAGW,SAAS,sBAAqBT,UAC/BF,EAAAA,EAAAA,KAAA,QACEY,EAAE,ogBACFF,KAAK,YAGTV,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,YAAUa,GAAG,gBAAeX,UAC1BF,EAAAA,EAAAA,KAAA,QAAMO,MAAM,KAAKC,OAAO,KAAKE,KAAK,kBAIxCP,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,IAAK,OAAHd,QAAG,IAAHA,OAAG,EAAHA,EAAK2B,aAEfZ,EAAAA,EAAAA,MAAA,UAAQC,UAAU,wBAAuBF,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,SAAA,EAEXF,EAAAA,EAAAA,KAAA,KAAGW,SAAS,uBAAsBT,UAChCF,EAAAA,EAAAA,KAAA,QACEY,EAAE,63BACFF,KAAK,aAGTV,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,YAAUa,GAAG,iBAAgBX,UAC3BF,EAAAA,EAAAA,KAAA,QAAMO,MAAM,KAAKC,OAAO,KAAKE,KAAK,kBAIxCV,EAAAA,EAAAA,KAAA,QAAAE,SAAU,OAAHd,QAAG,IAAHA,OAAG,EAAHA,EAAK4B,wBAOxBhB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBF,UAC/BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC9BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,UACxBF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAeS,GAAG,UAAUI,KAAK,UAASf,SAAA,EACvDC,EAAAA,EAAAA,MAAA,UACEC,UAAS,YAAAC,OAA4B,kBAAd/B,EAAgC,SAAW,IAClEuC,GAAG,oBACH,iBAAe,MACfI,KAAK,MACL,gBAA6B,kBAAd3C,EACf4C,QAAUtC,GAAMH,EAAe,EAAiB,cAAeG,GAAGsB,SAAA,EAElEC,EAAAA,EAAAA,MAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,SAAA,EAEXF,EAAAA,EAAAA,KAAA,KAAGW,SAAS,sBAAqBT,UAC/BF,EAAAA,EAAAA,KAAA,QAAMY,EAAE,4yCAEVZ,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,YAAUa,GAAG,gBAAeX,UAC1BF,EAAAA,EAAAA,KAAA,QAAMO,MAAM,KAAKC,OAAO,KAAKE,KAAK,kBAIxCV,EAAAA,EAAAA,KAAA,QAAAE,SAAM,sBAERC,EAAAA,EAAAA,MAAA,UACEC,UAAS,YAAAC,OAA4B,YAAd/B,EAA0B,SAAW,IAC5DuC,GAAG,cACH,iBAAe,MACfI,KAAK,MACL,gBAAc,UACd,gBAA6B,YAAd3C,EACf4C,QAAUtC,GAAMH,EAAe,EAAW,WAAYG,GAAGsB,SAAA,CAExD,KACDC,EAAAA,EAAAA,MAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,SAAA,EAEXF,EAAAA,EAAAA,KAAA,KAAGW,SAAS,wBAAuBT,UACjCF,EAAAA,EAAAA,KAAA,QAAMY,EAAE,y3CAEVZ,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,YAAUa,GAAG,kBAAiBX,UAC5BF,EAAAA,EAAAA,KAAA,QACEO,MAAM,KACNC,OAAO,KACPE,KAAK,QACLS,UAAU,gCAKlBnB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAERC,EAAAA,EAAAA,MAAA,UACEC,UAAS,YAAAC,OAA4B,aAAd/B,EAA2B,SAAW,IAC7DuC,GAAG,eACH,iBAAe,MACf,iBAAe,YACfI,KAAK,MACL,gBAAc,WACd,gBAA6B,aAAd3C,EACf4C,QAAUtC,GAAMH,EAAe,EAAY,YAAaG,GAAGsB,SAAA,EAE3DC,EAAAA,EAAAA,MAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,SAAA,EAEXF,EAAAA,EAAAA,KAAA,KAAGW,SAAS,uBAAsBT,UAChCF,EAAAA,EAAAA,KAAA,QAAMY,EAAE,+yBAEVZ,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,YAAUa,GAAG,iBAAgBX,UAC3BF,EAAAA,EAAAA,KAAA,QAAMO,MAAM,KAAKC,OAAO,KAAKE,KAAK,QAAQS,UAAU,2BAI1DnB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAERC,EAAAA,EAAAA,MAAA,UACEC,UAAS,YAAAC,OAA4B,aAAd/B,EAA2B,SAAW,IAC7DuC,GAAG,eACH,iBAAe,MACf,iBAAe,YACfI,KAAK,MACL,gBAAc,WACd,gBAA6B,aAAd3C,EACf4C,QAAUtC,GAAMH,EAAe,EAAY,YAAaG,GAAGsB,SAAA,EAE3DC,EAAAA,EAAAA,MAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,SAAA,EAEXF,EAAAA,EAAAA,KAAA,KAAGW,SAAS,uBAAsBT,UAChCF,EAAAA,EAAAA,KAAA,QAAMY,EAAE,8eAEVZ,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,YAAUa,GAAG,iBAAgBX,UAC3BF,EAAAA,EAAAA,KAAA,QAAMO,MAAM,KAAKC,OAAO,KAAKE,KAAK,QAAQS,UAAU,4BAI1DnB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAERC,EAAAA,EAAAA,MAAA,UACEC,UAAS,YAAAC,OAA4B,aAAd/B,EAA2B,SAAW,IAC7DuC,GAAG,eACH,iBAAe,MACf,iBAAe,YACfI,KAAK,MACL,gBAAc,WACd,gBAA6B,aAAd3C,EACf4C,QAAUtC,GAAMH,EAAe,EAAY,cAAeG,GAAGsB,SAAA,EAE7DF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,mCAAqC,kBAGpDD,EAAAA,EAAAA,MAAA,UACEC,UAAS,YAAAC,OAA4B,aAAd/B,EAA2B,SAAW,IAC7DuC,GAAG,eACH,iBAAe,MACf,iBAAe,YACfI,KAAK,MACL,gBAAc,WACd,gBAA6B,aAAd3C,EACf4C,QAAUtC,GAAMH,EAAe,EAAY,MAAOG,GAAGsB,SAAA,CAEpD,KACDF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,kCAAoC,UAGnDD,EAAAA,EAAAA,MAAA,UACEC,UAAS,YAAAC,OAA4B,UAAd/B,EAAwB,SAAW,IAC1DuC,GAAG,YACH,iBAAe,MACf,iBAAe,SACfI,KAAK,MACL,gBAAc,QACd,gBAA6B,UAAd3C,EACf4C,QAAUtC,GAAMH,EAAe,EAAS,WAAYG,GAAGsB,SAAA,EAEvDC,EAAAA,EAAAA,MAAA,OACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMR,SAAA,EAEXF,EAAAA,EAAAA,KAAA,KAAGW,SAAS,uBAAsBT,UAChCF,EAAAA,EAAAA,KAAA,QAAMY,EAAE,8zCAEVZ,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,YAAUa,GAAG,iBAAgBX,UAC3BF,EAAAA,EAAAA,KAAA,QAAMO,MAAM,KAAKC,OAAO,KAAKE,KAAK,QAAQS,UAAU,4BAI1DnB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mCASrB,EAIP,EAAekB,EAAAA,KAAWzD,E,yGCrV1B,MAwBA,EAxBkBC,IAA6B,IAA5B,SAAEyD,EAAQ,SAAEC,GAAU1D,EAWvC,OAJAsB,EAAAA,EAAAA,YAAU,QAEP,KAGDc,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACuB,IAAU,CACTnB,UAAU,yCACVoB,gBAAgB,eAChBF,SAAUA,EACVD,SAAUA,EACVI,WAAW,cAET,C,+LCvBV,MAoBMC,EAAeA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzB,MAAMvF,GAAWC,EAAAA,EAAAA,MACXuF,GAAWC,EAAAA,EAAAA,MACXC,EAASC,6BACRC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAC1BC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,IACjD,IAAIG,EAAO9F,aAAaC,QAAQ,kBAE5B8F,EAAUjF,KAAKC,MAAM+E,GAEzB,MAAOE,EAAmBC,IAAwBN,EAAAA,EAAAA,UAAS,CACzDO,YAAoB,OAAPH,QAAO,IAAPA,GAA0B,QAAnB3C,EAAP2C,EAASC,yBAAiB,IAAA5C,OAAnB,EAAPA,EAA4B8C,YACzCC,eAAuB,OAAPJ,QAAO,IAAPA,GAA0B,QAAnB1C,EAAP0C,EAASC,yBAAiB,IAAA3C,OAAnB,EAAPA,EAA4B8C,eAC5CC,OAAe,OAAPL,QAAO,IAAPA,GAA0B,QAAnBzC,EAAPyC,EAASC,yBAAiB,IAAA1C,OAAnB,EAAPA,EAA4B8C,OACpCC,uBAA+B,OAAPN,QAAO,IAAPA,GAA0B,QAAnBxC,EAAPwC,EAASC,yBAAiB,IAAAzC,OAAnB,EAAPA,EAA4B8C,yBAEtDC,QAAQC,IAAI,YAAoB,OAAPR,QAAO,IAAPA,GAA0B,QAAnBvC,EAAPuC,EAASC,yBAAiB,IAAAxC,OAAnB,EAAPA,EAA4B2C,gBAErD,MAAOK,EAAmBC,IAAwBd,EAAAA,EAAAA,UAAS,CAEzDe,eAAuB,OAAPX,QAAO,IAAPA,GAA0B,QAAnBtC,EAAPsC,EAASS,yBAAiB,IAAA/C,OAAnB,EAAPA,EAA4BiD,eAC5CC,SAAiB,OAAPZ,QAAO,IAAPA,GAA0B,QAAnBrC,EAAPqC,EAASS,yBAAiB,IAAA9C,OAAnB,EAAPA,EAA4BiD,YAGjCC,GAAcC,KAAmBlB,EAAAA,EAAAA,UAAgB,OAAPI,QAAO,IAAPA,GAA0B,QAAnBpC,EAAPoC,EAASS,yBAAiB,IAAA7C,OAAnB,EAAPA,EAA4BiD,eAYtEE,GAAOC,KAAYpB,EAAAA,EAAAA,UAAgB,OAAPI,QAAO,IAAPA,OAAO,EAAPA,EAASe,MAAM,KAO3CE,GAAiBC,KAAsBtB,EAAAA,EAAAA,UAAS,CACrDuB,MAAc,OAAPnB,QAAO,IAAPA,GAAwB,QAAjBnC,EAAPmC,EAASiB,uBAAe,IAAApD,OAAjB,EAAPA,EAA0BsD,MACjCC,SAAiB,OAAPpB,QAAO,IAAPA,GAAwB,QAAjBlC,EAAPkC,EAASiB,uBAAe,IAAAnD,OAAjB,EAAPA,EAA0BsD,SACpCC,OAAe,OAAPrB,QAAO,IAAPA,GAAwB,QAAjBjC,EAAPiC,EAASiB,uBAAe,IAAAlD,OAAjB,EAAPA,EAA0BsD,OAClCnG,MAAc,OAAP8E,QAAO,IAAPA,OAAO,EAAPA,EAAS9E,MAChBI,MAAc,OAAP0E,QAAO,IAAPA,OAAO,EAAPA,EAAS1E,MAChBkB,UAAkB,OAAPwD,QAAO,IAAPA,OAAO,EAAPA,EAASxD,aAGf8E,GAAeC,KAAoB3B,EAAAA,EAAAA,UAAS,CACjD4B,aAAoB,OAAPxB,QAAO,IAAPA,GAAsB,QAAfhC,EAAPgC,EAASsB,qBAAa,IAAAtD,OAAf,EAAPA,EAAwBwD,eAAsB,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAASzE,QAC7DkG,SAAgB,OAAPzB,QAAO,IAAPA,GAAsB,QAAf/B,EAAP+B,EAASsB,qBAAa,IAAArD,OAAf,EAAPA,EAAwBwD,WAAkB,OAAPzB,QAAO,IAAPA,OAAO,EAAPA,EAASxE,KACrDkG,UAAiB,OAAP1B,QAAO,IAAPA,GAAsB,QAAf9B,EAAP8B,EAASsB,qBAAa,IAAApD,OAAf,EAAPA,EAAwBwD,YAAmB,OAAP1B,QAAO,IAAPA,OAAO,EAAPA,EAAS2B,MACvDC,SAAgB,OAAP5B,QAAO,IAAPA,GAAsB,QAAf7B,EAAP6B,EAASsB,qBAAa,IAAAnD,OAAf,EAAPA,EAAwByD,WAAkB,OAAP5B,QAAO,IAAPA,OAAO,EAAPA,EAASvE,SAEhDgB,GAAOoF,KAAYjC,EAAAA,EAAAA,UAAS,KAC5BkC,GAAgBC,KAAqBnC,EAAAA,EAAAA,UAAgB,OAAPI,QAAO,IAAPA,GAA0B,QAAnB5B,EAAP4B,EAASS,yBAAiB,IAAArC,OAAnB,EAAPA,EAA4B0D,iBAE1EE,GAAkBC,KAAuBrC,EAAAA,EAAAA,UAAS,CACvD1E,OAAc,OAAP8E,QAAO,IAAPA,GAAyB,QAAlB3B,EAAP2B,EAASgC,wBAAgB,IAAA3D,OAAlB,EAAPA,EAA2BnD,SAAgB,OAAP8E,QAAO,IAAPA,OAAO,EAAPA,EAAS9E,OACpDI,OAAc,OAAP0E,QAAO,IAAPA,GAAyB,QAAlB1B,EAAP0B,EAASgC,wBAAgB,IAAA1D,OAAlB,EAAPA,EAA2BhD,SAAgB,OAAP0E,QAAO,IAAPA,OAAO,EAAPA,EAAS1E,OACpD4G,SAAgB,OAAPlC,QAAO,IAAPA,GAAyB,QAAlBzB,EAAPyB,EAASgC,wBAAgB,IAAAzD,OAAlB,EAAPA,EAA2B2D,WAAkB,OAAPlC,QAAO,IAAPA,OAAO,EAAPA,EAASzE,QACxDC,IAAY,OAAPwE,QAAO,IAAPA,OAAO,EAAPA,EAASxE,IACdmG,KAAa,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAAS2B,KACfQ,KAAY,OAAPnC,QAAO,IAAPA,GAAyB,QAAlBxB,EAAPwB,EAASgC,wBAAgB,IAAAxD,OAAlB,EAAPA,EAA2B2D,OAAc,OAAPnC,QAAO,IAAPA,OAAO,EAAPA,EAASvE,MAChDiB,MAAc,OAAPsD,QAAO,IAAPA,OAAO,EAAPA,EAAStD,MAChB0F,OAAe,OAAPpC,QAAO,IAAPA,GAAyB,QAAlBvB,EAAPuB,EAASgC,wBAAgB,IAAAvD,OAAlB,EAAPA,EAA2B2D,OACnCC,YAAoB,OAAPrC,QAAO,IAAPA,GAAyB,QAAlBtB,EAAPsB,EAASgC,wBAAgB,IAAAtD,OAAlB,EAAPA,EAA2B2D,eAEnCC,GAAsBC,KAA2B3C,EAAAA,EAAAA,UAC/C,OAAPI,QAAO,IAAPA,GAAwB,QAAjBrB,EAAPqB,EAASwC,uBAAe,IAAA7D,OAAjB,EAAPA,EAA0B8D,eAErBC,GAAmBC,KAAwB/C,EAAAA,EAAAA,UAAgB,OAAPI,QAAO,IAAPA,GAAwB,QAAjBpB,EAAPoB,EAASwC,uBAAe,IAAA5D,OAAjB,EAAPA,EAA0BgE,YAC9EC,GAAqBC,KAA0BlD,EAAAA,EAAAA,UAC7C,OAAPI,QAAO,IAAPA,GAAwB,QAAjBnB,EAAPmB,EAASwC,uBAAe,IAAA3D,OAAjB,EAAPA,EAA0BkE,cAErBC,GAAmBC,KAAwBrD,EAAAA,EAAAA,UAAgB,OAAPI,QAAO,IAAPA,GAAwB,QAAjBlB,EAAPkB,EAASwC,uBAAe,IAAA1D,OAAjB,EAAPA,EAA0BoE,YAC9EC,GAAuBC,KAA4BxD,EAAAA,EAAAA,UACjD,OAAPI,QAAO,IAAPA,GAAwB,QAAjBjB,EAAPiB,EAASwC,uBAAe,IAAAzD,OAAjB,EAAPA,EAA0BsE,gBAErBC,GAA0BC,KAA+B3D,EAAAA,EAAAA,UAC9D4D,QAAe,OAAPxD,QAAO,IAAPA,GAAwB,QAAjBhB,EAAPgB,EAASwC,uBAAe,IAAAxD,OAAjB,EAAPA,EAA0ByE,WAE7BC,GAAuBC,KAA4B/D,EAAAA,EAAAA,UACxD4D,QAAe,OAAPxD,QAAO,IAAPA,GAAwB,QAAjBf,EAAPe,EAASwC,uBAAe,IAAAvD,OAAjB,EAAPA,EAA0B2E,iBAE7BC,GAAgBC,KAAqBlE,EAAAA,EAAAA,UAAS,CACnDmE,YAAoB,OAAP/D,QAAO,IAAPA,GAAuB,QAAhBd,EAAPc,EAAS6D,sBAAc,IAAA3E,OAAhB,EAAPA,EAAyB6E,YACtCC,iBAAyB,OAAPhE,QAAO,IAAPA,GAAuB,QAAhBb,EAAPa,EAAS6D,sBAAc,IAAA1E,OAAhB,EAAPA,EAAyB6E,iBAC3CC,eAAuB,OAAPjE,QAAO,IAAPA,GAAuB,QAAhBZ,EAAPY,EAAS6D,sBAAc,IAAAzE,OAAhB,EAAPA,EAAyB6E,eACzCC,iBAAyB,OAAPlE,QAAO,IAAPA,GAAuB,QAAhBX,EAAPW,EAAS6D,sBAAc,IAAAxE,OAAhB,EAAPA,EAAyB6E,oBAEtCrK,GAAiBsK,KAAsBvE,EAAAA,EAAAA,UAAS,CAAC,IACjDwE,GAAcC,KAAmBzE,EAAAA,EAAAA,UAAS,IAEjD,IAAI/E,GAAW,CACbK,OAAsB,OAAf+F,SAAe,IAAfA,QAAe,EAAfA,GAAiB/F,SAAgB,OAAP8E,QAAO,IAAPA,OAAO,EAAPA,EAAS9E,OAC1CI,OAAsB,OAAf2F,SAAe,IAAfA,QAAe,EAAfA,GAAiB3F,SAAgB,OAAP0E,QAAO,IAAPA,OAAO,EAAPA,EAAS1E,OAC1CmB,MAAc,OAAPuD,QAAO,IAAPA,OAAO,EAAPA,EAASvD,MAChBC,OAAuB,OAAhBsF,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBtF,SAAgB,OAAPsD,QAAO,IAAPA,OAAO,EAAPA,EAAStD,OAC3ClB,KAAqB,OAAhBwG,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBxG,OAAc,OAAPwE,QAAO,IAAPA,OAAO,EAAPA,EAASxE,KACvCgB,WAA0B,OAAfyE,SAAe,IAAfA,QAAe,EAAfA,GAAiBzE,aAAoB,OAAPwD,QAAO,IAAPA,OAAO,EAAPA,EAASxD,WAClD8H,OAAQzD,GACRc,MAAsB,OAAhBK,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBL,QAAe,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAAS2B,MACzCpF,GAAW,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAASzD,GACbhB,OAAe,OAAPyE,QAAO,IAAPA,OAAO,EAAPA,EAASzE,OACjBE,KAAa,OAAPuE,QAAO,IAAPA,OAAO,EAAPA,EAASvE,KACfsF,MAAc,OAAPf,QAAO,IAAPA,OAAO,EAAPA,EAASe,MAChBwD,WAAmB,OAAPvE,QAAO,IAAPA,OAAO,EAAPA,EAASuE,YAKvB,MAAMC,GAAkBlK,IACtB,GAAIA,aAAamK,KAIfvE,EAAqB,IAAKD,EAAmBG,eAAgB9F,SACxD,GAAIA,EAAEC,OAAQ,CACnB,MAAM,KAAEF,EAAI,MAAEqK,GAAUpK,EAAEC,OAExB2F,EADW,mBAAT7F,EACmB,IAAK4F,EAAmBG,eAAgBsE,GAExC,IAAKzE,EAAmB,CAAC5F,GAAOqK,GAEzD,MACEnE,QAAQoE,MAAM,oDAChB,EAkBIC,GAAS,CACb,CAAEF,MAAO,OAAQG,MAAO,QACxB,CAAEH,MAAO,OAAQG,MAAO,QACxB,CAAEH,MAAO,SAAUG,MAAO,WAEtBC,GAAsBxK,IAC1B,GAAIA,aAAamK,KACf/D,EAAqB,IAAKD,EAAmBqB,eAAgBxH,SACxD,GAAIA,EAAEC,OAAQ,CACnB,MAAM,KAAEF,EAAI,MAAEqK,EAAK,QAAEK,EAAO,KAAEC,GAAS1K,EAAEC,OAGvCmG,EADW,mBAATrG,EACmB,IAAKoG,EAAmB,CAACpG,GAAOqK,GAEhC,IAChBjE,EACH,CAACpG,GAAgB,aAAT2K,EAAsBD,EAAUL,GAG9C,WAAuBO,IAAZ3K,EAAEoK,MACXhE,EAAqB,IAAKD,EAAmBG,SAAUtG,EAAEoK,QAEzDnE,QAAQoE,MAAM,wDAChB,EAGIO,GAAiB5K,IACrB,GAAIA,aAAamK,KACfvD,GAAmB,IAAKD,GAAiBzE,UAAWlC,SAC/C,GAAIA,EAAEC,OAAQ,CACnB,MAAM,KAAEF,EAAI,MAAEqK,EAAK,KAAEM,EAAI,QAAED,GAAYzK,EAAEC,OAEzC,GAAa,UAATyK,EAAkB,CACpB,MAAMG,EAAWJ,EAAUL,EAAQ,GACnCxD,GAAmB,IAAKD,GAAiB,CAAC5G,GAAO8K,GACnD,MACEjE,GAAmB,IAAKD,GAAiB,CAAC5G,GAAgB,aAAT2K,EAAsBD,EAAUL,GAErF,WAAuBO,IAAZ3K,EAAEoK,MACXxD,GAAmB,IAAKD,GAAiBG,SAAU9G,EAAEoK,QAErDnE,QAAQoE,MAAM,mDAChB,EAGIS,GAAc9K,IAClB,MAAM,KAAED,EAAI,MAAEqK,GAAUpK,EAAEC,OAC1BgH,GAAiB,IAAKD,GAAe,CAACjH,GAAOqK,GAAQ,EA6BjDW,GAAmB,CACvB5C,aAAcH,GACdM,UAAWF,GACXK,YAAaF,GACbK,UAAWF,GACXK,cAAeF,GACfM,QAASH,GACTM,cAAeF,IAEX4B,GAAkBhL,IACtB,MAAM,KAAED,EAAI,MAAEqK,EAAK,KAAEM,EAAI,QAAED,GAAYzK,EAAEC,OACzC0H,GAAoB,IAAKD,GAAkB,CAAC3H,GAAgB,aAAT2K,EAAsBD,EAAUL,GAAQ,EAGvFa,GAAgBjL,IACpB,MAAM,KAAED,EAAI,QAAE0K,GAAYzK,EAAEC,OAC5BuJ,GAAkB,IAAKD,GAAgB,CAACxJ,GAAO0K,GAAU,GA2BpDS,GAAiBC,KAAsB7F,EAAAA,EAAAA,UAAS,IAKjD8F,GAAaC,UACjB,IAAK,IAADC,EACF,MAAMC,QAAgBC,MAAM,GAAD/J,OAAIyD,EAAM,+BAAAzD,OAAsC,OAARuD,QAAQ,IAARA,GAAe,QAAPsG,EAARtG,EAAUyG,aAAK,IAAAH,OAAP,EAARA,EAAiBnJ,QAC9EuJ,QAAaH,EAAQI,OAC3B9B,GAAmB6B,EACrB,CAAE,MAAOrB,GACPpE,QAAQoE,MAAM,kCAAmCA,EACnD,GAcFpE,QAAQC,IAAI,cAAe6E,GAAiBzB,eAC5C,IAAIsC,GAAwB,IAAKzF,EAAmBI,gBAAciB,mBAClEvB,QAAQC,IAAI,eAAgB0F,IAC5B,MAAMF,GAAO,CACXnL,SAAUA,GACVoF,kBAAmBA,EACnBQ,kBAAmByF,GAGnBnF,MAAOA,GACPE,gBAAiBA,GACjBK,cAAeA,GACfU,iBAAkBA,GAClBQ,gBAAiB6C,GACjBxB,eAAgBA,KAoGlBjJ,EAAAA,EAAAA,YAAU,KACR8K,KA/HsBC,WACtB,IACE,MAAME,QAAgBC,MAAM,GAAD/J,OAAIyD,EAAM,2BAC/BwG,QAAaH,EAAQI,OAC3B5B,GAAoB,OAAJ2B,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAGxB,CAAE,MAAOrB,GACPpE,QAAQoE,MAAM,kCAAmCA,EACnD,GAuHAwB,EAAiB,GAChB,CAACzG,EAAMG,IAaV,OACEhE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BF,EAAAA,EAAAA,KAACrC,EAAAA,QAAQ,CAACQ,gBAAiBA,MAC3BgC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,UACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAENF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,UAClBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAEJF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDF,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,2BAA0BF,SAAC,oCAGpEF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,SACLN,MAAOzE,EAAkBE,YACzB9F,KAAK,cACL0C,SAAUyH,GACV1I,UAAU,uBAKhBJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,iBAAgBF,SAAC,YAG1DF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACL3K,KAAK,SACLqK,MAAOzE,EAAkBI,OACzBtD,SAAUyH,GACV1I,UAAU,qBACVuK,YAAY,iBAIlB3K,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,iBAAgBF,SAAC,sBAClCF,EAAAA,EAAAA,KAAC4K,EAAAA,QAAS,CACRxK,UAAU,eACVkB,SAAUiD,EAAkBG,eAC5BrD,SAAUyH,WAKhB9I,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,iBAAgBF,SAAC,2BAClCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,QACL3K,KAAK,yBACLqK,MAAM,SACNK,QAAsD,WAA7C9E,EAAkBK,uBAC3BvD,SAAUyH,MAEZ9I,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAERC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,QACL3K,KAAK,yBACLqK,MAAM,WACNK,QAAsD,aAA7C9E,EAAkBK,uBAC3BvD,SAAUyH,MAEZ9I,EAAAA,EAAAA,KAAA,QAAAE,SAAM,+BASpBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qBAAoBF,UACjCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,0BAAyBF,SAAC,YAC3CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAW,CACVF,YAxGE,IAAxBxF,GAAa2F,OACR,SAED,GAANzK,OAAU8E,GAAa2F,OAAM,WAAAzK,OAAU8E,GAAa2F,OAAS,EAAI,IAAM,GAAE,aAsGjD9B,MAAO7D,GACP9D,SAAWzC,GAAMwG,GAAgBxG,EAAEoK,OACnC+B,QAnfb,CACb,CAAEpM,KAAM,SAAUqM,KAAM,KACxB,CAAErM,KAAM,UAAWqM,KAAM,KACzB,CAAErM,KAAM,UAAWqM,KAAM,KACzB,CAAErM,KAAM,oBAAqBqM,KAAM,KACnC,CAAErM,KAAM,qBAAsBqM,KAAM,KACpC,CAAErM,KAAM,sBAAuBqM,KAAM,KACrC,CAAErM,KAAM,QAASqM,KAAM,MA6eGC,SAAO,EACPC,kBAAmB,EACnBC,YAAY,OACZ/K,UAAU,QACVgL,cAAY,YAMpBpL,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,4BAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,UAC5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BF,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,WACL3K,KAAK,iBACL0C,SAAU+H,GAEVC,QAAStE,EAAkBE,kBAE7BjF,EAAAA,EAAAA,KAAA,yBAMVG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,0BAAyBF,SAAC,sBAC3CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAACqL,EAAAA,GAAM,CACLjL,UAAU,QACVuK,YAAY,mBACZI,QAAqB,OAAZrC,SAAY,IAAZA,QAAY,EAAZA,GAAc4C,KAAKC,IAAI,CAC9BvC,MAAOuC,EAAKC,SACZrC,MAAOoC,EAAKC,aAEdnK,SAAU+H,GACVJ,MAAO,CACLA,MAAOjE,EAAkBG,UAAY,mBACrCiE,MAAOpE,EAAkBG,UAAY,oBAEvCvG,KAAK,qBAKbqB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,YAAYtK,UAAU,0BAAyBF,SAAC,oBAG/DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAC4K,EAAAA,QAAS,CACRxK,UAAU,eACVkB,SAAU8E,GACV/E,SA9LAzC,IAC1B,IAAI6M,EAAqB,IAAI1C,KAAKnK,GAC9B8M,GAAc,IAAI3C,MAAO4C,cAEzBF,EAAmBE,cAAgBD,EACrCE,EAAAA,GAAMC,QAAQ,6DAIhBxF,GAAkBzH,EAAE,oBAgMRoB,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,8BAA6BF,UAC1CF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,UAC5BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBF,UAC/BF,EAAAA,EAAAA,KAACqL,EAAAA,GAAM,CACLjL,UAAU,QACV2K,QAvdX,CACb,CAAE/B,MAAO,QAASG,MAAO,2BACzB,CAAEH,MAAO,eAAgBG,MAAO,mBAChC,CAAEH,MAAO,cAAeG,MAAO,mBAC/B,CAAEH,MAAO,UAAWG,MAAO,YAC3B,CAAEH,MAAO,SAAUG,MAAO,UAC1B,CAAEH,MAAO,OAAQG,MAAO,SACxB,CAAEH,MAAO,SAAUG,MAAO,oBAC1B,CAAEH,MAAO,2BAA4BG,MAAO,qBAC5C,CAAEH,MAAO,2BAA4BG,MAAO,uBAC5C,CAAEH,MAAO,gCAAiCG,MAAO,wBACjD,CAAEH,MAAO,uBAAwBG,MAAO,2BACxC,CAAEH,MAAO,QAASG,MAAO,UACzB,CAAEH,MAAO,UAAWG,MAAO,YA2cH9H,SAzjBEyK,IAC1BxG,GAASwG,GACTjH,QAAQC,IAAIgH,EAAe,EAwjBH9C,MAAO3D,GACP1G,KAAK,QACLgM,YAAY,0BAS1BxK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,WAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLN,MAAOzD,GAAgBE,MACvB9G,KAAK,QACL0C,SAAUmI,GACVpJ,UAAU,eACVuK,YAAY,kBAKpB3K,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,kBAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UAUvBF,EAAAA,EAAAA,KAAC4K,EAAAA,QAAS,CACRxK,UAAU,eACVkB,SAAUiE,GAAgBzE,UAC1BO,SAAUmI,gBAMpBrJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,YAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAACqL,EAAAA,GAAM,CACLjL,UAAU,QACV2K,QAAS7B,GACT7H,SAAUmI,GACVR,MAAOE,GAAO6C,MACXC,GAAWA,EAAOhD,QAAUzD,GAAgBG,WAE/C/G,KAAK,WACLgM,YAAY,mBAKpB3K,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,gBAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,UAE5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,QACLzI,GAAG,OACHmI,MAAM,OACNrK,KAAK,SACL0C,SAAUmI,GACVH,QAAoC,SAA3B9D,GAAgBI,UAE3B3F,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oBAGRC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,QACLzI,GAAG,SACHmI,MAAM,SACNrK,KAAK,SACL0C,SAAUmI,GACVH,QAAoC,WAA3B9D,GAAgBI,UAE3B3F,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBAERC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,QACLzI,GAAG,SACHmI,MAAM,QACNrK,KAAK,SACL0C,SAAUmI,GACVH,QAAoC,UAA3B9D,GAAgBI,UAE3B3F,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BAOlBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,cAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLqB,YAAY,WACZ3B,MAAOzD,GAAgB/F,MACvBb,KAAK,QACL0C,SAAUmI,GACVpJ,UAAU,eACVS,GAAG,0BAKXb,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,UAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLlJ,UAAU,eACVS,GAAG,gBACH8J,YAAY,OACZhM,KAAK,QACL0C,SAAUmI,GACVR,MAAOzD,GAAgB3F,mBAMjCO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,oBAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,QACL2C,UAAQ,EACRtN,KAAK,QACLgM,YAAY,iBACZ3B,MAAO7J,GAAS4B,MAChBX,UAAU,eACVS,GAAG,0BAKXb,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,aAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SAEEqB,SAAWzC,IACT,MAAMsN,EAAatN,EAAEC,OAAOmK,MAAMmD,QAAQ,WAAY,IAClD,cAAcC,KAAKF,IACrBtC,GAAe,CAAE/K,OAAQ,CAAEF,KAAM,QAASqK,MAAOkD,IACnD,EAEFvN,KAAK,QACLqK,MAAuB,OAAhB1C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBtF,MACzBZ,UAAU,eACVkJ,KAAK,MACLqB,YAAY,UACZ9J,GAAG,iBACHwL,UAAW,GACXC,UAAW,eAMrBnM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,WAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SAEEqB,SAAWzC,IACT,MAAMsN,EAAatN,EAAEC,OAAOmK,MAAMmD,QAAQ,WAAY,IAClD,cAAcC,KAAKF,IACrBtC,GAAe,CAAE/K,OAAQ,CAAEF,KAAM,SAAUqK,MAAOkD,IACpD,EAEFvN,KAAK,SACLqK,MAAuB,OAAhB1C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBI,OACzB4C,KAAK,MACLqB,YAAY,QACZvK,UAAU,eACVS,GAAG,iBACHwL,UAAW,GACXC,UAAW,YAKnBtM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,0BAAyBF,SAAC,qBAC3CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,UAC5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACEqB,SAAUuI,GACVjL,KAAK,cAEL0K,QAAyB,OAAhB/C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBK,YAC3B2C,KAAK,cAEPtJ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAMhBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,8BAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLjI,SAAUqI,GACV/K,KAAK,cACLgM,YAAY,2BACZ3B,MAAOpD,GAAcE,YACrB1F,UAAU,eACVS,GAAG,wBAKTV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,SAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,MACLN,MAAOpD,GAAcG,QACrB1E,SAAWzC,IACT,MAAMsN,EAAatN,EAAEC,OAAOmK,MAAMmD,QAAQ,UAAW,IACrDtG,GAAiB,IAAKD,GAAeG,QAASmG,GAAa,EAE7DvB,YAAY,MACZvK,UAAU,eACVS,GAAG,gBACHwL,UAAW,EACXC,UAAW,EACXC,UAAU,aAKlBpM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,YAAYtK,UAAU,0BAAyBF,SAAC,SAG/DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLjI,SAAUqI,GACV/K,KAAK,UACLgM,YAAY,MACZ3B,MAAOpD,GAAcM,QACrB9F,UAAU,eACVS,GAAG,oBAKTV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,UAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACL3K,KAAK,WACLgM,YAAY,OACZtJ,SAAWzC,IACT,MAAMsN,EAAatN,EAAEC,OAAOmK,MAAMmD,QAAQ,iBAAkB,IAC5DzC,GAAW,CAAE7K,OAAQ,CAAEF,KAAM,WAAYqK,MAAOkD,IAAe,EAEjElD,MAAOpD,GAAcI,SACrB5F,UAAU,eACVS,GAAG,8BAObb,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,cAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLjI,SAAUuI,GACVjL,KAAK,QACLgM,YAAY,WAEZ3B,MAAuB,OAAhB1C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkB9G,MACzBY,UAAU,eACVS,GAAG,wBAKTV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,8BAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLjI,SAAUuI,GACVjL,KAAK,UACLgM,YAAY,2BACZ3B,MAAuB,OAAhB1C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBE,QACzBpG,UAAU,eACVS,GAAG,wBAITV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,SAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLjI,SAAUuI,GACVjL,KAAK,MACLgM,YAAY,MACZ3B,MAAuB,OAAhB1C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBG,IACzBrG,UAAU,eACVS,GAAG,2BAKXV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,0BAAyBF,SAAC,UAC3CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACLqB,YAAY,OACZtJ,SAAUuI,GACVjL,KAAK,QACLqK,MAAuB,OAAhB1C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkB1G,MACzBQ,UAAU,uBAKhBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,SAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,MACLN,MAAO1C,GAAiBxG,IACxBuB,SAAWzC,IACT,MAAMsN,EAAatN,EAAEC,OAAOmK,MAAMmD,QAAQ,UAAW,IACrD5F,GAAoB,IAAKD,GAAkBxG,IAAKoM,GAAa,EAE/DvB,YAAY,MACZvK,UAAU,eACVS,GAAG,gBACHwL,UAAW,EACXC,UAAW,EACXC,UAAU,UAIhBpM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,UAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,OACL3K,KAAK,OACLgM,YAAY,OACZtJ,SAAWzC,IACT,MAAMsN,EAAatN,EAAEC,OAAOmK,MAAMmD,QAAQ,iBAAkB,IAC5DvC,GAAe,CAAE/K,OAAQ,CAAEF,KAAM,OAAQqK,MAAOkD,IAAe,EAEjElD,MAAuB,OAAhB1C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBL,KACzB7F,UAAU,eACVS,GAAG,oCASjBV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EAaEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,yBAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAC4K,EAAAA,QAAS,CACRxK,UAAU,eACVkB,SAAUsF,GACVvF,SAl3BJmL,CAAC5N,EAAG6N,KACxB5F,GAAwBjI,EAAE,UAs3BRuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,8BAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAC4K,EAAAA,QAAS,CACRxK,UAAU,eACVkB,SAAU0F,GACV3F,SA53BDzC,IACvBqI,GAAqBrI,EAAE,aAg4BPuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,0BAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAC4K,EAAAA,QAAS,CACRxK,UAAU,eACVkB,SAAU6F,GACV9F,SAt4BLzC,IACnBwI,GAAuBxI,EAAE,UAy4BPuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,0BAAyBF,SAAC,iCAC3CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAC4K,EAAAA,QAAS,CACRxK,UAAU,eACVkB,SAAUgG,GACVjG,SA54BPzC,IACjB2I,GAAqB3I,EAAE,gBAm5BTuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAgBsM,MAAO,CAAEC,QAAS,OAAQzM,UACvDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,WACLjI,SA74BDzC,IACrBqJ,GAAyBrJ,EAAEC,OAAOwK,QAAQ,EA84BpBA,QAASrB,GACTrJ,KAAK,kBACJ,KACHqB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBAMVF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAO0K,QAAQ,gBAAgBtK,UAAU,0BAAyBF,SAAC,sBAGnEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAC4K,EAAAA,QAAS,CACRxK,UAAU,eACVkB,SAAUmG,GACVpG,SAz6BHzC,IACrB8I,GAAyB9I,EAAE,qBAi7BjBuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAoBsM,MAAO,CAAEC,QAAS,OAAQzM,UAC3DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,WACLjI,SAAUwI,GAEVR,QAASlB,GAAeE,YACxB1J,KAAK,iBAEPqB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,6BAGVF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAoBsM,MAAO,CAAEC,QAAS,OAAQzM,UAC3DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,WACLjI,SAAUwI,GAEVR,QAASlB,GAAeG,iBACxB3J,KAAK,sBAEPqB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAGVF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAoBsM,MAAO,CAAEC,QAAS,OAAQzM,UAC3DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,WACLjI,SAAUwI,GAEVR,QAASlB,GAAeI,eACxB5J,KAAK,oBAEPqB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iCAGVF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAoBsM,MAAO,CAAEC,QAAS,OAAQzM,UAC3DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SACEsJ,KAAK,WACLjI,SAAUwI,GAEVR,QAASlB,GAAeK,iBACxB7J,KAAK,sBAEPqB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,sDAUtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4BAA2BF,UACxCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BF,UACzCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BF,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,UAAQsJ,KAAK,SAASlJ,UAAU,sBAAsBc,QAxyB/C0L,KACjBxO,EAAS,gBAAgB,EAuyB2D8B,SAAC,eAI3EF,EAAAA,EAAAA,KAAA,UAAQsJ,KAAK,SAASlJ,UAAU,eAAec,QAj5B1C+I,UAOf,GANArL,EAAEI,iBAM2B,KAAb,OAAZmG,SAAY,IAAZA,QAAY,EAAZA,GAAc2F,QAChB,OAAOc,EAAAA,GAAMC,QAAQ,mCAEvB,IACE,IAAIgB,QAAiBzC,MAAM,GAAD/J,OAAIyD,EAAM,8BAAAzD,OAAoC,OAAPiE,QAAO,IAAPA,OAAO,EAAPA,EAASwI,KAAO,CAC/EC,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM5N,KAAK6N,UAAU5C,MAGnB6C,QAAeN,EAAStC,OAEJ,mCAAd,OAAN4C,QAAM,IAANA,OAAM,EAANA,EAAQC,WACVxB,EAAAA,GAAMyB,QAAQ,sCAmDdrD,KAIJ,CAAE,MAAOf,GACPpE,QAAQC,IAAI,qBAAsBmE,GAGlC2C,EAAAA,GAAM3C,MAAM,6DACd,GA+zB2E/I,SAAC,yBAQ1EF,EAAAA,EAAAA,KAACsN,EAAAA,GAAc,MACX,EAIV,EAAelM,EAAAA,KAAWM,E","sources":["views/customer/Customer.jsx","views/customer/Date.jsx","views/customer/customerInfo/CustomerInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { HiOutlineMail } from 'react-icons/hi'\nimport { IoIosCall } from 'react-icons/io'\nimport { ImLocation2 } from 'react-icons/im'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nconst Customer = ({ getCustomerData }) => {\n  Customer.propTypes = {\n    getCustomerData: PropTypes.func.isRequired,\n  }\n\n  const navigate = useNavigate()\n\n  let activeTab = localStorage.getItem('tabId') || 'customer_info'\n\n  const handleTabClick = (tabId, name, e) => {\n    if (e && e.target.tagName.toLowerCase() === 'a') {\n      e.preventDefault()\n    }\n    if (name === 'KlientInnen') {\n      localStorage.setItem('tabId', 'customer_info')\n      return navigate('/customer/customer_info')\n    } else if (name === 'Kontakte') {\n      localStorage.setItem('tabId', 'contact')\n      return navigate('/customer/contact')\n    } else if (name === 'Aktivitat') {\n      localStorage.setItem('tabId', 'activity')\n      return navigate('/customer/activity')\n    } else if (name === 'Dokumente') {\n      localStorage.setItem('tabId', 'document')\n      return navigate('/customer/document')\n    } else if (name === 'Vollmachten') {\n      localStorage.setItem('tabId', 'attorney')\n      return navigate('/customer/attorney')\n    } else if (name === 'SPV') {\n      localStorage.setItem('tabId', 'services')\n      return navigate('/customer/services')\n    } else if (name === 'Rechnung') {\n      localStorage.setItem('tabId', 'bills')\n      return navigate('/customer/bills')\n    }\n  }\n  useEffect(() => {\n    handleTabClick()\n  }, [activeTab])\n\n  let customer = localStorage.getItem('customerRecord')\n  let res = JSON.parse(customer)\n  // console.log(res)\n\n  const firstName = res?.fname?.slice(0, 1).toUpperCase() + res?.fname?.slice(1).toLowerCase()\n  const lastName = res?.lname?.slice(0, 1).toUpperCase() + res?.lname?.slice(1).toLowerCase()\n  let street =\n    res?.street?.slice(0, 1).toUpperCase() +\n    res?.street?.slice(1).toLowerCase() +\n    ',  ' +\n    '  ' +\n    res?.plz +\n    '  ' +\n    res?.city\n  // console.log('customerPage', res)\n  return (\n    <>\n      <div className=\"whiteBox\">\n        <div className=\"blueBoxTop\">\n          <div className=\"container-fluid\">\n            <div className=\"row d-flex align-items-center\">\n              <div className=\"col-md-4\">\n                {/* <p style={{ color: 'white', marginTop: '5px' }}>KlientInnen: {res.fname}</p>\n              <ImLocation2 style={{ color: 'white' }} />\n              <span style={{ color: 'white' }}>{res.street}</span> */}\n                <h3>KlientInnen: {`${firstName} ${lastName}`}</h3>\n\n                <address>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"22\"\n                    height=\"22\"\n                    viewBox=\"0 0 22 22\"\n                    fill=\"none\"\n                  >\n                    <g clipPath=\"url(#clip0_207_8532)\">\n                      <path\n                        d=\"M16.817 8.89543C16.817 5.62623 14.1646 2.97386 10.8954 2.97386C7.62623 2.97386 4.97386 5.62623 4.97386 8.89543C4.97386 9.40534 5.15891 10.1949 5.60303 11.2476C6.03481 12.2674 6.64753 13.3942 7.35071 14.5333C8.52269 16.4331 9.87972 18.2671 10.8954 19.5748C11.9153 18.2671 13.2723 16.4331 14.4402 14.5333C15.1433 13.3942 15.7561 12.2674 16.1878 11.2476C16.632 10.1949 16.817 9.40534 16.817 8.89543ZM18.7909 8.89543C18.7909 12.4895 13.9796 18.8881 11.87 21.5281C11.3642 22.1573 10.4266 22.1573 9.92084 21.5281C7.81128 18.8881 3 12.4895 3 8.89543C3 4.5365 6.5365 1 10.8954 1C15.2544 1 18.7909 4.5365 18.7909 8.89543ZM12.2113 8.89543C12.2113 8.54643 12.0727 8.21173 11.8259 7.96495C11.5791 7.71817 11.2444 7.57953 10.8954 7.57953C10.5464 7.57953 10.2117 7.71817 9.96495 7.96495C9.71817 8.21173 9.57953 8.54643 9.57953 8.89543C9.57953 9.24443 9.71817 9.57914 9.96495 9.82592C10.2117 10.0727 10.5464 10.2113 10.8954 10.2113C11.2444 10.2113 11.5791 10.0727 11.8259 9.82592C12.0727 9.57914 12.2113 9.24443 12.2113 8.89543ZM7.60567 8.89543C7.60567 8.02293 7.95227 7.18617 8.56922 6.56922C9.18617 5.95227 10.0229 5.60567 10.8954 5.60567C11.7679 5.60567 12.6047 5.95227 13.2216 6.56922C13.8386 7.18617 14.1852 8.02293 14.1852 8.89543C14.1852 9.76793 13.8386 10.6047 13.2216 11.2216C12.6047 11.8386 11.7679 12.1852 10.8954 12.1852C10.0229 12.1852 9.18617 11.8386 8.56922 11.2216C7.95227 10.6047 7.60567 9.76793 7.60567 8.89543Z\"\n                        fill=\"white\"\n                      />\n                    </g>\n                    <defs>\n                      <clipPath id=\"clip0_207_8532\">\n                        <rect width=\"22\" height=\"22\" fill=\"white\" />\n                      </clipPath>\n                    </defs>\n                  </svg>\n                  <span>{street}</span>\n                </address>\n              </div>\n              <div\n                className=\"col-md-8 text-md-end\"\n                // style={{ color: 'white', border: '1px solid white' }}\n              >\n                <div className=\"d-flex justify-content-md-end justify-content-between\">\n                  <button className=\"btn btn me-4 header-button\">\n                    {/* <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"20\"\n                      height=\"15\"\n                      viewBox=\"0 0 20 15\"\n                      fill=\"#fff\"\n                    >\n                      <g clipPath=\"url(#clip0_60_2870)\">\n                        <path\n                          d=\"M2.5 1.875C2.15625 1.875 1.875 2.15625 1.875 2.5V3.36328L8.61328 8.89453C9.42188 9.55859 10.582 9.55859 11.3906 8.89453L18.125 3.36328V2.5C18.125 2.15625 17.8438 1.875 17.5 1.875H2.5ZM1.875 5.78906V12.5C1.875 12.8438 2.15625 13.125 2.5 13.125H17.5C17.8438 13.125 18.125 12.8438 18.125 12.5V5.78906L12.5781 10.3438C11.0781 11.5742 8.91797 11.5742 7.42188 10.3438L1.875 5.78906ZM0 2.5C0 1.12109 1.12109 0 2.5 0H17.5C18.8789 0 20 1.12109 20 2.5V12.5C20 13.8789 18.8789 15 17.5 15H2.5C1.12109 15 0 13.8789 0 12.5V2.5Z\"\n                          fill=\"#fff\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_60_2870\">\n                          <rect width=\"20\" height=\"15\" fill=\"white\" />\n                        </clipPath>\n                      </defs>\n                    </svg> */}\n                    <span> {res?.startDate}</span>\n                  </button>\n                  <button className=\"btn btn me-4 header-button\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"20\"\n                      height=\"15\"\n                      viewBox=\"0 0 20 15\"\n                      fill=\"#fff\"\n                    >\n                      <g clipPath=\"url(#clip0_60_2870)\">\n                        <path\n                          d=\"M2.5 1.875C2.15625 1.875 1.875 2.15625 1.875 2.5V3.36328L8.61328 8.89453C9.42188 9.55859 10.582 9.55859 11.3906 8.89453L18.125 3.36328V2.5C18.125 2.15625 17.8438 1.875 17.5 1.875H2.5ZM1.875 5.78906V12.5C1.875 12.8438 2.15625 13.125 2.5 13.125H17.5C17.8438 13.125 18.125 12.8438 18.125 12.5V5.78906L12.5781 10.3438C11.0781 11.5742 8.91797 11.5742 7.42188 10.3438L1.875 5.78906ZM0 2.5C0 1.12109 1.12109 0 2.5 0H17.5C18.8789 0 20 1.12109 20 2.5V12.5C20 13.8789 18.8789 15 17.5 15H2.5C1.12109 15 0 13.8789 0 12.5V2.5Z\"\n                          fill=\"#fff\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_60_2870\">\n                          <rect width=\"20\" height=\"15\" fill=\"white\" />\n                        </clipPath>\n                      </defs>\n                    </svg>\n                    <span> {res?.email}</span>\n                  </button>\n                  <button className=\"btn btn header-button\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22\"\n                      height=\"22\"\n                      viewBox=\"0 0 22 22\"\n                      fill=\"none\"\n                    >\n                      <g clipPath=\"url(#clip0_207_8539)\">\n                        <path\n                          d=\"M14.01 11.0623C13.5295 10.8573 12.9729 10.992 12.6418 11.3963L11.6691 12.5858C10.3214 11.8036 9.19642 10.6786 8.41418 9.33086L9.60073 8.36112C10.005 8.03005 10.1427 7.4734 9.93472 6.99292L8.52844 3.7116C8.30871 3.19596 7.75499 2.90885 7.20712 3.02604L3.9258 3.72918C3.38673 3.84344 3 4.32099 3 4.87471C3 11.6483 8.13293 17.2265 14.7219 17.9268C15.0091 17.9561 15.2962 17.9795 15.5891 17.9912H15.5921C15.7708 17.9971 15.9466 18.0029 16.1253 18.0029C16.679 18.0029 17.1566 17.6162 17.2708 17.0771L17.974 13.7958C18.0912 13.2479 17.804 12.6942 17.2884 12.4745L14.0071 11.0682L14.01 11.0623ZM15.9349 16.5937C9.61538 16.4912 4.50882 11.3846 4.40921 5.06515L7.31552 4.44111L8.57532 7.38258L7.52354 8.24393C6.99032 8.68046 6.85262 9.43927 7.19833 10.0369C8.10363 11.5985 9.40444 12.8993 10.966 13.8046C11.5637 14.1503 12.3225 14.0126 12.759 13.4794L13.6203 12.4276L16.5618 13.6874L15.9349 16.5937Z\"\n                          fill=\"white\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_207_8539\">\n                          <rect width=\"22\" height=\"22\" fill=\"white\" />\n                        </clipPath>\n                      </defs>\n                    </svg>\n                    <span>{res?.phone}</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"whiteBoxWithPdLR\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <nav>\n                  <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                    <button\n                      className={`nav-link ${activeTab === 'customer_info' ? 'active' : ''}`}\n                      id=\"customer_info-tab\"\n                      data-bs-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-selected={activeTab === 'customer_info'}\n                      onClick={(e) => handleTabClick('customer_info', 'KlientInnen', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_91_3542)\">\n                          <path d=\"M12 3.875C14.1549 3.875 16.2215 4.73102 17.7452 6.25476C19.269 7.77849 20.125 9.84512 20.125 12C20.125 14.1549 19.269 16.2215 17.7452 17.7452C16.2215 19.269 14.1549 20.125 12 20.125C9.84512 20.125 7.77849 19.269 6.25476 17.7452C4.73102 16.2215 3.875 14.1549 3.875 12C3.875 9.84512 4.73102 7.77849 6.25476 6.25476C7.77849 4.73102 9.84512 3.875 12 3.875ZM12 22C14.6522 22 17.1957 20.9464 19.0711 19.0711C20.9464 17.1957 22 14.6522 22 12C22 9.34784 20.9464 6.8043 19.0711 4.92893C17.1957 3.05357 14.6522 2 12 2C9.34784 2 6.8043 3.05357 4.92893 4.92893C3.05357 6.8043 2 9.34784 2 12C2 14.6522 3.05357 17.1957 4.92893 19.0711C6.8043 20.9464 9.34784 22 12 22ZM10.4375 15.125C9.91797 15.125 9.5 15.543 9.5 16.0625C9.5 16.582 9.91797 17 10.4375 17H13.5625C14.082 17 14.5 16.582 14.5 16.0625C14.5 15.543 14.082 15.125 13.5625 15.125H13.25V11.6875C13.25 11.168 12.832 10.75 12.3125 10.75H10.4375C9.91797 10.75 9.5 11.168 9.5 11.6875C9.5 12.207 9.91797 12.625 10.4375 12.625H11.375V15.125H10.4375ZM12 9.5C12.3315 9.5 12.6495 9.3683 12.8839 9.13388C13.1183 8.89946 13.25 8.58152 13.25 8.25C13.25 7.91848 13.1183 7.60054 12.8839 7.36612C12.6495 7.1317 12.3315 7 12 7C11.6685 7 11.3505 7.1317 11.1161 7.36612C10.8817 7.60054 10.75 7.91848 10.75 8.25C10.75 8.58152 10.8817 8.89946 11.1161 9.13388C11.3505 9.3683 11.6685 9.5 12 9.5Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_91_3542\">\n                            <rect width=\"24\" height=\"24\" fill=\"white\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> KlientInnen </span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'contact' ? 'active' : ''}`}\n                      id=\"contact-tab\"\n                      data-bs-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-controls=\"contact\"\n                      aria-selected={activeTab === 'contact'}\n                      onClick={(e) => handleTabClick('contact', 'Kontakte', e)}\n                    >\n                      {' '}\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_431_39097)\">\n                          <path d=\"M13.917 3C14.192 3 14.417 3.225 14.417 3.5V15.5C14.417 15.775 14.192 16 13.917 16H4.91699C4.64199 16 4.41699 15.775 4.41699 15.5V3.5C4.41699 3.225 4.64199 3 4.91699 3H13.917ZM4.91699 1.5C3.81387 1.5 2.91699 2.39688 2.91699 3.5V15.5C2.91699 16.6031 3.81387 17.5 4.91699 17.5H13.917C15.0201 17.5 15.917 16.6031 15.917 15.5V3.5C15.917 2.39688 15.0201 1.5 13.917 1.5H4.91699ZM9.41699 9.5C9.94742 9.5 10.4561 9.28929 10.8312 8.91421C11.2063 8.53914 11.417 8.03043 11.417 7.5C11.417 6.96957 11.2063 6.46086 10.8312 6.08579C10.4561 5.71071 9.94742 5.5 9.41699 5.5C8.88656 5.5 8.37785 5.71071 8.00278 6.08579C7.62771 6.46086 7.41699 6.96957 7.41699 7.5C7.41699 8.03043 7.62771 8.53914 8.00278 8.91421C8.37785 9.28929 8.88656 9.5 9.41699 9.5ZM8.41699 10.5C7.03574 10.5 5.91699 11.6188 5.91699 13C5.91699 13.275 6.14199 13.5 6.41699 13.5H12.417C12.692 13.5 12.917 13.275 12.917 13C12.917 11.6188 11.7982 10.5 10.417 10.5H8.41699ZM17.917 4C17.917 3.725 17.692 3.5 17.417 3.5C17.142 3.5 16.917 3.725 16.917 4V6C16.917 6.275 17.142 6.5 17.417 6.5C17.692 6.5 17.917 6.275 17.917 6V4ZM17.417 7.5C17.142 7.5 16.917 7.725 16.917 8V10C16.917 10.275 17.142 10.5 17.417 10.5C17.692 10.5 17.917 10.275 17.917 10V8C17.917 7.725 17.692 7.5 17.417 7.5ZM17.917 12C17.917 11.725 17.692 11.5 17.417 11.5C17.142 11.5 16.917 11.725 16.917 12V14C16.917 14.275 17.142 14.5 17.417 14.5C17.692 14.5 17.917 14.275 17.917 14V12Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_431_39097\">\n                            <rect\n                              width=\"18\"\n                              height=\"18\"\n                              fill=\"white\"\n                              transform=\"translate(0.666992)\"\n                            />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Kontakte</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'activity' ? 'active' : ''}`}\n                      id=\"activity-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#activity\"\n                      role=\"tab\"\n                      aria-controls=\"activity\"\n                      aria-selected={activeTab === 'activity'}\n                      onClick={(e) => handleTabClick('activity', 'Aktivitat', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8581)\">\n                          <path d=\"M9.48594 3.00021C9.74609 2.99317 9.97813 3.16661 10.0438 3.41974L11.9023 10.5424L12.5375 9.19005C12.7531 8.73067 13.2172 8.43536 13.7258 8.43536H16.4375C16.7492 8.43536 17 8.68614 17 8.99786C17 9.30958 16.7492 9.56036 16.4375 9.56036H13.7258C13.6531 9.56036 13.5875 9.60255 13.557 9.66817L12.2586 12.4268C12.1578 12.64 11.9328 12.769 11.6984 12.7479C11.4641 12.7268 11.2648 12.558 11.2062 12.3307L9.56328 6.03302L7.80078 14.5525C7.74922 14.808 7.52891 14.9932 7.26875 15.0002C7.00859 15.0072 6.77656 14.8385 6.70859 14.5877L5.35859 9.70099C5.33516 9.61896 5.2625 9.56271 5.17813 9.56271H2.5625C2.25078 9.56271 2 9.31192 2 9.00021C2 8.68849 2.25078 8.43771 2.5625 8.43771H5.17813C5.76875 8.43771 6.28672 8.83146 6.44375 9.40099L7.17031 12.0401L8.94922 3.44786C9.00313 3.19239 9.22344 3.00724 9.48594 3.00021Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8581\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.5)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Aktivitat</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'document' ? 'active' : ''}`}\n                      id=\"document-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#document\"\n                      role=\"tab\"\n                      aria-controls=\"document\"\n                      aria-selected={activeTab === 'document'}\n                      onClick={(e) => handleTabClick('document', 'Dokumente', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8589)\">\n                          <path d=\"M13.125 15.0938C13.3828 15.0938 13.5938 14.8828 13.5938 14.625V6.1875H11.25C10.7314 6.1875 10.3125 5.76855 10.3125 5.25V2.90625H5.625C5.36719 2.90625 5.15625 3.11719 5.15625 3.375V14.625C5.15625 14.8828 5.36719 15.0938 5.625 15.0938H13.125ZM3.75 3.375C3.75 2.34082 4.59082 1.5 5.625 1.5H10.4736C10.9717 1.5 11.4492 1.69629 11.8008 2.04785L14.4521 4.69922C14.8037 5.05078 15 5.52832 15 6.02637V14.625C15 15.6592 14.1592 16.5 13.125 16.5H5.625C4.59082 16.5 3.75 15.6592 3.75 14.625V3.375Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8589\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.75)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Dokumente</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'attorney' ? 'active' : ''}`}\n                      id=\"attorney-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#attorney\"\n                      role=\"tab\"\n                      aria-controls=\"attorney\"\n                      aria-selected={activeTab === 'attorney'}\n                      onClick={(e) => handleTabClick('attorney', 'Vollmachten', e)}\n                    >\n                      <i className=\"fa-solid fa-paint-roller fa-fw\"></i>\n                      Vollmachten\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'services' ? 'active' : ''}`}\n                      id=\"services-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#services\"\n                      role=\"tab\"\n                      aria-controls=\"services\"\n                      aria-selected={activeTab === 'services'}\n                      onClick={(e) => handleTabClick('services', 'SPV', e)}\n                    >\n                      {' '}\n                      <i className=\"fa-regular fa-lightbulb fa-fw\"></i>\n                      SPV\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'bills' ? 'active' : ''}`}\n                      id=\"bills-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#bills\"\n                      role=\"tab\"\n                      aria-controls=\"bills\"\n                      aria-selected={activeTab === 'bills'}\n                      onClick={(e) => handleTabClick('bills', 'Rechnung', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8565)\">\n                          <path d=\"M5.125 15.0938H12.625C12.8828 15.0938 13.0938 14.8828 13.0938 14.625V6.1875H10.75C10.2314 6.1875 9.8125 5.76855 9.8125 5.25V2.90625H5.125C4.86719 2.90625 4.65625 3.11719 4.65625 3.375V14.625C4.65625 14.8828 4.86719 15.0938 5.125 15.0938ZM3.25 3.375C3.25 2.34082 4.09082 1.5 5.125 1.5H9.97363C10.4717 1.5 10.9492 1.69629 11.3008 2.04785L13.9521 4.69922C14.3037 5.05078 14.5 5.52832 14.5 6.02637V14.625C14.5 15.6592 13.6592 16.5 12.625 16.5H5.125C4.09082 16.5 3.25 15.6592 3.25 14.625V3.375ZM5.59375 4.78125C5.59375 4.52344 5.80469 4.3125 6.0625 4.3125H8.40625C8.66406 4.3125 8.875 4.52344 8.875 4.78125C8.875 5.03906 8.66406 5.25 8.40625 5.25H6.0625C5.80469 5.25 5.59375 5.03906 5.59375 4.78125ZM5.59375 6.65625C5.59375 6.39844 5.80469 6.1875 6.0625 6.1875H8.40625C8.66406 6.1875 8.875 6.39844 8.875 6.65625C8.875 6.91406 8.66406 7.125 8.40625 7.125H6.0625C5.80469 7.125 5.59375 6.91406 5.59375 6.65625ZM8.875 13.2188C8.875 12.9609 9.08594 12.75 9.34375 12.75H11.6875C11.9453 12.75 12.1562 12.9609 12.1562 13.2188C12.1562 13.4766 11.9453 13.6875 11.6875 13.6875H9.34375C9.08594 13.6875 8.875 13.4766 8.875 13.2188ZM6.53125 8.0625H11.2188C11.7373 8.0625 12.1562 8.48145 12.1562 9V10.875C12.1562 11.3936 11.7373 11.8125 11.2188 11.8125H6.53125C6.0127 11.8125 5.59375 11.3936 5.59375 10.875V9C5.59375 8.48145 6.0127 8.0625 6.53125 8.0625Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8565\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.25)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Rechnung </span>\n                    </button>\n                  </div>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Customer)\n","// import React, { useState } from 'react'\n// import DatePicker from 'react-datepicker'\n\n// import 'react-datepicker/dist/react-datepicker.css'\n\n// // CSS Modules, react-datepicker-cssmodules.css\n// // import 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\n// export default const Date = () => {\n//   const [startDate, setStartDate] = useState(new Date())\n//   return <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n// }\n\nimport React, { useState, useEffect } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport PropTypes from 'prop-types'\n\nconst DatePiker = ({ onChange, selected }) => {\n  DatePiker.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    selected: PropTypes.func.isRequired,\n  }\n  // const [startDate, setStartDate] = useState(null)\n\n  useEffect(() => {\n    // setStartDate(new Date())\n  }, []) // Empty dependency array ensures this effect runs only once\n\n  return (\n    <div>\n      <DatePicker\n        className=\"form-control form-search-control w-101\"\n        placeholderText=\"Geburtsdatum\"\n        selected={selected}\n        onChange={onChange}\n        dateFormat=\"dd.MM.yy\"\n      />\n    </div>\n  )\n}\n\nexport default DatePiker\n","import React, { useEffect, useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Customer from '../Customer'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport DatePiker from '../Date'\nimport Select, { components } from 'react-select'\nimport PropTypes from 'prop-types'\nimport { MultiSelect } from 'primereact/multiselect'\nimport 'primereact/resources/themes/saga-blue/theme.css'\nimport 'primereact/resources/primereact.min.css'\n// import 'primeicons/primeicons.css'\nimport CreatableSelect from 'react-select/creatable'\n\nconst CheckboxOption = (props) => (\n  <div>\n    <components.Option {...props}>\n      <input\n        type=\"checkbox\"\n        checked={props.isSelected}\n        onChange={() => null} // Prevent onChange errors\n        style={{ marginRight: '10px' }}\n      />\n      {props.label}\n    </components.Option>\n  </div>\n)\n\nCheckboxOption.propTypes = {\n  // Define prop types\n  isSelected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n}\n\nconst CustomerInfo = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [page, setPage] = useState(1)\n  const [itemsPerPage, setItemsPerPage] = useState('')\n  let ress = localStorage.getItem('customerRecord')\n  // console.log(ress)\n  let resultt = JSON.parse(ress)\n  // console.log('aast', resultt)\n  const [orderingMaterials, setOrderingMaterials] = useState({\n    orderNumber: resultt?.orderingMaterials?.orderNumber,\n    newsletterDate: resultt?.orderingMaterials?.newsletterDate,\n    extras: resultt?.orderingMaterials?.extras,\n    newsletterSubscription: resultt?.orderingMaterials?.newsletterSubscription,\n  })\n  console.log('orderDate', resultt?.orderingMaterials?.newsletterDate)\n\n  const [customerInfoStatu, setCustomerInfoStatu] = useState({\n    // clientStatus: resultt?.customerInfoStatu?.clientStatus,\n    dataProtection: resultt?.customerInfoStatu?.dataProtection,\n    employee: resultt?.customerInfoStatu?.employee,\n    // dataCollection: resultt?.customerInfoStatu?.dataCollection,\n  })\n  const [clientStatus, setClientStatus] = useState(resultt?.customerInfoStatu?.clientStatus)\n  const cities = [\n    { name: 'HVD-PV', code: '0' },\n    { name: 'SPV-alt', code: '1' },\n    { name: 'OPV-alt', code: '2' },\n    { name: 'DauerspenderInnen', code: '3' },\n    { name: 'Materialbestellung', code: '4' },\n    { name: 'Newsletter-Abonnent', code: '5' },\n    { name: 'Offen', code: '6' },\n  ]\n  // const [those, setThose] = useState(resultt?.those)\n  // console.log('those', resultt?.those)\n  const [those, setThose] = useState(resultt?.those[0])\n  const handleSelectChange = (selectedOption) => {\n    setThose(selectedOption)\n    console.log(selectedOption)\n  }\n  // console.log('those', those?.value)\n  // console.log('those', resultt?.those)\n  const [customerContact, setCustomerContact] = useState({\n    title: resultt?.customerContact?.title,\n    salution: resultt?.customerContact?.salution,\n    gender: resultt?.customerContact?.gender,\n    fname: resultt?.fname,\n    lname: resultt?.lname,\n    startDate: resultt?.startDate,\n  })\n\n  const [customerBills, setCustomerBills] = useState({\n    billAddress: resultt?.customerBills?.billAddress || resultt?.street,\n    billPlz: resultt?.customerBills?.billPlz || resultt?.plz,\n    billLand: resultt?.customerBills?.billLand || resultt?.land,\n    billOrt: resultt?.customerBills?.billOrt || resultt?.city,\n  })\n  const [email, setEmail] = useState('')\n  const [dataCollection, setDataCollection] = useState(resultt?.customerInfoStatu?.dataCollection)\n  // dataCollection: resultt?.customerInfoStatu?.dataCollection,\n  const [customerDelivery, setCustomerDelivery] = useState({\n    fname: resultt?.customerDelivery?.fname || resultt?.fname,\n    lname: resultt?.customerDelivery?.lname || resultt?.lname,\n    address: resultt?.customerDelivery?.address || resultt?.street,\n    plz: resultt?.plz,\n    land: resultt?.land,\n    ort: resultt?.customerDelivery?.ort || resultt?.city,\n    phone: resultt?.phone,\n    mobile: resultt?.customerDelivery?.mobile,\n    alreadyPaid: resultt?.customerDelivery?.alreadyPaid,\n  })\n  const [customerStartDeposit, setCustomerStartDeposit] = useState(\n    resultt?.customerDeposit?.startDeposit,\n  )\n  const [customerNextBrand, setCustomerNextBrand] = useState(resultt?.customerDeposit?.nextBrand)\n  const [customerUpdateStamp, setCustomerUpdateStamp] = useState(\n    resultt?.customerDeposit?.updateStamp,\n  )\n  const [customerLastStamp, setCustomerLastStamp] = useState(resultt?.customerDeposit?.lastStamp)\n  const [customerReminderStamp, setCustomerReminderStamp] = useState(\n    resultt?.customerDeposit?.reminderStamp,\n  )\n  const [customerDepositeCheckbox, setCustomerDepositeCheckbox] = useState(\n    Boolean(resultt?.customerDeposit?.deposit),\n  )\n  const [customerEmergencyPass, setCustomerEmergencyPass] = useState(\n    Boolean(resultt?.customerDeposit?.emergencyPass),\n  )\n  const [customerBurial, setCustomerBurial] = useState({\n    termination: resultt?.customerBurial?.termination,\n    terminationDeath: resultt?.customerBurial?.terminationDeath,\n    notTermination: resultt?.customerBurial?.notTermination,\n    financialReasons: resultt?.customerBurial?.financialReasons,\n  })\n  const [getCustomerData, setGetCustomerData] = useState({})\n  const [employeeData, setEmployeeData] = useState([])\n  // console.log('customer_info', resultt.orderingMaterials.orderNumber)\n  let customer = {\n    fname: customerContact?.fname || resultt?.fname,\n    lname: customerContact?.lname || resultt?.lname,\n    email: resultt?.email,\n    phone: customerDelivery?.phone || resultt?.phone,\n    plz: customerDelivery?.plz || resultt?.plz,\n    startDate: customerContact?.startDate || resultt?.startDate,\n    status: clientStatus,\n    land: customerDelivery?.land || resultt?.land,\n    id: resultt?.id,\n    street: resultt?.street,\n    city: resultt?.city,\n    those: resultt?.those,\n    created_by: resultt?.created_by,\n  }\n  // console.log('aaastha', customer.email)\n  // console.log('email', resultt?.customer)\n\n  const matarialChange = (e) => {\n    if (e instanceof Date) {\n      // const formattedDate = `${('0' + e.getDate()).slice(-2)}.${('0' + (e.getMonth() + 1)).slice(\n      //   -2,\n      // )}.${e.getFullYear().toString().slice(-2)}`\n      setOrderingMaterials({ ...orderingMaterials, newsletterDate: e })\n    } else if (e.target) {\n      const { name, value } = e.target\n      if (name === 'newsletterDate') {\n        setOrderingMaterials({ ...orderingMaterials, newsletterDate: value })\n      } else {\n        setOrderingMaterials({ ...orderingMaterials, [name]: value })\n      }\n    } else {\n      console.error('Invalid event or data provided to matarialChange.')\n    }\n  }\n\n  const Quelle = [\n    { value: 'order', label: 'Auftrag (Online-Maske) ' },\n    { value: 'contact form', label: 'Kontaktformular' },\n    { value: 'order print', label: 'Auftrag / Print' },\n    { value: 'website', label: 'Webseite' },\n    { value: 'e-mail', label: 'E-Mail' },\n    { value: 'call', label: 'Anruf' },\n    { value: 'letter', label: 'Zuschrift (Post)' },\n    { value: 'HVD regional association', label: 'HVD-Landesverband' },\n    { value: 'Regional association MOL', label: 'Regionalverband MOL' },\n    { value: 'Northern Regional Association', label: 'Regionalverband NORD' },\n    { value: 'Regional association', label: 'Regionalverband Potsdam' },\n    { value: 'inter', label: 'intern' },\n    { value: 'anderes', label: 'anderes' },\n  ]\n  const Anrede = [\n    { value: 'herr', label: 'Herr' },\n    { value: 'frau', label: 'Frau' },\n    { value: 'divers', label: 'Divers' },\n  ]\n  const customerInfoChange = (e) => {\n    if (e instanceof Date) {\n      setCustomerInfoStatu({ ...customerInfoStatu, dataCollection: e })\n    } else if (e.target) {\n      const { name, value, checked, type } = e.target\n\n      if (name === 'dataCollection') {\n        setCustomerInfoStatu({ ...customerInfoStatu, [name]: value })\n      } else {\n        setCustomerInfoStatu({\n          ...customerInfoStatu,\n          [name]: type === 'checkbox' ? checked : value,\n        })\n      }\n    } else if (e.value !== undefined) {\n      setCustomerInfoStatu({ ...customerInfoStatu, employee: e.value })\n    } else {\n      console.error('Invalid event or data provided to customerInfoChange.')\n    }\n  }\n\n  const ContactChange = (e) => {\n    if (e instanceof Date) {\n      setCustomerContact({ ...customerContact, startDate: e })\n    } else if (e.target) {\n      const { name, value, type, checked } = e.target\n\n      if (type === 'radio') {\n        const newValue = checked ? value : ''\n        setCustomerContact({ ...customerContact, [name]: newValue })\n      } else {\n        setCustomerContact({ ...customerContact, [name]: type === 'checkbox' ? checked : value })\n      }\n    } else if (e.value !== undefined) {\n      setCustomerContact({ ...customerContact, salution: e.value })\n    } else {\n      console.error('Invalid event or data provided to ContactChange.')\n    }\n  }\n\n  const BillChange = (e) => {\n    const { name, value } = e.target\n    setCustomerBills({ ...customerBills, [name]: value })\n  }\n  const DepositChange = (e, fieldName) => {\n    setCustomerStartDeposit(e)\n  }\n  const nextBrandChange = (e) => {\n    setCustomerNextBrand(e)\n  }\n\n  const updateStamp = (e) => {\n    setCustomerUpdateStamp(e)\n  }\n\n  const lastStamp = (e) => {\n    setCustomerLastStamp(e)\n  }\n\n  const reminderStamp = (e) => {\n    setCustomerReminderStamp(e)\n  }\n\n  const deposite = (e) => {\n    setCustomerDepositeCheckbox(e.target.checked)\n  }\n\n  const emergencyPass = (e) => {\n    setCustomerEmergencyPass(e.target.checked)\n  }\n\n  const customerDepositt = {\n    startDeposit: customerStartDeposit,\n    nextBrand: customerNextBrand,\n    updateStamp: customerUpdateStamp,\n    lastStamp: customerLastStamp,\n    reminderStamp: customerReminderStamp,\n    deposit: customerDepositeCheckbox,\n    emergencyPass: customerEmergencyPass,\n  }\n  const DeliveryChange = (e) => {\n    const { name, value, type, checked } = e.target\n    setCustomerDelivery({ ...customerDelivery, [name]: type === 'checkbox' ? checked : value })\n  }\n\n  const BurialChange = (e) => {\n    const { name, checked } = e.target\n    setCustomerBurial({ ...customerBurial, [name]: checked })\n  }\n\n  const handleEmailChange = (e) => {\n    const inputValue = e.target.value\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n\n    if (emailRegex.test(inputValue.toLowerCase())) {\n      setEmail(inputValue)\n    }\n  }\n\n  const customerInfoChangeMulti = (selectedOptions, actionMeta) => {\n    const name = actionMeta && actionMeta.name\n\n    if (name) {\n      const value =\n        selectedOptions && selectedOptions.value !== undefined\n          ? selectedOptions.value\n          : selectedOptions\n\n      setCustomerInfoStatu((prevCustomerInfoStatu) => ({\n        ...prevCustomerInfoStatu,\n        [name]: value,\n      }))\n    }\n  }\n  const [selectedOptions, setSelectedOptions] = useState([])\n  // console.log('hkdfgdfg', selectedOptions)\n  const handleChange = (selectedOptions) => {\n    setSelectedOptions(selectedOptions)\n  }\n  const getDetails = async () => {\n    try {\n      const results = await fetch(`${apiUrl}/customer/get_record?email=${location?.state?.email}`)\n      const data = await results.json()\n      setGetCustomerData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  const getEmployeeData = async () => {\n    try {\n      const results = await fetch(`${apiUrl}/user/get/employeeData`)\n      const data = await results.json()\n      setEmployeeData(data?.data)\n      // console.log(\"ashishemploye\", data?.data)\n      // setGetCustomerData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n\n  console.log('aastha type', customerDepositt.emergencyPass)\n  let customerInfoStatuData = { ...customerInfoStatu, clientStatus, dataCollection }\n  console.log('ashishclient', customerInfoStatuData)\n  const data = {\n    customer: customer,\n    orderingMaterials: orderingMaterials,\n    customerInfoStatu: customerInfoStatuData,\n    // those: those,\n    // customerInfoStatu: customerInfoStatu,\n    those: those,\n    customerContact: customerContact,\n    customerBills: customerBills,\n    customerDelivery: customerDelivery,\n    customerDeposit: customerDepositt,\n    customerBurial: customerBurial,\n    // created_by: '',\n    // customer_id: result._id,\n  }\n  const saveData = async (e) => {\n    e.preventDefault()\n    // let a = new Date().getFullYear()\n    // if (e.getFullYear() > a) {\n    //   toast.warning('Das Datum sollte das aktuelle Jahr nicht überschreiten')\n    // }\n    // setCustomerInfoStatu(e)\n    if (clientStatus?.length === 0) {\n      return toast.warning('Das Statusfeld ist erforderlich')\n    }\n    try {\n      let response = await fetch(`${apiUrl}/customer/get_record/edit/${resultt?._id}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n\n      let result = await response.json()\n\n      if (result?.message === 'Customer updated successfully') {\n        toast.success('Kundeninfo erfolgreich gespeichert')\n        // setOrderingMaterials({\n        //   orderNumber: '',\n        //   newsletterDate: '',\n        //   extras: '',\n        //   newsletterSubscription: '',\n        // })\n        // setCustomerInfoStatu({\n        //   clientStatus: '',\n        //   employee: '',\n        //   dataCollection: '',\n        //   dataProtection: '',\n        // })\n        // setThose('')\n        // setEmail('')\n        // setCustomerContact({\n        //   title: '',\n        //   salution: '',\n        //   gender: '',\n        //   fname: '',\n        //   dob: '',\n        //   name: '',\n        // })\n        // setCustomerBills({\n        //   billAddress: '',\n        //   billPlz: '',\n        //   billLand: '',\n        //   billOrt: '',\n        // })\n\n        // setCustomerDelivery?({\n        //   fname: '',\n        //   lname: '',\n        //   address: '',\n        //   plz: '',\n        //   land: '',\n        //   ort: '',\n        //   phone: '',\n        //   mobile: '',\n        //   alreadyPaid: '',\n        // })\n        // setCustomerDeposit({\n        //   deposit: '',\n        //   startDeposit: '',\n        //   nextBrand: '',\n        //   updateStamp: '',\n        //   lastStamp: '',\n        //   emergencyPass: '',\n        //   reminderStamp: '',\n        // })\n        // setCustomerBurial('')\n        getDetails()\n      }\n\n      // Show success toast\n    } catch (error) {\n      console.log('Error saving data:', error)\n\n      // Show error toast\n      toast.error('Fehler beim Speichern der Daten. Bitte versuche es erneut.')\n    }\n  }\n  const customerDateChange = (e) => {\n    let selectedDateObject = new Date(e)\n    let currentYear = new Date().getFullYear()\n\n    if (selectedDateObject.getFullYear() > currentYear) {\n      toast.warning('Das Datum sollte das aktuelle Jahr nicht überschreiten')\n      return\n    }\n\n    setDataCollection(e)\n  }\n\n  useEffect(() => {\n    getDetails()\n    getEmployeeData()\n  }, [page, itemsPerPage])\n\n  const cancelData = () => {\n    navigate('/customerlist')\n  }\n  const getPlaceholder = () => {\n    if (clientStatus.length === 0) {\n      return 'HVD-PV'\n    } else {\n      return `${clientStatus.length} record${clientStatus.length > 1 ? 's' : ''} selected`\n    }\n  }\n\n  return (\n    <div className=\"inner-page-wrap\">\n      <Customer getCustomerData={getCustomerData} />\n      <div className=\"tab-content px-3\">\n        <div className=\"tab-title\">\n          <h4>KlientInnen</h4>\n        </div>\n        <div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"block-wrap\">\n                <h3>Materialbestellung</h3>\n                {/* orderingMaterials start */}\n                <div className=\"row-wrap\">\n                  <div>\n                    <div className=\"row justify-content-between align-items-center\">\n                      <div className=\"col-md-3\">\n                        <div className=\"d-flex\">\n                          <label htmlFor=\"inputPassword\" className=\"col-sm-10 col-form-label\">\n                            Bestellte Anzahl Fragebögen\n                          </label>\n                          <input\n                            type=\"number\"\n                            value={orderingMaterials.orderNumber}\n                            name=\"orderNumber\"\n                            onChange={matarialChange}\n                            className=\"form-control\"\n                            // style={{ width: '70px' }}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-md-2\">\n                        <div className=\"d-flex\">\n                          <label htmlFor=\"inputPassword\" className=\"col-form-label\">\n                            Extras\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"extras\"\n                            value={orderingMaterials.extras}\n                            onChange={matarialChange}\n                            className=\"form-control w-100\"\n                            placeholder=\"Extras\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-md-3\">\n                        <div className=\"d-flex\">\n                          <label className=\"col-form-label\">Newsletter-Datum</label>\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={orderingMaterials.newsletterDate}\n                            onChange={matarialChange}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-4\">\n                        <div className=\"d-flex\">\n                          <label className=\"col-form-label\">Newsletter-Abonnement</label>\n                          <div className=\"d-flex\">\n                            <div className=\"radio-check-wrap\">\n                              <input\n                                type=\"radio\"\n                                name=\"newsletterSubscription\"\n                                value=\"active\"\n                                checked={orderingMaterials.newsletterSubscription === 'active'}\n                                onChange={matarialChange}\n                              />\n                              <span>Aktiv</span>\n                            </div>\n                            <div className=\"radio-check-wrap\">\n                              <input\n                                type=\"radio\"\n                                name=\"newsletterSubscription\"\n                                value=\"inactive\"\n                                checked={orderingMaterials.newsletterSubscription === 'inactive'}\n                                onChange={matarialChange}\n                              />\n                              <span>Inaktiv</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <h3>Status</h3>\n                <div className=\"border-bottom mb-3\">\n                  <div>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label className=\"col-sm-3 col-form-label\">Status</label>\n                          <div className=\"col-sm-6\">\n                            <MultiSelect\n                              placeholder={getPlaceholder()}\n                              value={clientStatus}\n                              onChange={(e) => setClientStatus(e.value)}\n                              options={cities}\n                              isMulti\n                              maxSelectedValues={3}\n                              optionLabel=\"name\"\n                              className=\"w-100\"\n                              showCheckbox\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                            Zustimmung Datenschutz\n                          </label>\n                          <div className=\"col-sm-4 mt-2\">\n                            <div className=\"radio-check-wrap w-100 h-100\">\n                              <input\n                                type=\"checkbox\"\n                                name=\"dataProtection\"\n                                onChange={customerInfoChange}\n                                // checked={JSON.parse(customerInfoStatu.dataProtection)}\n                                checked={customerInfoStatu.dataProtection}\n                              />\n                              <span></span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label className=\"col-sm-3 col-form-label\">MitarbeiterInnen</label>\n                          <div className=\"col-sm-6\">\n                            <Select\n                              className=\"w-100\"\n                              placeholder=\"MitarbeiterInnen\"\n                              options={employeeData?.map((elem) => ({\n                                value: elem.username,\n                                label: elem.username,\n                              }))}\n                              onChange={customerInfoChange}\n                              value={{\n                                value: customerInfoStatu.employee || 'MitarbeiterInnen',\n                                label: customerInfoStatu.employee || 'MitarbeiterInnen',\n                              }}\n                              name=\"employee\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label htmlFor=\"inputDate\" className=\"col-sm-4 col-form-label\">\n                            Datenerfassung\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <DatePiker\n                              className=\"form-control\"\n                              selected={dataCollection}\n                              onChange={customerDateChange}\n                              // name=\"dataCollection\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* customerInfoStatu start */}\n\n                <h3>Quelle</h3>\n                <div className=\"row-wrap border-0 mb-0 pb-0\">\n                  <div>\n                    <div className=\"row\">\n                      <div className=\"col-sm-3 ps-0\">\n                        <div className=\"input-group px-2\">\n                          <Select\n                            className=\"w-100\"\n                            options={Quelle}\n                            onChange={handleSelectChange}\n                            value={those}\n                            name=\"those\"\n                            placeholder=\"Auswahl\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"block-wrap\">\n                <h3>Kontaktdaten</h3>\n                <div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Titel\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            value={customerContact.title}\n                            name=\"title\"\n                            onChange={ContactChange}\n                            className=\"form-control\"\n                            placeholder=\"Titel\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Geburtsdatum\n                        </label>\n                        <div className=\"col-sm-6\">\n                          {/* <input\n                            type=\"date\"\n                            value={customerContact.dob}\n                            name=\"dob\"\n                            onChange={ContactChange}\n                            className=\"form-control\"\n                            placeholder=\"10.10.23\"\n                            id=\"inputDate\"\n                          /> */}\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerContact.startDate}\n                            onChange={ContactChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row mb-3\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Anrede\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <Select\n                            className=\"w-100\"\n                            options={Anrede}\n                            onChange={ContactChange}\n                            value={Anrede.find(\n                              (option) => option.value === customerContact.salution,\n                            )} // Find the selected option\n                            name=\"salution\"\n                            placeholder=\"Anrede\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Geschlecht\n                        </label>\n                        <div className=\"col-sm-6 mt-2\">\n                          {/* <div className=\"d-flex\"> */}\n                          <div className=\"radio-wrap\">\n                            <div className=\"radio-input\">\n                              <input\n                                type=\"radio\"\n                                id=\"male\"\n                                value=\"male\"\n                                name=\"gender\"\n                                onChange={ContactChange}\n                                checked={customerContact.gender === 'male'}\n                              />\n                              <span>Männlich</span>\n                            </div>\n\n                            <div className=\"radio-input\">\n                              <input\n                                type=\"radio\"\n                                id=\"female\"\n                                value=\"female\"\n                                name=\"gender\"\n                                onChange={ContactChange}\n                                checked={customerContact.gender === 'female'}\n                              />\n                              <span>Weiblich</span>\n                            </div>\n                            <div className=\"radio-input\">\n                              <input\n                                type=\"radio\"\n                                id=\"divers\"\n                                value=\"other\"\n                                name=\"gender\"\n                                onChange={ContactChange}\n                                checked={customerContact.gender === 'other'}\n                              />\n                              <span>Divers</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Vornamen\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            placeholder=\"Vornamen\"\n                            value={customerContact.fname}\n                            name=\"fname\"\n                            onChange={ContactChange}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Name\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                            placeholder=\"Name\"\n                            name=\"lname\"\n                            onChange={ContactChange}\n                            value={customerContact.lname}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          E-Mail-Adresse\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"email\"\n                            disabled\n                            name=\"email\"\n                            placeholder=\"E-Mail-Adresse\"\n                            value={customer.email}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Telefon\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            // onChange={DeliveryChange}\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^0-9+]/g, '') // Allow only digits and the plus sign\n                              if (/^\\+?[0-9]*$/.test(inputValue)) {\n                                DeliveryChange({ target: { name: 'phone', value: inputValue } })\n                              }\n                            }}\n                            name=\"phone\"\n                            value={customerDelivery?.phone}\n                            className=\"form-control\"\n                            type=\"tel\"\n                            placeholder=\"Telefon\"\n                            id=\"inputTelephone\"\n                            maxLength={30}\n                            minLength={3}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Mobil\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            // onChange={DeliveryChange}\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^0-9+]/g, '') // Allow only digits and the plus sign\n                              if (/^\\+?[0-9]*$/.test(inputValue)) {\n                                DeliveryChange({ target: { name: 'mobile', value: inputValue } })\n                              }\n                            }}\n                            name=\"mobile\"\n                            value={customerDelivery?.mobile}\n                            type=\"tel\"\n                            placeholder=\"Mobil\"\n                            className=\"form-control\"\n                            id=\"inputTelephone\"\n                            maxLength={30}\n                            minLength={3}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label className=\"col-sm-4 col-form-label\">Bereits bezahlt</label>\n                        <div className=\"col-sm-6 mt-2\">\n                          <div className=\"radio-check-wrap\">\n                            <input\n                              onChange={DeliveryChange}\n                              name=\"alreadyPaid\"\n                              // checked={JSON.parse(customerDelivery?.alreadyPaid)}\n                              checked={customerDelivery?.alreadyPaid}\n                              type=\"checkbox\"\n                            />\n                            <span>ja</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h6>Adresse</h6>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Straße mit Hausnummer\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={BillChange}\n                            name=\"billAddress\"\n                            placeholder=\"Straße mit Hausnummer\"\n                            value={customerBills.billAddress}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          PLZ\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"tel\"\n                            value={customerBills.billPlz}\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^0-9]/g, '') // Allow only alphabetic characters, spaces, hyphens, and apostrophes\n                              setCustomerBills({ ...customerBills, billPlz: inputValue })\n                            }}\n                            placeholder=\"PLZ\"\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                            maxLength={6}\n                            minLength={3}\n                            required={true}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputText\" className=\"col-sm-4 col-form-label\">\n                          Ort\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={BillChange}\n                            name=\"billOrt\"\n                            placeholder=\"Ort\"\n                            value={customerBills.billOrt}\n                            className=\"form-control\"\n                            id=\"inputText\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Land\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            name=\"billLand\"\n                            placeholder=\"Land\"\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^a-zA-Z\\s'-]/g, '')\n                              BillChange({ target: { name: 'billLand', value: inputValue } })\n                            }}\n                            value={customerBills.billLand}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <h6>Lieferadresse c/o</h6>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Vornamen\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={DeliveryChange}\n                            name=\"fname\"\n                            placeholder=\"Vornamen\"\n                            // value={customers.fname}\n                            value={customerDelivery?.fname}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Straße mit Hausnummer\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={DeliveryChange}\n                            name=\"address\"\n                            placeholder=\"Straße mit Hausnummer\"\n                            value={customerDelivery?.address}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Ort\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={DeliveryChange}\n                            name=\"ort\"\n                            placeholder=\"Ort\"\n                            value={customerDelivery?.ort}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label className=\"col-sm-4 col-form-label\">Name</label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            onChange={DeliveryChange}\n                            name=\"lname\"\n                            value={customerDelivery?.lname}\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          PLZ\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"tel\"\n                            value={customerDelivery.plz}\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^0-9]/g, '') // Allow only alphabetic characters, spaces, hyphens, and apostrophes\n                              setCustomerDelivery({ ...customerDelivery, plz: inputValue })\n                            }}\n                            placeholder=\"PLZ\"\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                            maxLength={6}\n                            minLength={3}\n                            required={true}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Land\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            name=\"land\"\n                            placeholder=\"Land\"\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^a-zA-Z\\s'-]/g, '')\n                              DeliveryChange({ target: { name: 'land', value: inputValue } })\n                            }}\n                            value={customerDelivery?.land}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"block-wrap\">\n                <h3>Hinterlegung</h3>\n                <div>\n                  {/* <div className=\"row\">\n                    <div className=\"radio-check-wrap mb-3\">\n                      <input\n                        type=\"checkbox\"\n                        onChange={deposite}\n                        // checked={JSON.parse(customerDeposit.deposit)}\n                        checked={customerDepositeCheckbox}\n                        name=\"deposit\"\n                      />\n                      <span> Hinterlegung [ja]</span>\n                    </div>\n                  </div> */}\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Hinterlegungsbeginn\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerStartDeposit}\n                            onChange={DepositChange}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Versand nächste Marke\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerNextBrand}\n                            onChange={nextBrandChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Versand letzte Marke\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerUpdateStamp}\n                            onChange={updateStamp}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <label className=\"col-sm-4 col-form-label\">Rücksendung letzte Marke</label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerLastStamp}\n                            onChange={lastStamp}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div className=\"row \">\n                    <div className=\"col-sm-6\"> */}\n                  <div className=\"row \">\n                    <div className=\"col-sm-6 mt-2\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={emergencyPass}\n                          // checked={JSON.parse(customerDeposit.emergencyPass)}\n                          checked={customerEmergencyPass}\n                          name=\"emergencyPass\"\n                        />{' '}\n                        <span> Notfallpass</span>\n                      </div>\n                    </div>\n                    {/* </div>\n                    </div> */}\n\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Erinnerung Marke\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerReminderStamp}\n                            onChange={reminderStamp}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"block-wrap\">\n                <h3>Beendigung</h3>\n                <div>\n                  <div className=\"row\">\n                    <div className=\"col-md-3 col-sm-6\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap w-100\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={BurialChange}\n                          // checked={JSON.parse(customerBurial.termination)}\n                          checked={customerBurial.termination}\n                          name=\"termination\"\n                        />\n                        <span>Auf eigenen Wunsch</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-3 col-sm-6\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap w-100\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={BurialChange}\n                          // checked={JSON.parse(customerBurial.terminationDeath)}\n                          checked={customerBurial.terminationDeath}\n                          name=\"terminationDeath\"\n                        />\n                        <span> Durch Tod</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-3 col-sm-6\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap w-100\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={BurialChange}\n                          // checked={JSON.parse(customerBurial.notTermination)}\n                          checked={customerBurial.notTermination}\n                          name=\"notTermination\"\n                        />\n                        <span>Weil nicht ermittelbar</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-3 col-sm-6\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap w-100\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={BurialChange}\n                          // checked={JSON.parse(customerBurial.financialReasons)}\n                          checked={customerBurial.financialReasons}\n                          name=\"financialReasons\"\n                        />\n                        <span> Aus finanziellen Gründen</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container-fluid mb-3 pb-3\">\n          <div className=\"row justify-content-md-end\">\n            <div className=\"col text-md-end btn-wrapper\">\n              <button type=\"button\" className=\"btn btn-cancel me-3\" onClick={cancelData}>\n                Abbrechen\n              </button>\n\n              <button type=\"button\" className=\"btn btn-save\" onClick={saveData}>\n                Speichern\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default React.memo(CustomerInfo)\n"],"names":["Customer","_ref","_res$fname","_res$fname2","_res$lname","_res$lname2","_res$street","_res$street2","getCustomerData","navigate","useNavigate","activeTab","localStorage","getItem","handleTabClick","tabId","name","e","target","tagName","toLowerCase","preventDefault","setItem","useEffect","customer","res","JSON","parse","firstName","fname","slice","toUpperCase","lastName","lname","street","plz","city","_jsx","_Fragment","children","_jsxs","className","concat","xmlns","width","height","viewBox","fill","clipPath","d","id","startDate","email","phone","role","onClick","transform","React","onChange","selected","DatePicker","placeholderText","dateFormat","CustomerInfo","_resultt$orderingMate","_resultt$orderingMate2","_resultt$orderingMate3","_resultt$orderingMate4","_resultt$orderingMate5","_resultt$customerInfo","_resultt$customerInfo2","_resultt$customerInfo3","_resultt$customerCont","_resultt$customerCont2","_resultt$customerCont3","_resultt$customerBill","_resultt$customerBill2","_resultt$customerBill3","_resultt$customerBill4","_resultt$customerInfo4","_resultt$customerDeli","_resultt$customerDeli2","_resultt$customerDeli3","_resultt$customerDeli4","_resultt$customerDeli5","_resultt$customerDeli6","_resultt$customerDepo","_resultt$customerDepo2","_resultt$customerDepo3","_resultt$customerDepo4","_resultt$customerDepo5","_resultt$customerDepo6","_resultt$customerDepo7","_resultt$customerBuri","_resultt$customerBuri2","_resultt$customerBuri3","_resultt$customerBuri4","location","useLocation","apiUrl","process","page","setPage","useState","itemsPerPage","setItemsPerPage","ress","resultt","orderingMaterials","setOrderingMaterials","orderNumber","newsletterDate","extras","newsletterSubscription","console","log","customerInfoStatu","setCustomerInfoStatu","dataProtection","employee","clientStatus","setClientStatus","those","setThose","customerContact","setCustomerContact","title","salution","gender","customerBills","setCustomerBills","billAddress","billPlz","billLand","land","billOrt","setEmail","dataCollection","setDataCollection","customerDelivery","setCustomerDelivery","address","ort","mobile","alreadyPaid","customerStartDeposit","setCustomerStartDeposit","customerDeposit","startDeposit","customerNextBrand","setCustomerNextBrand","nextBrand","customerUpdateStamp","setCustomerUpdateStamp","updateStamp","customerLastStamp","setCustomerLastStamp","lastStamp","customerReminderStamp","setCustomerReminderStamp","reminderStamp","customerDepositeCheckbox","setCustomerDepositeCheckbox","Boolean","deposit","customerEmergencyPass","setCustomerEmergencyPass","emergencyPass","customerBurial","setCustomerBurial","termination","terminationDeath","notTermination","financialReasons","setGetCustomerData","employeeData","setEmployeeData","status","created_by","matarialChange","Date","value","error","Anrede","label","customerInfoChange","checked","type","undefined","ContactChange","newValue","BillChange","customerDepositt","DeliveryChange","BurialChange","selectedOptions","setSelectedOptions","getDetails","async","_location$state","results","fetch","state","data","json","customerInfoStatuData","getEmployeeData","htmlFor","placeholder","DatePiker","MultiSelect","length","options","code","isMulti","maxSelectedValues","optionLabel","showCheckbox","Select","map","elem","username","selectedDateObject","currentYear","getFullYear","toast","warning","selectedOption","find","option","disabled","inputValue","replace","test","maxLength","minLength","required","DepositChange","fieldName","style","padding","cancelData","response","_id","method","headers","body","stringify","result","message","success","ToastContainer"],"sourceRoot":""}