{"version":3,"file":"static/js/24.c747b1a2.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport { useNavigate } from 'react-router-dom'\n// import ReCAPTCHA from 'react-google-recaptcha'\nimport logo from '../../../assets/images/hvd-logo.png'\n// import logo from '../../../assets/images/hvd-logo-fig.png'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { CCard, CCardBody, CCardGroup, CCol, CContainer, CRow } from '@coreui/react'\n\nconst Login = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const apiUrl = process.env.REACT_APP_API_URL\n  const navigate = useNavigate()\n  const [validated, setValidated] = useState(false)\n  const notify = (dataa) => toast(dataa)\n  const login = async (event) => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n\n    setValidated(true)\n\n    try {\n      if (!email || !password) {\n        return\n      }\n\n      const data = { email, password }\n      const response = await fetch(`${apiUrl}/user/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n\n      const result = await response.json()\n      // console.log('aastha', result)\n\n      if (result.success === true) {\n        toast.success('Benutzeranmeldung erfolgreich')\n        const token = result?.user?.tokens[0]?.token\n        window.localStorage.setItem('token', token)\n        window.localStorage.setItem('record_id', result?.user?._id)\n        navigate('/dashboard')\n        window.location.reload()\n      } else {\n        notify('Ungültige Anmeldeinformationen')\n      }\n    } catch (error) {\n      console.error('Error:', error)\n      toast.error('Ungültige Anmeldeinformationen')\n    }\n  }\n\n  const forgetPassword = () => {\n    navigate('/password-reset')\n  }\n\n  return (\n    <div\n      className=\" min-vh-100 d-flex flex-row align-items-center\"\n      style={{ background: '#015291' }}\n    >\n      <CContainer className=\"form-container\">\n        <CRow className=\"justify-content-center\">\n          <CCol md={4}>\n            <img className=\"logo-login\" src={logo} alt=\"...\" />\n            <CCardGroup className=\"mt-3\">\n              <CCard className=\"p-4\">\n                <CCardBody className=\"p-0\">\n                  <Form noValidate validated={validated}>\n                    <h4 className=\"h4-heading\">Anmeldung</h4>\n                    <Row className=\"mb-3\">\n                      <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\n                        <Form.Label>E-Mail Adresse</Form.Label>\n                        <Form.Control\n                          value={email}\n                          onChange={(e) => setEmail(e.target.value)}\n                          required\n                          type=\"email\"\n                          placeholder=\"E-Mail Adresse\"\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row className=\"mb-2\">\n                      <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\n                        <Form.Label>Passwort</Form.Label>\n                        <Form.Control\n                          required\n                          value={password}\n                          onChange={(e) => setPassword(e.target.value)}\n                          type=\"password\"\n                          placeholder=\"password\"\n                        />\n                      </Form.Group>\n                    </Row>\n                    <div>\n                      {/* <ReCAPTCHA sitekey=\"Your client site key\" onChange={onChange} /> */}\n                      <br />\n                      <Button\n                        className=\"form-control form-btn\"\n                        style={{ background: '#005291' }}\n                        onClick={login}\n                      >\n                        Senden\n                      </Button>\n                      <p\n                        style={{\n                          textAlign: 'center',\n                          color: '#005291',\n                          fontSize: '13px',\n                          margin: 0,\n                          cursor: 'pointer',\n                        }}\n                        color=\"primary\"\n                        onClick={forgetPassword}\n                        className=\"mt-3 mx-3 mb-0\"\n                        tabIndex={-1}\n                      >\n                        Passwort vergessen ?\n                      </p>\n                    </div>\n                  </Form>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default React.memo(Login)\n","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["Login","email","setEmail","useState","password","setPassword","navigate","useNavigate","validated","setValidated","_jsxs","className","style","background","children","_jsx","CContainer","CRow","CCol","md","src","logo","alt","CCardGroup","CCard","CCardBody","Form","noValidate","Row","Group","as","Col","controlId","Label","Control","value","onChange","e","target","required","type","placeholder","Button","onClick","async","event","currentTarget","checkValidity","preventDefault","stopPropagation","data","response","fetch","concat","process","method","headers","body","JSON","stringify","result","json","success","_result$user","_result$user$tokens$","_result$user2","toast","token","user","tokens","window","localStorage","setItem","_id","location","reload","dataa","error","console","textAlign","color","fontSize","margin","cursor","forgetPassword","tabIndex","ToastContainer","React","_excluded","useButtonProps","_ref2","tagName","disabled","href","rel","role","meta","handleClick","trim","isTrivialHref","undefined","onKeyDown","key","_ref","ref","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","variant","size","active","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}