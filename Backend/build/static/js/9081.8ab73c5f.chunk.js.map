{"version":3,"file":"static/js/9081.8ab73c5f.chunk.js","mappings":"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","sources":["views/customer/activity/GetActivityData.jsx","views/customer/activity/Activity.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  PhoneOutlined,\n  CheckCircleOutlined,\n  PrinterOutlined,\n  RedEnvelopeOutlined,\n} from '@ant-design/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Pagination from '@mui/material/Pagination'\nimport Stack from '@mui/material/Stack'\nimport axios from 'axios'\nimport { MdAdd } from 'react-icons/md'\nimport Item from 'antd/es/list/Item'\n\nconst GetActivityData = ({ updateData, search }) => {\n  const notify = (dataa) => toast(dataa)\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [page, setPage] = useState(1)\n  const [activityData, setActivityData] = useState([])\n  const [coountPage, setCountPage] = useState(0)\n  const [employeeData, setEmployeeData] = useState([])\n  const handleChange = (event, value) => {\n    setPage(value)\n  }\n  let ress = localStorage.getItem('record')\n  let resultt = JSON.parse(ress)\n  // console.log('aast', resultt?.user?.username)\n  let user = resultt?.user?.username\n  GetActivityData.propTypes = {\n    search: PropTypes.array.isRequired,\n    updateData: PropTypes.array.isRequired,\n  }\n\n  const getIconData = (iconName) => {\n    if (iconName === 'PhoneOutlined') {\n      return <PhoneOutlined />\n    } else if (iconName === 'CheckCircleOutlined') {\n      return <CheckCircleOutlined />\n    } else if (iconName === 'PrinterOutlined') {\n      return <PrinterOutlined />\n    } else if (iconName === 'RedEnvelopeOutlined') {\n      return <RedEnvelopeOutlined />\n    }\n  }\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(`${apiUrl}/activity/get_activity?keyword=${search}&page=${page}`)\n\n      setActivityData(res?.data?.data)\n      // console.log('ashish', res?.data?.pageCount)\n      setCountPage(res?.data?.pageCount)\n      // if (res?.data?.data?.length === 0) {\n      //   console.log('ashihsh')\n      //   notify(`Page ${page} There is no Data Left`)\n      //   setPage(page - 1)\n      // }\n\n      // setGetActivity(res.data.data)\n    } catch (error) {\n      // console.log(error)\n    }\n  }\n  const getEmployeeData = async () => {\n    try {\n      const results = await fetch(`${apiUrl}/user/get/employeeData`)\n      const data = await results.json()\n      setEmployeeData(data?.data)\n      // console.log(\"ashishemploye\", data?.data)\n      // setGetCustomerData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  // console.log('eemployeeData', employeeData)\n  useEffect(() => {\n    getData()\n    getEmployeeData()\n  }, [updateData, page, search])\n\n  return (\n    <>\n      {/* <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\" className=\"text-center\">\n              DATUM\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              TITEL\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              VERWALTUNG\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              BEARBEITER\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"shadow p-3 mb-5 bg-body rounded m-3\">\n          {activityData?.map((elem) => {\n            const { createdAt, icon, message, _id } = elem\n            const inputDate = new Date(createdAt)\n            const day = inputDate?.getUTCDate()\n            const month = inputDate?.getUTCMonth() + 1\n            const year = inputDate?.getUTCFullYear() % 100\n\n            const outputDateString = `${day}-${month < 10 ? '0' : ''}${month}-${\n              year < 10 ? '0' : ''\n            }${year}`\n\n            return (\n              <tr key={_id} style={{ margin: 'auto' }}>\n                <td className=\"text-center\">{getIconData(icon)}</td>\n                <td className=\"text-center\">{outputDateString}</td>\n                <td className=\"text-center\">Title</td>\n                <td\n                  style={{\n                    maxWidth: '50px',\n                    important: 'true',\n                    wordWrap: 'break-word',\n                  }}\n                  className=\"text-center\"\n                >\n                  {message}\n                </td>\n\n                <td className=\"text-center\">Description</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table> */}\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"block-wrap\">\n              <div className=\"table-responsive\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th className=\"col-1 \">AKTION</th>\n                      <th className=\"col-1 \">DATUM</th>\n                      <th className=\"col-4 \">NOTIZ</th>\n                      <th className=\"col-4 \">MITARBEITERINNEN</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {activityData?.map((elem) => {\n                      const { createdAt, icon, message, _id } = elem\n                      const inputDate = new Date(createdAt)\n                      const day = inputDate?.getUTCDate()\n                      const month = inputDate?.getUTCMonth() + 1\n                      const year = inputDate?.getUTCFullYear()\n\n                      const outputDateString = `${day}.${month < 10 ? '0' : ''}${month}.${\n                        year < 10 ? '0' : ''\n                      }${year}`\n                      return (\n                        <tr\n                          key={_id}\n                          style={{\n                            margin: 'auto',\n                            width: '50%',\n\n                            padding: ' 10px',\n                          }}\n                        >\n                          <td>\n                            <span\n                              style={{\n                                border: '1px solid #015291',\n                                borderRadius: '5px',\n                                width: '40px',\n                                height: '40px',\n                                padding: '5px',\n                                textAlign: 'center',\n                                color: '#015291',\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                              }}\n                            >\n                              {getIconData(icon)}\n                            </span>\n                          </td>\n                          <td>{outputDateString} </td>\n                          {/* <td>Lorem Ipsum is simply dummy text </td> */}\n                          <td>{message}</td>\n                          <td>\n                            {user}\n                            {/* <ol>\n                              {employeeData.map((item) => (\n                                <li key={item.id}>{item.username}</li>\n                              ))}\n                            </ol> */}\n                          </td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"bottomBtnBg\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div style={{ float: 'right' }}>\n                <button\n                  className=\"btn\"\n                  style={{ background: '#d04545', color: 'white' }}\n                  // onClick={handleClose}\n                >\n                  Abbrechen\n                </button>\n                &nbsp;&nbsp;\n                <button\n                  className=\"btn mx-2\"\n                  style={{ background: '#0b5995', color: 'white' }}\n                  // onClick={handleSubmit}\n                >\n                  Aktivität hinzufügen\n                </button>\n              </div>\n            </div>\n          </div>\n        </div> */}\n      </div>\n\n      {/* <div className=\"mx-3\">\n        <Stack spacing={2}>\n          <Pagination\n            count={coountPage}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            page={page}\n            onChange={handleChange}\n          />\n        </Stack>\n        <br />\n      </div> */}\n\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default GetActivityData\n","import React, { useState } from 'react'\nimport {\n  PhoneOutlined,\n  CheckCircleOutlined,\n  PrinterOutlined,\n  RedEnvelopeOutlined,\n} from '@ant-design/icons'\nimport { postFetchData } from 'src/Api'\nimport GetDescriptionData from './GetActivityData'\nimport Customer from '../Customer'\nimport { MdAdd } from 'react-icons/md'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst Activity = () => {\n  const apiUrl = process.env.REACT_APP_API_URL\n  const notify = (dataa) => toast(dataa)\n\n  let res = localStorage.getItem('customerDatat')\n  let result = JSON.parse(res)\n\n  const [color, setColor] = useState('white')\n  const [color1, setColor1] = useState('white')\n  const [color2, setColor2] = useState('white')\n  const [color3, setColor3] = useState('white')\n  const [iconBack, setIconBack] = useState(false)\n  const [iconBack1, setIconBack1] = useState(false)\n  const [iconBack2, setIconBack2] = useState(false)\n  const [iconBack3, setIconBack3] = useState(false)\n  const [updateData, setUpdateData] = useState(false)\n  const [icon, setIcon] = useState('')\n  const [search, setSearch] = useState('')\n  const [openMessage, setOpenMessage] = useState(false)\n  const [buttonHide, setButtonHide] = useState(true)\n  const [data, setData] = useState({\n    message: '',\n    customer_id: result?._id,\n  })\n\n  const selectIcon = (iconName, selectedColor, color) => {\n    setIcon(iconName)\n    switch (iconName) {\n      case 'PhoneOutlined':\n        setIconBack(true)\n        setIconBack1(false)\n        setIconBack2(false)\n        setIconBack3(false)\n        setColor(selectedColor)\n        setColor1('white')\n        setColor2('white')\n        setColor3('white')\n        break\n      case 'CheckCircleOutlined':\n        setIconBack1(true)\n        setIconBack(false)\n        setIconBack2(false)\n        setIconBack3(false)\n        setColor1(selectedColor)\n        setColor('white')\n        setColor2('white')\n        setColor3('white')\n        break\n      case 'RedEnvelopeOutlined':\n        setIconBack2(true)\n        setIconBack1(false)\n        setIconBack(false)\n        setIconBack3(false)\n        setColor2(selectedColor)\n        setColor1('white')\n        setColor('white')\n        setColor3('white')\n        break\n      case 'PrinterOutlined':\n        setIconBack3(true)\n        setIconBack2(false)\n        setIconBack1(false)\n        setIconBack(false)\n        setColor3(selectedColor)\n        setColor1('white')\n        setColor2('white')\n        setColor('white')\n        break\n      default:\n        break\n    }\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n  let total = { ...data, icon }\n  const handleSubmit = async () => {\n    for (const key in data) {\n      if (!data[key]) {\n        toast.error(`Bitte füllen Sie das Feld ${key} aus`)\n        return\n      }\n    }\n    try {\n      const res = await postFetchData(`${apiUrl}/activity/create_activity`, total)\n      if (res?.message === 'activity was created') {\n        toast.success('Aktivitätsdaten wurden erfolgreich erstellt')\n        setOpenMessage(false)\n        setData({\n          message: '',\n        })\n        setColor3('white')\n        setColor1('white')\n        setColor2('white')\n        setColor('white')\n        setIconBack3(false)\n        setIconBack2(false)\n        setIconBack1(false)\n        setIconBack(false)\n        setButtonHide(true)\n      } else {\n        toast.error('Etwas ist schief gelaufen')\n      }\n      setUpdateData(!updateData)\n      setOpenMessage(false)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const openText = () => {\n    setOpenMessage(true)\n    setButtonHide(false)\n  }\n  const handleClose = () => {\n    setOpenMessage(false)\n    setButtonHide(true)\n  }\n\n  return (\n    <div className=\"inner-page-wrap\" style={{ background: 'white' }}>\n      <Customer />\n\n      <div className=\"row  mt-2 mx-3\">\n        <div className=\"col-md-2 tab-title-activity d-flex\">\n          <h4>Beschreibung</h4>\n        </div>\n        <div className=\"col-md-7\">\n          <PhoneOutlined\n            className=\"p-2\"\n            style={{\n              border: '1px solid #244D92',\n              borderRadius: '5px',\n              marginRight: '10px',\n              background: color,\n              color: iconBack ? 'white' : '#244D92',\n            }}\n            onClick={() => selectIcon('PhoneOutlined', '#015290')}\n          />\n          <CheckCircleOutlined\n            className=\"p-2\"\n            style={{\n              border: '1px solid #244D92',\n              borderRadius: '5px',\n              marginRight: '10px',\n              background: color1,\n              color: iconBack1 ? 'white' : '#244D92',\n            }}\n            onClick={() => selectIcon('CheckCircleOutlined', '#015290')}\n          />\n          <RedEnvelopeOutlined\n            className=\"p-2\"\n            style={{\n              border: '1px solid #244D92',\n              borderRadius: '5px',\n              marginRight: '10px',\n              background: color2,\n              color: iconBack2 ? 'white' : '#244D92',\n            }}\n            onClick={() => selectIcon('RedEnvelopeOutlined', '#015290')}\n          />\n          <PrinterOutlined\n            className=\"p-2\"\n            style={{\n              border: '1px solid #244D92',\n              borderRadius: '5px',\n              marginRight: '10px',\n              background: color3,\n              color: iconBack3 ? 'white' : '#244D92',\n            }}\n            onClick={() => selectIcon('PrinterOutlined', '#015290')}\n          />\n        </div>\n        {buttonHide ? (\n          <div className=\"col-md-3 text-end\">\n            <button\n              className=\"btn btn\"\n              style={{ background: '#015291', color: 'white' }}\n              onClick={openText}\n            >\n              <MdAdd />\n              Aktivität hinzufügen\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      <hr />\n\n      <div className=\"tab-content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"block-wrap\">\n                <div className=\"container-fluid\">\n                  {openMessage ? (\n                    <div className=\"mt-2\">\n                      <div className=\"row\">\n                        <textarea\n                          className=\"form-control\"\n                          rows={6}\n                          name=\"message\"\n                          placeholder=\"Notiz\"\n                          value={data?.message}\n                          onChange={handleChange}\n                        ></textarea>\n                      </div>\n                      <div className=\"bottomBtnBg\">\n                        <div className=\"row\">\n                          <div className=\"col-sm-12\">\n                            <div style={{ float: 'right' }}>\n                              <button\n                                className=\"btn\"\n                                style={{ background: '#d04545', color: 'white' }}\n                                onClick={handleClose}\n                              >\n                                Abbrechen\n                              </button>\n                              &nbsp;&nbsp;\n                              <button\n                                className=\"btn mx-2\"\n                                style={{ background: '#0b5995', color: 'white' }}\n                                onClick={handleSubmit}\n                              >\n                                Aktivität hinzufügen\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"row \">\n                      <div className=\"col-sm-4\">\n                        <p>Planen und verwalten Sie Aktivitäten mit KlientInnen.</p>\n                        <div className=\"form-search-control\">\n                          <input\n                            type=\"search\"\n                            className=\"form-control form-search\"\n                            placeholder=\"Ihre Suche eingeben\"\n                            value={search}\n                            onChange={(e) => setSearch(e.target.value)}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-sm-8 text-right\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <GetDescriptionData updateData={updateData} search={search} />\n        <ToastContainer />\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Activity)\n"],"names":["_ref","_resultt$user","updateData","search","apiUrl","process","page","setPage","useState","activityData","setActivityData","coountPage","setCountPage","employeeData","setEmployeeData","ress","localStorage","getItem","resultt","JSON","parse","user","username","useEffect","async","_res$data","_res$data2","res","axios","get","concat","data","pageCount","error","getData","results","fetch","json","console","getEmployeeData","_jsxs","_Fragment","children","_jsx","className","map","elem","createdAt","icon","message","_id","inputDate","Date","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","outputDateString","style","margin","width","padding","border","borderRadius","height","textAlign","color","display","justifyContent","alignItems","iconName","PhoneOutlined","CheckCircleOutlined","PrinterOutlined","RedEnvelopeOutlined","ToastContainer","Activity","result","setColor","color1","setColor1","color2","setColor2","color3","setColor3","iconBack","setIconBack","iconBack1","setIconBack1","iconBack2","setIconBack2","iconBack3","setIconBack3","setUpdateData","setIcon","setSearch","openMessage","setOpenMessage","buttonHide","setButtonHide","setData","customer_id","selectIcon","selectedColor","total","background","Customer","marginRight","onClick","openText","MdAdd","rows","name","placeholder","value","onChange","e","target","float","handleClose","key","toast","postFetchData","success","log","type","GetDescriptionData","React"],"sourceRoot":""}