{"version":3,"file":"static/js/56.dbf3515e.chunk.js","mappings":"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","sources":["views/customer/Customer.jsx","views/customer/Date.jsx","views/customer/customerInfo/CustomerInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { HiOutlineMail } from 'react-icons/hi'\nimport { IoIosCall } from 'react-icons/io'\nimport { ImLocation2 } from 'react-icons/im'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nconst Customer = ({ getCustomerData, updateData }) => {\n  const [customerInfo, setCustomerInfo] = useState([])\n  let ress = localStorage.getItem('customerRecord')\n  let resultt = JSON.parse(ress)\n  const apiUrl = process.env.REACT_APP_API_URL\n  Customer.propTypes = {\n    getCustomerData: PropTypes.func.isRequired,\n    updateData: PropTypes.func.isRequired,\n  }\n\n  const navigate = useNavigate()\n\n  let activeTab = localStorage.getItem('tabId') || 'customer_info'\n\n  const handleTabClick = (tabId, name, e) => {\n    if (e && e.target.tagName.toLowerCase() === 'a') {\n      e.preventDefault()\n    }\n    if (name === 'KlientInnen') {\n      localStorage.setItem('tabId', 'customer_info')\n      return navigate('/customer/customer_info')\n    } else if (name === 'Kontakte') {\n      localStorage.setItem('tabId', 'contact')\n      return navigate('/customer/contact')\n    } else if (name === 'Aktivitat') {\n      localStorage.setItem('tabId', 'activity')\n      return navigate('/customer/activity')\n    } else if (name === 'Dokumente') {\n      localStorage.setItem('tabId', 'document')\n      return navigate('/customer/document')\n    } else if (name === 'Vollmachten') {\n      localStorage.setItem('tabId', 'attorney')\n      return navigate('/customer/attorney')\n    } else if (name === 'HVD-PV') {\n      localStorage.setItem('tabId', 'services')\n      return navigate('/customer/services')\n    } else if (name === 'Rechnung') {\n      localStorage.setItem('tabId', 'bills')\n      return navigate('/customer/bills')\n    }\n  }\n  useEffect(() => {\n    handleTabClick()\n  }, [activeTab])\n\n  let customer = localStorage.getItem('customerRecord')\n  let res = JSON.parse(customer)\n  const dateString = customerInfo?.customer?.startDate\n  const date = new Date(dateString)\n  const utcDate = new Date(date.getTime() + date.getTimezoneOffset() * 60000)\n\n  const options = { year: 'numeric', month: '2-digit', day: '2-digit' }\n  const formattedDate = utcDate.toLocaleDateString('en-IN', options).replace(/\\//g, '.')\n\n  console.log(formattedDate)\n\n  const firstName = res?.fname?.slice(0, 1).toUpperCase() + res?.fname?.slice(1).toLowerCase()\n  const lastName = res?.lname?.slice(0, 1).toUpperCase() + res?.lname?.slice(1).toLowerCase()\n  let street =\n    res?.street?.slice(0, 1).toUpperCase() +\n    res?.street?.slice(1).toLowerCase() +\n    ',  ' +\n    '  ' +\n    res?.plz +\n    '  ' +\n    res?.city\n  // console.log('customerPage', res)\n  const getRecordById = async () => {\n    const response = await fetch(`${apiUrl}/customer/get_record/${resultt?._id}`)\n    const updatedData = await response.json()\n    console.log('data', updatedData)\n    setCustomerInfo(updatedData)\n  }\n  console.log('first', customerInfo)\n  useEffect(() => {\n    getRecordById()\n  }, [updateData])\n  return (\n    <>\n      <div className=\"whiteBox\">\n        <div className=\"blueBoxTop\">\n          <div className=\"container-fluid\">\n            <div className=\"row d-flex align-items-center\">\n              <div className=\"col-md-4\">\n                {/* <p style={{ color: 'white', marginTop: '5px' }}>KlientInnen: {res.fname}</p>\n              <ImLocation2 style={{ color: 'white' }} />\n              <span style={{ color: 'white' }}>{res.street}</span> */}\n                <h3>KlientInnen: {`${firstName} ${lastName}`}</h3>\n\n                <address>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"22\"\n                    height=\"22\"\n                    viewBox=\"0 0 22 22\"\n                    fill=\"none\"\n                  >\n                    <g clipPath=\"url(#clip0_207_8532)\">\n                      <path\n                        d=\"M16.817 8.89543C16.817 5.62623 14.1646 2.97386 10.8954 2.97386C7.62623 2.97386 4.97386 5.62623 4.97386 8.89543C4.97386 9.40534 5.15891 10.1949 5.60303 11.2476C6.03481 12.2674 6.64753 13.3942 7.35071 14.5333C8.52269 16.4331 9.87972 18.2671 10.8954 19.5748C11.9153 18.2671 13.2723 16.4331 14.4402 14.5333C15.1433 13.3942 15.7561 12.2674 16.1878 11.2476C16.632 10.1949 16.817 9.40534 16.817 8.89543ZM18.7909 8.89543C18.7909 12.4895 13.9796 18.8881 11.87 21.5281C11.3642 22.1573 10.4266 22.1573 9.92084 21.5281C7.81128 18.8881 3 12.4895 3 8.89543C3 4.5365 6.5365 1 10.8954 1C15.2544 1 18.7909 4.5365 18.7909 8.89543ZM12.2113 8.89543C12.2113 8.54643 12.0727 8.21173 11.8259 7.96495C11.5791 7.71817 11.2444 7.57953 10.8954 7.57953C10.5464 7.57953 10.2117 7.71817 9.96495 7.96495C9.71817 8.21173 9.57953 8.54643 9.57953 8.89543C9.57953 9.24443 9.71817 9.57914 9.96495 9.82592C10.2117 10.0727 10.5464 10.2113 10.8954 10.2113C11.2444 10.2113 11.5791 10.0727 11.8259 9.82592C12.0727 9.57914 12.2113 9.24443 12.2113 8.89543ZM7.60567 8.89543C7.60567 8.02293 7.95227 7.18617 8.56922 6.56922C9.18617 5.95227 10.0229 5.60567 10.8954 5.60567C11.7679 5.60567 12.6047 5.95227 13.2216 6.56922C13.8386 7.18617 14.1852 8.02293 14.1852 8.89543C14.1852 9.76793 13.8386 10.6047 13.2216 11.2216C12.6047 11.8386 11.7679 12.1852 10.8954 12.1852C10.0229 12.1852 9.18617 11.8386 8.56922 11.2216C7.95227 10.6047 7.60567 9.76793 7.60567 8.89543Z\"\n                        fill=\"white\"\n                      />\n                    </g>\n                    <defs>\n                      <clipPath id=\"clip0_207_8532\">\n                        <rect width=\"22\" height=\"22\" fill=\"white\" />\n                      </clipPath>\n                    </defs>\n                  </svg>\n                  <span>{street}</span>\n                </address>\n              </div>\n              <div\n                className=\"col-md-8 text-md-end\"\n                // style={{ color: 'white', border: '1px solid white' }}\n              >\n                <div className=\"d-flex justify-content-md-end justify-content-between\">\n                  <button className=\"btn btn me-4 header-button\">\n                    {/* <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"20\"\n                      height=\"15\"\n                      viewBox=\"0 0 20 15\"\n                      fill=\"#fff\"\n                    >\n                      <g clipPath=\"url(#clip0_60_2870)\">\n                        <path\n                          d=\"M2.5 1.875C2.15625 1.875 1.875 2.15625 1.875 2.5V3.36328L8.61328 8.89453C9.42188 9.55859 10.582 9.55859 11.3906 8.89453L18.125 3.36328V2.5C18.125 2.15625 17.8438 1.875 17.5 1.875H2.5ZM1.875 5.78906V12.5C1.875 12.8438 2.15625 13.125 2.5 13.125H17.5C17.8438 13.125 18.125 12.8438 18.125 12.5V5.78906L12.5781 10.3438C11.0781 11.5742 8.91797 11.5742 7.42188 10.3438L1.875 5.78906ZM0 2.5C0 1.12109 1.12109 0 2.5 0H17.5C18.8789 0 20 1.12109 20 2.5V12.5C20 13.8789 18.8789 15 17.5 15H2.5C1.12109 15 0 13.8789 0 12.5V2.5Z\"\n                          fill=\"#fff\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_60_2870\">\n                          <rect width=\"20\" height=\"15\" fill=\"white\" />\n                        </clipPath>\n                      </defs>\n                    </svg> */}\n                    <span> {formattedDate}</span>\n                  </button>\n                  <button className=\"btn btn me-4 header-button\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"20\"\n                      height=\"15\"\n                      viewBox=\"0 0 20 15\"\n                      fill=\"#fff\"\n                    >\n                      <g clipPath=\"url(#clip0_60_2870)\">\n                        <path\n                          d=\"M2.5 1.875C2.15625 1.875 1.875 2.15625 1.875 2.5V3.36328L8.61328 8.89453C9.42188 9.55859 10.582 9.55859 11.3906 8.89453L18.125 3.36328V2.5C18.125 2.15625 17.8438 1.875 17.5 1.875H2.5ZM1.875 5.78906V12.5C1.875 12.8438 2.15625 13.125 2.5 13.125H17.5C17.8438 13.125 18.125 12.8438 18.125 12.5V5.78906L12.5781 10.3438C11.0781 11.5742 8.91797 11.5742 7.42188 10.3438L1.875 5.78906ZM0 2.5C0 1.12109 1.12109 0 2.5 0H17.5C18.8789 0 20 1.12109 20 2.5V12.5C20 13.8789 18.8789 15 17.5 15H2.5C1.12109 15 0 13.8789 0 12.5V2.5Z\"\n                          fill=\"#fff\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_60_2870\">\n                          <rect width=\"20\" height=\"15\" fill=\"white\" />\n                        </clipPath>\n                      </defs>\n                    </svg>\n                    <span> {res?.email}</span>\n                  </button>\n                  <button className=\"btn btn header-button\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22\"\n                      height=\"22\"\n                      viewBox=\"0 0 22 22\"\n                      fill=\"none\"\n                    >\n                      <g clipPath=\"url(#clip0_207_8539)\">\n                        <path\n                          d=\"M14.01 11.0623C13.5295 10.8573 12.9729 10.992 12.6418 11.3963L11.6691 12.5858C10.3214 11.8036 9.19642 10.6786 8.41418 9.33086L9.60073 8.36112C10.005 8.03005 10.1427 7.4734 9.93472 6.99292L8.52844 3.7116C8.30871 3.19596 7.75499 2.90885 7.20712 3.02604L3.9258 3.72918C3.38673 3.84344 3 4.32099 3 4.87471C3 11.6483 8.13293 17.2265 14.7219 17.9268C15.0091 17.9561 15.2962 17.9795 15.5891 17.9912H15.5921C15.7708 17.9971 15.9466 18.0029 16.1253 18.0029C16.679 18.0029 17.1566 17.6162 17.2708 17.0771L17.974 13.7958C18.0912 13.2479 17.804 12.6942 17.2884 12.4745L14.0071 11.0682L14.01 11.0623ZM15.9349 16.5937C9.61538 16.4912 4.50882 11.3846 4.40921 5.06515L7.31552 4.44111L8.57532 7.38258L7.52354 8.24393C6.99032 8.68046 6.85262 9.43927 7.19833 10.0369C8.10363 11.5985 9.40444 12.8993 10.966 13.8046C11.5637 14.1503 12.3225 14.0126 12.759 13.4794L13.6203 12.4276L16.5618 13.6874L15.9349 16.5937Z\"\n                          fill=\"white\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_207_8539\">\n                          <rect width=\"22\" height=\"22\" fill=\"white\" />\n                        </clipPath>\n                      </defs>\n                    </svg>\n                    <span>{res?.phone}</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"whiteBoxWithPdLR\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <nav>\n                  <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                    <button\n                      className={`nav-link ${activeTab === 'customer_info' ? 'active' : ''}`}\n                      id=\"customer_info-tab\"\n                      data-bs-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-selected={activeTab === 'customer_info'}\n                      onClick={(e) => handleTabClick('customer_info', 'KlientInnen', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_91_3542)\">\n                          <path d=\"M12 3.875C14.1549 3.875 16.2215 4.73102 17.7452 6.25476C19.269 7.77849 20.125 9.84512 20.125 12C20.125 14.1549 19.269 16.2215 17.7452 17.7452C16.2215 19.269 14.1549 20.125 12 20.125C9.84512 20.125 7.77849 19.269 6.25476 17.7452C4.73102 16.2215 3.875 14.1549 3.875 12C3.875 9.84512 4.73102 7.77849 6.25476 6.25476C7.77849 4.73102 9.84512 3.875 12 3.875ZM12 22C14.6522 22 17.1957 20.9464 19.0711 19.0711C20.9464 17.1957 22 14.6522 22 12C22 9.34784 20.9464 6.8043 19.0711 4.92893C17.1957 3.05357 14.6522 2 12 2C9.34784 2 6.8043 3.05357 4.92893 4.92893C3.05357 6.8043 2 9.34784 2 12C2 14.6522 3.05357 17.1957 4.92893 19.0711C6.8043 20.9464 9.34784 22 12 22ZM10.4375 15.125C9.91797 15.125 9.5 15.543 9.5 16.0625C9.5 16.582 9.91797 17 10.4375 17H13.5625C14.082 17 14.5 16.582 14.5 16.0625C14.5 15.543 14.082 15.125 13.5625 15.125H13.25V11.6875C13.25 11.168 12.832 10.75 12.3125 10.75H10.4375C9.91797 10.75 9.5 11.168 9.5 11.6875C9.5 12.207 9.91797 12.625 10.4375 12.625H11.375V15.125H10.4375ZM12 9.5C12.3315 9.5 12.6495 9.3683 12.8839 9.13388C13.1183 8.89946 13.25 8.58152 13.25 8.25C13.25 7.91848 13.1183 7.60054 12.8839 7.36612C12.6495 7.1317 12.3315 7 12 7C11.6685 7 11.3505 7.1317 11.1161 7.36612C10.8817 7.60054 10.75 7.91848 10.75 8.25C10.75 8.58152 10.8817 8.89946 11.1161 9.13388C11.3505 9.3683 11.6685 9.5 12 9.5Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_91_3542\">\n                            <rect width=\"24\" height=\"24\" fill=\"white\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> KlientInnen </span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'contact' ? 'active' : ''}`}\n                      id=\"contact-tab\"\n                      data-bs-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-controls=\"contact\"\n                      aria-selected={activeTab === 'contact'}\n                      onClick={(e) => handleTabClick('contact', 'Kontakte', e)}\n                    >\n                      {' '}\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_431_39097)\">\n                          <path d=\"M13.917 3C14.192 3 14.417 3.225 14.417 3.5V15.5C14.417 15.775 14.192 16 13.917 16H4.91699C4.64199 16 4.41699 15.775 4.41699 15.5V3.5C4.41699 3.225 4.64199 3 4.91699 3H13.917ZM4.91699 1.5C3.81387 1.5 2.91699 2.39688 2.91699 3.5V15.5C2.91699 16.6031 3.81387 17.5 4.91699 17.5H13.917C15.0201 17.5 15.917 16.6031 15.917 15.5V3.5C15.917 2.39688 15.0201 1.5 13.917 1.5H4.91699ZM9.41699 9.5C9.94742 9.5 10.4561 9.28929 10.8312 8.91421C11.2063 8.53914 11.417 8.03043 11.417 7.5C11.417 6.96957 11.2063 6.46086 10.8312 6.08579C10.4561 5.71071 9.94742 5.5 9.41699 5.5C8.88656 5.5 8.37785 5.71071 8.00278 6.08579C7.62771 6.46086 7.41699 6.96957 7.41699 7.5C7.41699 8.03043 7.62771 8.53914 8.00278 8.91421C8.37785 9.28929 8.88656 9.5 9.41699 9.5ZM8.41699 10.5C7.03574 10.5 5.91699 11.6188 5.91699 13C5.91699 13.275 6.14199 13.5 6.41699 13.5H12.417C12.692 13.5 12.917 13.275 12.917 13C12.917 11.6188 11.7982 10.5 10.417 10.5H8.41699ZM17.917 4C17.917 3.725 17.692 3.5 17.417 3.5C17.142 3.5 16.917 3.725 16.917 4V6C16.917 6.275 17.142 6.5 17.417 6.5C17.692 6.5 17.917 6.275 17.917 6V4ZM17.417 7.5C17.142 7.5 16.917 7.725 16.917 8V10C16.917 10.275 17.142 10.5 17.417 10.5C17.692 10.5 17.917 10.275 17.917 10V8C17.917 7.725 17.692 7.5 17.417 7.5ZM17.917 12C17.917 11.725 17.692 11.5 17.417 11.5C17.142 11.5 16.917 11.725 16.917 12V14C16.917 14.275 17.142 14.5 17.417 14.5C17.692 14.5 17.917 14.275 17.917 14V12Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_431_39097\">\n                            <rect\n                              width=\"18\"\n                              height=\"18\"\n                              fill=\"white\"\n                              transform=\"translate(0.666992)\"\n                            />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Kontakte</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'activity' ? 'active' : ''}`}\n                      id=\"activity-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#activity\"\n                      role=\"tab\"\n                      aria-controls=\"activity\"\n                      aria-selected={activeTab === 'activity'}\n                      onClick={(e) => handleTabClick('activity', 'Aktivitat', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8581)\">\n                          <path d=\"M9.48594 3.00021C9.74609 2.99317 9.97813 3.16661 10.0438 3.41974L11.9023 10.5424L12.5375 9.19005C12.7531 8.73067 13.2172 8.43536 13.7258 8.43536H16.4375C16.7492 8.43536 17 8.68614 17 8.99786C17 9.30958 16.7492 9.56036 16.4375 9.56036H13.7258C13.6531 9.56036 13.5875 9.60255 13.557 9.66817L12.2586 12.4268C12.1578 12.64 11.9328 12.769 11.6984 12.7479C11.4641 12.7268 11.2648 12.558 11.2062 12.3307L9.56328 6.03302L7.80078 14.5525C7.74922 14.808 7.52891 14.9932 7.26875 15.0002C7.00859 15.0072 6.77656 14.8385 6.70859 14.5877L5.35859 9.70099C5.33516 9.61896 5.2625 9.56271 5.17813 9.56271H2.5625C2.25078 9.56271 2 9.31192 2 9.00021C2 8.68849 2.25078 8.43771 2.5625 8.43771H5.17813C5.76875 8.43771 6.28672 8.83146 6.44375 9.40099L7.17031 12.0401L8.94922 3.44786C9.00313 3.19239 9.22344 3.00724 9.48594 3.00021Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8581\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.5)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Aktivitat</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'document' ? 'active' : ''}`}\n                      id=\"document-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#document\"\n                      role=\"tab\"\n                      aria-controls=\"document\"\n                      aria-selected={activeTab === 'document'}\n                      onClick={(e) => handleTabClick('document', 'Dokumente', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8589)\">\n                          <path d=\"M13.125 15.0938C13.3828 15.0938 13.5938 14.8828 13.5938 14.625V6.1875H11.25C10.7314 6.1875 10.3125 5.76855 10.3125 5.25V2.90625H5.625C5.36719 2.90625 5.15625 3.11719 5.15625 3.375V14.625C5.15625 14.8828 5.36719 15.0938 5.625 15.0938H13.125ZM3.75 3.375C3.75 2.34082 4.59082 1.5 5.625 1.5H10.4736C10.9717 1.5 11.4492 1.69629 11.8008 2.04785L14.4521 4.69922C14.8037 5.05078 15 5.52832 15 6.02637V14.625C15 15.6592 14.1592 16.5 13.125 16.5H5.625C4.59082 16.5 3.75 15.6592 3.75 14.625V3.375Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8589\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.75)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Dokumente</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'attorney' ? 'active' : ''}`}\n                      id=\"attorney-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#attorney\"\n                      role=\"tab\"\n                      aria-controls=\"attorney\"\n                      aria-selected={activeTab === 'attorney'}\n                      onClick={(e) => handleTabClick('attorney', 'Vollmachten', e)}\n                    >\n                      <i className=\"fa-solid fa-paint-roller fa-fw\"></i>\n                      Vollmachten\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'services' ? 'active' : ''}`}\n                      id=\"services-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#services\"\n                      role=\"tab\"\n                      aria-controls=\"services\"\n                      aria-selected={activeTab === 'services'}\n                      onClick={(e) => handleTabClick('services', 'HVD-PV', e)}\n                    >\n                      {' '}\n                      <i className=\"fa-regular fa-lightbulb fa-fw\"></i>\n                      HVD-PV\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'bills' ? 'active' : ''}`}\n                      id=\"bills-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#bills\"\n                      role=\"tab\"\n                      aria-controls=\"bills\"\n                      aria-selected={activeTab === 'bills'}\n                      onClick={(e) => handleTabClick('bills', 'Rechnung', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8565)\">\n                          <path d=\"M5.125 15.0938H12.625C12.8828 15.0938 13.0938 14.8828 13.0938 14.625V6.1875H10.75C10.2314 6.1875 9.8125 5.76855 9.8125 5.25V2.90625H5.125C4.86719 2.90625 4.65625 3.11719 4.65625 3.375V14.625C4.65625 14.8828 4.86719 15.0938 5.125 15.0938ZM3.25 3.375C3.25 2.34082 4.09082 1.5 5.125 1.5H9.97363C10.4717 1.5 10.9492 1.69629 11.3008 2.04785L13.9521 4.69922C14.3037 5.05078 14.5 5.52832 14.5 6.02637V14.625C14.5 15.6592 13.6592 16.5 12.625 16.5H5.125C4.09082 16.5 3.25 15.6592 3.25 14.625V3.375ZM5.59375 4.78125C5.59375 4.52344 5.80469 4.3125 6.0625 4.3125H8.40625C8.66406 4.3125 8.875 4.52344 8.875 4.78125C8.875 5.03906 8.66406 5.25 8.40625 5.25H6.0625C5.80469 5.25 5.59375 5.03906 5.59375 4.78125ZM5.59375 6.65625C5.59375 6.39844 5.80469 6.1875 6.0625 6.1875H8.40625C8.66406 6.1875 8.875 6.39844 8.875 6.65625C8.875 6.91406 8.66406 7.125 8.40625 7.125H6.0625C5.80469 7.125 5.59375 6.91406 5.59375 6.65625ZM8.875 13.2188C8.875 12.9609 9.08594 12.75 9.34375 12.75H11.6875C11.9453 12.75 12.1562 12.9609 12.1562 13.2188C12.1562 13.4766 11.9453 13.6875 11.6875 13.6875H9.34375C9.08594 13.6875 8.875 13.4766 8.875 13.2188ZM6.53125 8.0625H11.2188C11.7373 8.0625 12.1562 8.48145 12.1562 9V10.875C12.1562 11.3936 11.7373 11.8125 11.2188 11.8125H6.53125C6.0127 11.8125 5.59375 11.3936 5.59375 10.875V9C5.59375 8.48145 6.0127 8.0625 6.53125 8.0625Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8565\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.25)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Rechnung </span>\n                    </button>\n                  </div>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Customer)\n","// import React, { useState } from 'react'\n// import DatePicker from 'react-datepicker'\n\n// import 'react-datepicker/dist/react-datepicker.css'\n\n// // CSS Modules, react-datepicker-cssmodules.css\n// // import 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\n// export default const Date = () => {\n//   const [startDate, setStartDate] = useState(new Date())\n//   return <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n// }\n\nimport React, { useState, useEffect } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport PropTypes from 'prop-types'\n\nconst DatePiker = ({ onChange, selected }) => {\n  DatePiker.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    selected: PropTypes.func.isRequired,\n  }\n  // const [startDate, setStartDate] = useState(null)\n\n  useEffect(() => {\n    // setStartDate(new Date())\n  }, []) // Empty dependency array ensures this effect runs only once\n\n  return (\n    <div>\n      <DatePicker\n        className=\"form-control form-search-control w-101\"\n        placeholderText=\"Geburtsdatum\"\n        selected={selected}\n        onChange={onChange}\n        dateFormat=\"dd.MM.yyyy\"\n      />\n    </div>\n  )\n}\n\nexport default DatePiker\n","import React, { useEffect, useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Customer from '../Customer'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport DatePiker from '../Date'\nimport Select, { components } from 'react-select'\nimport PropTypes from 'prop-types'\nimport { MultiSelect } from 'primereact/multiselect'\nimport 'primereact/resources/themes/saga-blue/theme.css'\nimport 'primereact/resources/primereact.min.css'\n// import 'primeicons/primeicons.css'\nimport CreatableSelect from 'react-select/creatable'\nimport axios from 'axios'\n\nconst CheckboxOption = (props) => (\n  <div>\n    <components.Option {...props}>\n      <input\n        type=\"checkbox\"\n        checked={props.isSelected}\n        onChange={() => null} // Prevent onChange errors\n        style={{ marginRight: '10px' }}\n      />\n      {props.label}\n    </components.Option>\n  </div>\n)\n\nCheckboxOption.propTypes = {\n  // Define prop types\n  isSelected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n}\n\nconst CustomerInfo = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [page, setPage] = useState(1)\n  const [updateData, setUpdateData] = useState(false)\n  const [itemsPerPage, setItemsPerPage] = useState('')\n  const [customerInfo, setCustomerInfo] = useState({})\n  console.log('ashcustomer', customerInfo)\n  let ress = localStorage.getItem('customerRecord')\n  // console.log(ress)\n  let resultt = JSON.parse(ress)\n  // console.log('aast', resultt)\n  const [orderingMaterials, setOrderingMaterials] = useState({\n    orderNumber: '',\n    newsletterDate: '',\n    extras: '',\n    newsletterSubscription: '',\n  })\n  // console.log('orderDate', resultt?.orderingMaterials?.newsletterDate)\n\n  const [customerInfoStatu, setCustomerInfoStatu] = useState({\n    // clientStatus: resultt?.customerInfoStatu?.clientStatus,\n    dataProtection: '',\n    employee: '',\n    // dataCollection: resultt?.customerInfoStatu?.dataCollection,\n  })\n  // console.log('first', resultt?.customerInfoStatu)\n  const [clientStatus, setClientStatus] = useState(resultt?.status)\n  // console.log('status', resultt?.status)\n  const cities = [\n    { name: 'HVD-PV', code: '0' },\n    { name: 'SPV-alt', code: '1' },\n    { name: 'OPV-alt', code: '2' },\n    { name: 'DauerspenderInnen', code: '3' },\n    { name: 'Materialbestellung', code: '4' },\n    { name: 'Newsletter-Abonnent', code: '5' },\n    { name: 'Offen', code: '6' },\n  ]\n  // const [those, setThose] = useState(resultt?.those)\n  // console.log('those', resultt?.those)\n  const [those, setThose] = useState('')\n  const handleSelectChange = (selectedOption) => {\n    setThose(selectedOption)\n    // console.log(selectedOption)\n  }\n  // console.log('those', those?.value)\n  // console.log('those', resultt?.those)\n  const [customerContact, setCustomerContact] = useState({\n    title: '',\n    salution: '',\n    gender: '',\n    fname: '',\n    lname: '',\n    startDate: '',\n  })\n\n  const [customerBills, setCustomerBills] = useState({\n    billAddress: '',\n    billPlz: '',\n    billLand: '',\n    billOrt: '',\n  })\n  const [email, setEmail] = useState('')\n  const [dataCollection, setDataCollection] = useState('')\n  // dataCollection: resultt?.customerInfoStatu?.dataCollection,\n  const [customerDelivery, setCustomerDelivery] = useState({\n    fname: '',\n    lname: '',\n    address: '',\n    plz: '',\n    land: '',\n    ort: '',\n    phone: '',\n    mobile: '',\n    alreadyPaid: '',\n  })\n  const [customerStartDeposit, setCustomerStartDeposit] = useState('')\n  const [customerNextBrand, setCustomerNextBrand] = useState('')\n  const [customerUpdateStamp, setCustomerUpdateStamp] = useState('')\n  const [customerLastStamp, setCustomerLastStamp] = useState('')\n  const [customerReminderStamp, setCustomerReminderStamp] = useState('')\n  // const [customerDepositeCheckbox, setCustomerDepositeCheckbox] = useState(\n  //   Boolean(resultt?.customerDeposit?.deposit),\n  // )\n  const [customerEmergencyPass, setCustomerEmergencyPass] = useState('')\n  const [customerBurial, setCustomerBurial] = useState({\n    termination: '',\n    terminationDeath: '',\n    notTermination: '',\n    financialReasons: '',\n  })\n  const [getCustomerData, setGetCustomerData] = useState({})\n  const [employeeData, setEmployeeData] = useState([])\n  console.log('customerInfo?.customer?.fname', customerInfo?.customer?.fname)\n  console.log('customerInfo?.customerContact?.fname', customerInfo?.customerContact?.fname)\n  let customer = {\n    fname: customerContact?.fname || resultt?.fname,\n    lname: customerContact?.lname || resultt?.lname,\n    email: customerInfo?.customer?.email,\n    phone: customerInfo?.customerDelivery?.phone || customerInfo?.customer?.phone,\n    plz: customerInfo?.customerDelivery?.plz || customerInfo?.customer?.plz,\n    startDate: customerContact?.startDate || customerInfo?.customer?.startDate,\n    status: clientStatus || customerInfo?.customer?.status,\n    land: customerInfo?.customerDelivery?.land || customerInfo?.customer?.land,\n    id: customerInfo?.id,\n    street: customerInfo?.customerInfo?.customer?.street,\n    city: customerInfo?.customerInfo?.customer?.city,\n    those: customerInfo?.those,\n    created_by: customerInfo?.created_by,\n  }\n\n  const matarialChange = (e) => {\n    if (e instanceof Date) {\n      // const formattedDate = `${('0' + e.getDate()).slice(-2)}.${('0' + (e.getMonth() + 1)).slice(\n      //   -2,\n      // )}.${e.getFullYear().toString().slice(-2)}`\n      setOrderingMaterials({ ...orderingMaterials, newsletterDate: e })\n    } else if (e.target) {\n      const { name, value } = e.target\n      if (name === 'newsletterDate') {\n        setOrderingMaterials({ ...orderingMaterials, newsletterDate: value })\n      } else {\n        setOrderingMaterials({ ...orderingMaterials, [name]: value })\n      }\n    } else {\n      console.error('Invalid event or data provided to matarialChange.')\n    }\n  }\n\n  const Quelle = [\n    { value: 'order', label: 'Auftrag (Online-Maske) ' },\n    { value: 'contact form', label: 'Kontaktformular' },\n    { value: 'order print', label: 'Auftrag / Print' },\n    { value: 'website', label: 'Webseite' },\n    { value: 'e-mail', label: 'E-Mail' },\n    { value: 'call', label: 'Anruf' },\n    { value: 'letter', label: 'Zuschrift (Post)' },\n    { value: 'HVD regional association', label: 'HVD-Landesverband' },\n    { value: 'Regional association MOL', label: 'Regionalverband MOL' },\n    { value: 'Northern Regional Association', label: 'Regionalverband NORD' },\n    { value: 'Regional association', label: 'Regionalverband Potsdam' },\n    { value: 'inter', label: 'intern' },\n    { value: 'anderes', label: 'anderes' },\n  ]\n  const Anrede = [\n    { value: 'herr', label: 'Herr' },\n    { value: 'frau', label: 'Frau' },\n    { value: 'divers', label: 'Divers' },\n  ]\n  const customerInfoChange = (e) => {\n    if (e instanceof Date) {\n      setCustomerInfoStatu({ ...customerInfoStatu, dataCollection: e })\n    } else if (e.target) {\n      const { name, value, checked, type } = e.target\n\n      if (name === 'dataCollection') {\n        setCustomerInfoStatu({ ...customerInfoStatu, [name]: value })\n      } else {\n        setCustomerInfoStatu({\n          ...customerInfoStatu,\n          [name]: type === 'checkbox' ? checked : value,\n        })\n      }\n    } else if (e.value !== undefined) {\n      setCustomerInfoStatu({ ...customerInfoStatu, employee: e.value })\n    } else {\n      console.error('Invalid event or data provided to customerInfoChange.')\n    }\n  }\n\n  const ContactChange = (e) => {\n    if (e instanceof Date) {\n      let a = new Date().getFullYear()\n      if (e.getFullYear() > a) {\n        toast.warning('Das Datum sollte das aktuelle Jahr nicht überschreiten')\n      }\n      // setStartDate(e)\n      setCustomerContact({ ...customerContact, startDate: e })\n    } else if (e.target) {\n      const { name, value, type, checked } = e.target\n\n      if (type === 'radio') {\n        const newValue = checked ? value : ''\n        setCustomerContact({ ...customerContact, [name]: newValue })\n      } else {\n        setCustomerContact({ ...customerContact, [name]: type === 'checkbox' ? checked : value })\n      }\n    } else if (e.value !== undefined) {\n      setCustomerContact({ ...customerContact, salution: e.value })\n    } else {\n      console.error('Invalid event or data provided to ContactChange.')\n    }\n  }\n\n  const BillChange = (e) => {\n    const { name, value } = e.target\n    setCustomerBills({ ...customerBills, [name]: value })\n  }\n  const DepositChange = (e, fieldName) => {\n    setCustomerStartDeposit(e)\n  }\n  const nextBrandChange = (e) => {\n    setCustomerNextBrand(e)\n  }\n\n  const updateStamp = (e) => {\n    setCustomerUpdateStamp(e)\n  }\n\n  const lastStamp = (e) => {\n    setCustomerLastStamp(e)\n  }\n\n  const reminderStamp = (e) => {\n    setCustomerReminderStamp(e)\n  }\n\n  // const deposite = (e) => {\n  //   setCustomerDepositeCheckbox(e.target.checked)\n  // }\n\n  const emergencyPass = (e) => {\n    setCustomerEmergencyPass(e.target.checked)\n  }\n\n  const customerDepositt = {\n    startDeposit: customerStartDeposit,\n    nextBrand: customerNextBrand,\n    updateStamp: customerUpdateStamp,\n    lastStamp: customerLastStamp,\n    reminderStamp: customerReminderStamp,\n    // deposit: customerDepositeCheckbox,\n    emergencyPass: customerEmergencyPass,\n  }\n  const DeliveryChange = (e) => {\n    const { name, value, type, checked } = e.target\n    setCustomerDelivery({ ...customerDelivery, [name]: type === 'checkbox' ? checked : value })\n  }\n\n  const BurialChange = (e) => {\n    const { name, checked } = e.target\n    setCustomerBurial({ ...customerBurial, [name]: checked })\n  }\n\n  const handleEmailChange = (e) => {\n    const inputValue = e.target.value\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n\n    if (emailRegex.test(inputValue.toLowerCase())) {\n      setEmail(inputValue)\n    }\n  }\n\n  const customerInfoChangeMulti = (selectedOptions, actionMeta) => {\n    const name = actionMeta && actionMeta.name\n\n    if (name) {\n      const value =\n        selectedOptions && selectedOptions.value !== undefined\n          ? selectedOptions.value\n          : selectedOptions\n\n      setCustomerInfoStatu((prevCustomerInfoStatu) => ({\n        ...prevCustomerInfoStatu,\n        [name]: value,\n      }))\n    }\n  }\n  const [selectedOptions, setSelectedOptions] = useState([])\n  // console.log('hkdfgdfg', selectedOptions)\n  const handleChange = (selectedOptions) => {\n    setSelectedOptions(selectedOptions)\n  }\n  const getDetails = async () => {\n    try {\n      const results = await fetch(`${apiUrl}/customer/get_record?email=${location?.state?.email}`)\n      const data = await results.json()\n      setGetCustomerData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  const getEmployeeData = async () => {\n    try {\n      const results = await fetch(`${apiUrl}/user/get/employeeData`)\n      const data = await results.json()\n      setEmployeeData(data?.data)\n      // console.log(\"ashishemploye\", data?.data)\n      // setGetCustomerData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n\n  const getRecordById = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/customer/get_record/${resultt?._id}`)\n      console.log('data', response)\n      setCustomerInfo(response?.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  // console.log('aastha type', customerDepositt.emergencyPass)\n  let customerInfoStatuData = { ...customerInfoStatu, clientStatus, dataCollection }\n  // console.log('ashishclient', customerInfoStatuData)\n  const data = {\n    customer: customer,\n    orderingMaterials: orderingMaterials,\n    customerInfoStatu: customerInfoStatuData,\n    // those: those,\n    // customerInfoStatu: customerInfoStatu,\n    those: those,\n    customerContact: customerContact,\n    customerBills: customerBills,\n    customerDelivery: customerDelivery,\n    customerDeposit: customerDepositt,\n    customerBurial: customerBurial,\n    // created_by: '',\n    // customer_id: result._id,\n  }\n  // const saveData = async (e) => {\n  //   e.preventDefault()\n  //   if (clientStatus?.length === 0) {\n  //     return toast.warning('Das Statusfeld ist erforderlich')\n  //   }\n  //   try {\n  //     let response = await fetch(`${apiUrl}/customer/get_record/edit/${resultt?._id}`, {\n  //       method: 'put',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(data),\n  //     })\n\n  //     let result = await response.json()\n  //     if (result?.message === 'Customer updated successfully') {\n  //       toast.success('Kundeninfo erfolgreich gespeichert')\n  //       getDetails()\n  //     }\n\n  //     // Show success toast\n  //   } catch (error) {\n  //     console.log('Error saving data:', error)\n\n  //     // Show error toast\n  //     toast.error('Fehler beim Speichern der Daten. Bitte versuche es erneut.')\n  //   }\n  // }\n  const saveData = async (e) => {\n    e.preventDefault()\n    if (clientStatus?.length === 0) {\n      return toast.warning('Das Statusfeld ist erforderlich')\n    }\n    try {\n      let response = await fetch(`${apiUrl}/customer/get_record/edit/${resultt?._id}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n\n      let result = await response.json()\n      console.log('first', result)\n      if (result?.message === 'Customer updated successfully') {\n        getRecordById()\n        toast.success('Kundeninfo erfolgreich gespeichert')\n        getDetails()\n        setUpdateData(!updateData)\n        // navigate('/customerlist')\n      }\n    } catch (error) {\n      console.log('Error saving data:', error)\n      toast.error('Fehler beim Speichern der Daten. Bitte versuche es erneut.')\n    }\n  }\n\n  const customerDateChange = (e) => {\n    let selectedDateObject = new Date(e)\n    let currentYear = new Date().getFullYear()\n\n    if (selectedDateObject.getFullYear() > currentYear) {\n      toast.warning('Das Datum sollte das aktuelle Jahr nicht überschreiten')\n      return\n    }\n\n    setDataCollection(e)\n  }\n\n  useEffect(() => {\n    getRecordById()\n    getDetails()\n    getEmployeeData()\n  }, [page, itemsPerPage])\n\n  const cancelData = () => {\n    navigate('/customerlist')\n  }\n\n  useEffect(() => {\n    setCustomerDelivery({\n      fname: customerInfo?.customerDelivery?.fname || customerInfo?.customer?.fname,\n      lname: customerInfo?.customerDelivery?.lname || customerInfo?.customer?.lname,\n      address: customerInfo?.customerDelivery?.address || customerInfo?.customer?.street,\n      plz: customerInfo?.plz || customerInfo?.customer?.plz,\n      land: customerInfo?.land || customerInfo?.customer?.land,\n      ort: customerInfo?.customerDelivery?.ort || customerInfo?.customer?.street,\n      phone: customerInfo?.phone || customerInfo?.customer?.phone,\n      mobile: customerInfo?.customerDelivery?.mobile || customerInfo?.customer?.phone,\n      alreadyPaid: customerInfo?.customerDelivery?.alreadyPaid,\n    })\n    setOrderingMaterials({\n      orderNumber: customerInfo?.orderingMaterials?.orderNumber,\n      newsletterDate: customerInfo?.orderingMaterials?.newsletterDate,\n      extras: customerInfo?.orderingMaterials?.extras,\n      newsletterSubscription: customerInfo?.orderingMaterials?.newsletterSubscription,\n    })\n    setCustomerInfoStatu({\n      dataProtection: customerInfo?.customerInfoStatu?.dataProtection,\n      employee: customerInfo?.customerInfoStatu?.employee,\n    })\n    setDataCollection(customerInfo?.customerInfoStatu?.dataCollection)\n    // setClientStatus(customerInfo?.customer?.clientStatus)\n    setThose(customerInfo?.those)\n    setCustomerContact({\n      title: customerInfo?.customerContact?.title,\n      salution: customerInfo?.customerContact?.salution,\n      gender: customerInfo?.customerContact?.gender,\n      fname: customerInfo?.customerContact?.fname || resultt?.fname,\n      lname: customerInfo?.customerContact?.lname || resultt?.lname,\n      startDate: customerInfo?.customer?.startDate,\n    })\n    setCustomerBills({\n      billAddress: customerInfo?.customerBills?.billAddress || customerInfo?.customer?.street,\n      billPlz: customerInfo?.customerBills?.billPlz || customerInfo?.customer?.plz,\n      billLand: customerInfo?.customerBills?.billLand || customerInfo?.customer?.land,\n      billOrt: customerInfo?.customerBills?.billOrt || customerInfo?.customer?.city,\n    })\n    setCustomerEmergencyPass(customerInfo?.customerDeposit?.emergencyPass)\n    setCustomerStartDeposit(customerInfo?.customerDeposit?.startDeposit)\n    setCustomerNextBrand(customerInfo?.customerDeposit?.nextBrand)\n    setCustomerUpdateStamp(customerInfo?.customerDeposit?.updateStamp)\n    setCustomerReminderStamp(customerInfo?.customerDeposit?.reminderStamp)\n    setCustomerLastStamp(customerInfo?.customerDeposit?.lastStamp)\n    setCustomerBurial({\n      termination: customerInfo?.customerBurial?.termination,\n      terminationDeath: customerInfo?.customerBurial?.terminationDeath,\n      notTermination: customerInfo?.customerBurial?.notTermination,\n      financialReasons: customerInfo?.customerBurial?.financialReasons,\n    })\n    setThose(customerInfo?.those)\n    setClientStatus(customerInfo?.customer?.status)\n  }, [customerInfo])\n  // console.log('customerInfo?.customer?.status', customerInfo?.customer?.status)\n  return (\n    <div className=\"inner-page-wrap\">\n      <Customer getCustomerData={getCustomerData} updateData={updateData} />\n      <div className=\"tab-content px-3\">\n        <div className=\"tab-title\">\n          <h4>KlientInnen</h4>\n        </div>\n        <div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"block-wrap\">\n                <h3>Materialbestellung</h3>\n                {/* orderingMaterials start */}\n                <div className=\"row-wrap\">\n                  <div>\n                    <div className=\"row justify-content-between align-items-center\">\n                      <div className=\"col-md-3\">\n                        <div className=\"d-flex\">\n                          <label htmlFor=\"inputPassword\" className=\"col-sm-10 col-form-label\">\n                            Bestellte Anzahl Fragebögen\n                          </label>\n                          <input\n                            type=\"number\"\n                            value={orderingMaterials.orderNumber}\n                            name=\"orderNumber\"\n                            onChange={matarialChange}\n                            className=\"form-control\"\n                            // style={{ width: '70px' }}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-md-2\">\n                        <div className=\"d-flex\">\n                          <label htmlFor=\"inputPassword\" className=\"col-form-label\">\n                            Extras\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"extras\"\n                            value={orderingMaterials.extras}\n                            onChange={matarialChange}\n                            className=\"form-control w-100\"\n                            placeholder=\"Extras\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-md-3\">\n                        <div className=\"d-flex\">\n                          <label className=\"col-form-label\">Newsletter-Datum</label>\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={orderingMaterials.newsletterDate}\n                            onChange={matarialChange}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-4\">\n                        <div className=\"d-flex\">\n                          <label className=\"col-form-label\">Newsletter-Abonnement</label>\n                          <div className=\"d-flex\">\n                            <div className=\"radio-check-wrap\">\n                              <input\n                                type=\"radio\"\n                                name=\"newsletterSubscription\"\n                                value=\"active\"\n                                checked={orderingMaterials.newsletterSubscription === 'active'}\n                                onChange={matarialChange}\n                              />\n                              <span>Aktiv</span>\n                            </div>\n                            <div className=\"radio-check-wrap\">\n                              <input\n                                type=\"radio\"\n                                name=\"newsletterSubscription\"\n                                value=\"inactive\"\n                                checked={orderingMaterials.newsletterSubscription === 'inactive'}\n                                onChange={matarialChange}\n                              />\n                              <span>Inaktiv</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <h3>Status</h3>\n                <div className=\"border-bottom mb-3\">\n                  <div>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label className=\"col-sm-3 col-form-label\">Status</label>\n                          <div className=\"col-sm-6\">\n                            <MultiSelect\n                              placeholder=\"HVD-PV\"\n                              value={clientStatus}\n                              onChange={(e) => setClientStatus(e.value)}\n                              options={cities}\n                              isMulti\n                              maxSelectedValues={3}\n                              optionLabel=\"name\"\n                              className=\"w-100\"\n                              showSelectAll={false}\n                              // selectedItemTemplate={selectedItemTemplate}\n                              showCheckbox\n                              display=\"chip\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                            Zustimmung Datenschutz\n                          </label>\n                          <div className=\"col-sm-4 mt-2\">\n                            <div className=\"radio-check-wrap w-100 h-100\">\n                              <input\n                                type=\"checkbox\"\n                                name=\"dataProtection\"\n                                onChange={customerInfoChange}\n                                // checked={JSON.parse(customerInfoStatu.dataProtection)}\n                                checked={customerInfoStatu.dataProtection}\n                              />\n                              <span></span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label className=\"col-sm-3 col-form-label\">MitarbeiterInnen</label>\n                          <div className=\"col-sm-6\">\n                            <Select\n                              className=\"w-100\"\n                              placeholder=\"MitarbeiterInnen\"\n                              options={employeeData?.map((elem) => ({\n                                value: elem.username,\n                                label: elem.username,\n                              }))}\n                              onChange={customerInfoChange}\n                              value={{\n                                value: customerInfoStatu.employee || 'MitarbeiterInnen',\n                                label: customerInfoStatu.employee || 'MitarbeiterInnen',\n                              }}\n                              name=\"employee\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label htmlFor=\"inputDate\" className=\"col-sm-4 col-form-label\">\n                            Datenerfassung\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <DatePiker\n                              className=\"form-control\"\n                              selected={dataCollection}\n                              onChange={customerDateChange}\n                              // name=\"dataCollection\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* customerInfoStatu start */}\n\n                <h3>Quelle</h3>\n                <div className=\"row-wrap border-0 mb-0 pb-0\">\n                  <div>\n                    <div className=\"row\">\n                      <div className=\"col-sm-3 ps-0\">\n                        <div className=\"input-group px-2\">\n                          <Select\n                            className=\"w-100\"\n                            options={Quelle}\n                            onChange={handleSelectChange}\n                            value={those}\n                            name=\"those\"\n                            placeholder=\"Auswahl\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"block-wrap\">\n                <h3>Kontaktdaten</h3>\n                <div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Titel\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            value={customerContact.title}\n                            name=\"title\"\n                            onChange={ContactChange}\n                            className=\"form-control\"\n                            placeholder=\"Titel\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Geburtsdatum\n                        </label>\n                        <div className=\"col-sm-6\">\n                          {/* <input\n                            type=\"date\"\n                            value={customerContact.dob}\n                            name=\"dob\"\n                            onChange={ContactChange}\n                            className=\"form-control\"\n                            placeholder=\"10.10.23\"\n                            id=\"inputDate\"\n                          /> */}\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerContact.startDate}\n                            onChange={ContactChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row mb-3\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Anrede\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <Select\n                            className=\"w-100\"\n                            options={Anrede}\n                            onChange={ContactChange}\n                            value={Anrede.find(\n                              (option) => option.value === customerContact.salution,\n                            )} // Find the selected option\n                            name=\"salution\"\n                            placeholder=\"Anrede\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Geschlecht\n                        </label>\n                        <div className=\"col-sm-6 mt-2\">\n                          {/* <div className=\"d-flex\"> */}\n                          <div className=\"radio-wrap\">\n                            <div className=\"radio-input\">\n                              <input\n                                type=\"radio\"\n                                id=\"male\"\n                                value=\"male\"\n                                name=\"gender\"\n                                onChange={ContactChange}\n                                checked={customerContact.gender === 'male'}\n                              />\n                              <span>Männlich</span>\n                            </div>\n\n                            <div className=\"radio-input\">\n                              <input\n                                type=\"radio\"\n                                id=\"female\"\n                                value=\"female\"\n                                name=\"gender\"\n                                onChange={ContactChange}\n                                checked={customerContact.gender === 'female'}\n                              />\n                              <span>Weiblich</span>\n                            </div>\n                            <div className=\"radio-input\">\n                              <input\n                                type=\"radio\"\n                                id=\"divers\"\n                                value=\"other\"\n                                name=\"gender\"\n                                onChange={ContactChange}\n                                checked={customerContact.gender === 'other'}\n                              />\n                              <span>Divers</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Vornamen\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            placeholder=\"Vornamen\"\n                            value={customerContact.fname}\n                            name=\"fname\"\n                            onChange={ContactChange}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Name\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                            placeholder=\"Name\"\n                            name=\"lname\"\n                            onChange={ContactChange}\n                            value={customerContact.lname}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          E-Mail-Adresse\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"email\"\n                            disabled\n                            name=\"email\"\n                            placeholder=\"E-Mail-Adresse\"\n                            value={customer.email}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Telefon\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            // onChange={DeliveryChange}\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^0-9+]/g, '') // Allow only digits and the plus sign\n                              if (/^\\+?[0-9]*$/.test(inputValue)) {\n                                DeliveryChange({ target: { name: 'phone', value: inputValue } })\n                              }\n                            }}\n                            name=\"phone\"\n                            value={customerDelivery?.phone}\n                            className=\"form-control\"\n                            type=\"tel\"\n                            placeholder=\"Telefon\"\n                            id=\"inputTelephone\"\n                            maxLength={30}\n                            minLength={3}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Mobil\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            // onChange={DeliveryChange}\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^0-9+]/g, '') // Allow only digits and the plus sign\n                              if (/^\\+?[0-9]*$/.test(inputValue)) {\n                                DeliveryChange({ target: { name: 'mobile', value: inputValue } })\n                              }\n                            }}\n                            name=\"mobile\"\n                            value={customerDelivery?.mobile}\n                            type=\"tel\"\n                            placeholder=\"Mobil\"\n                            className=\"form-control\"\n                            id=\"inputTelephone\"\n                            maxLength={30}\n                            minLength={3}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label className=\"col-sm-4 col-form-label\">Bereits bezahlt</label>\n                        <div className=\"col-sm-6 mt-2\">\n                          <div className=\"radio-check-wrap\">\n                            <input\n                              onChange={DeliveryChange}\n                              name=\"alreadyPaid\"\n                              // checked={JSON.parse(customerDelivery?.alreadyPaid)}\n                              checked={customerDelivery?.alreadyPaid}\n                              type=\"checkbox\"\n                            />\n                            <span>ja</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h6>Adresse</h6>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Straße mit Hausnummer\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={BillChange}\n                            name=\"billAddress\"\n                            placeholder=\"Straße mit Hausnummer\"\n                            value={customerBills.billAddress}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          PLZ\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"tel\"\n                            value={customerBills.billPlz}\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^0-9]/g, '') // Allow only alphabetic characters, spaces, hyphens, and apostrophes\n                              setCustomerBills({ ...customerBills, billPlz: inputValue })\n                            }}\n                            placeholder=\"PLZ\"\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                            maxLength={6}\n                            minLength={3}\n                            required={true}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputText\" className=\"col-sm-4 col-form-label\">\n                          Ort\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={BillChange}\n                            name=\"billOrt\"\n                            placeholder=\"Ort\"\n                            value={customerBills.billOrt}\n                            className=\"form-control\"\n                            id=\"inputText\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Land\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            name=\"billLand\"\n                            placeholder=\"Land\"\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^a-zA-Z\\s'-]/g, '')\n                              BillChange({ target: { name: 'billLand', value: inputValue } })\n                            }}\n                            value={customerBills.billLand}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <h6>Lieferadresse c/o</h6>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Vornamen\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={DeliveryChange}\n                            name=\"fname\"\n                            placeholder=\"Vornamen\"\n                            // value={customers.fname}\n                            value={customerDelivery?.fname}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Straße mit Hausnummer\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={DeliveryChange}\n                            name=\"address\"\n                            placeholder=\"Straße mit Hausnummer\"\n                            value={customerDelivery?.address}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Ort\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            onChange={DeliveryChange}\n                            name=\"ort\"\n                            placeholder=\"Ort\"\n                            value={customerDelivery?.ort}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label className=\"col-sm-4 col-form-label\">Name</label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            onChange={DeliveryChange}\n                            name=\"lname\"\n                            value={customerDelivery?.lname}\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          PLZ\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"tel\"\n                            value={customerDelivery.plz}\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^0-9]/g, '') // Allow only alphabetic characters, spaces, hyphens, and apostrophes\n                              setCustomerDelivery({ ...customerDelivery, plz: inputValue })\n                            }}\n                            placeholder=\"PLZ\"\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                            maxLength={6}\n                            minLength={3}\n                            required={true}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Land\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            type=\"text\"\n                            name=\"land\"\n                            placeholder=\"Land\"\n                            onChange={(e) => {\n                              const inputValue = e.target.value.replace(/[^a-zA-Z\\s'-]/g, '')\n                              DeliveryChange({ target: { name: 'land', value: inputValue } })\n                            }}\n                            value={customerDelivery?.land}\n                            className=\"form-control\"\n                            id=\"inputPassword\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"block-wrap\">\n                <h3>Hinterlegung</h3>\n                <div>\n                  {/* <div className=\"row\">\n                    <div className=\"radio-check-wrap mb-3\">\n                      <input\n                        type=\"checkbox\"\n                        onChange={deposite}\n                        // checked={JSON.parse(customerDeposit.deposit)}\n                        checked={customerDepositeCheckbox}\n                        name=\"deposit\"\n                      />\n                      <span> Hinterlegung [ja]</span>\n                    </div>\n                  </div> */}\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Hinterlegungsbeginn\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerStartDeposit}\n                            onChange={DepositChange}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Versand nächste Marke\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerNextBrand}\n                            onChange={nextBrandChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Versand letzte Marke\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerUpdateStamp}\n                            onChange={updateStamp}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <label className=\"col-sm-4 col-form-label\">Rücksendung letzte Marke</label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerLastStamp}\n                            onChange={lastStamp}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div className=\"row \">\n                    <div className=\"col-sm-6\"> */}\n                  <div className=\"row \">\n                    <div className=\"col-sm-6 mt-2\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={emergencyPass}\n                          // checked={JSON.parse(customerDeposit.emergencyPass)}\n                          checked={customerEmergencyPass}\n                          name=\"emergencyPass\"\n                        />{' '}\n                        <span> Notfallpass</span>\n                      </div>\n                    </div>\n                    {/* </div>\n                    </div> */}\n\n                    <div className=\"col-sm-6\">\n                      <div className=\"row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">\n                          Erinnerung Marke\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <DatePiker\n                            className=\"form-control\"\n                            selected={customerReminderStamp}\n                            onChange={reminderStamp}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"block-wrap\">\n                <h3>Beendigung</h3>\n                <div>\n                  <div className=\"row\">\n                    <div className=\"col-md-3 col-sm-6\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap w-100\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={BurialChange}\n                          // checked={JSON.parse(customerBurial.termination)}\n                          checked={customerBurial.termination}\n                          name=\"termination\"\n                        />\n                        <span>Auf eigenen Wunsch</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-3 col-sm-6\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap w-100\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={BurialChange}\n                          // checked={JSON.parse(customerBurial.terminationDeath)}\n                          checked={customerBurial.terminationDeath}\n                          name=\"terminationDeath\"\n                        />\n                        <span> Durch Tod</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-3 col-sm-6\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap w-100\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={BurialChange}\n                          // checked={JSON.parse(customerBurial.notTermination)}\n                          checked={customerBurial.notTermination}\n                          name=\"notTermination\"\n                        />\n                        <span>Weil nicht ermittelbar</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-3 col-sm-6\" style={{ padding: '0px' }}>\n                      <div className=\"radio-check-wrap w-100\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={BurialChange}\n                          // checked={JSON.parse(customerBurial.financialReasons)}\n                          checked={customerBurial.financialReasons}\n                          name=\"financialReasons\"\n                        />\n                        <span> Aus finanziellen Gründen</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container-fluid mb-3 pb-3\">\n          <div className=\"row justify-content-md-end\">\n            <div className=\"col text-md-end btn-wrapper\">\n              <button type=\"button\" className=\"btn btn-cancel me-3\" onClick={cancelData}>\n                Abbrechen\n              </button>\n\n              <button type=\"button\" className=\"btn btn-save\" onClick={saveData}>\n                Speichern\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default React.memo(CustomerInfo)\n"],"names":["Customer","_ref","_customerInfo$custome","_res$fname","_res$fname2","_res$lname","_res$lname2","_res$street","_res$street2","getCustomerData","updateData","customerInfo","setCustomerInfo","useState","ress","localStorage","getItem","resultt","JSON","parse","navigate","useNavigate","activeTab","handleTabClick","tabId","name","e","target","tagName","toLowerCase","preventDefault","setItem","useEffect","customer","res","dateString","startDate","date","Date","formattedDate","getTime","getTimezoneOffset","toLocaleDateString","year","month","day","replace","console","log","firstName","fname","slice","toUpperCase","lastName","lname","street","plz","city","async","response","fetch","concat","process","_id","updatedData","json","getRecordById","_jsx","_Fragment","children","_jsxs","className","xmlns","width","height","viewBox","fill","clipPath","d","id","email","phone","role","onClick","transform","React","onChange","selected","DatePicker","placeholderText","dateFormat","CustomerInfo","_customerInfo$custome2","_customerInfo$custome3","_customerInfo$custome4","_customerInfo$custome5","_customerInfo$custome6","_customerInfo$custome7","_customerInfo$custome8","_customerInfo$custome9","_customerInfo$custome10","_customerInfo$custome11","_customerInfo$custome12","_customerInfo$custome13","_customerInfo$custome14","_customerInfo$custome15","location","useLocation","apiUrl","page","setPage","setUpdateData","itemsPerPage","setItemsPerPage","orderingMaterials","setOrderingMaterials","orderNumber","newsletterDate","extras","newsletterSubscription","customerInfoStatu","setCustomerInfoStatu","dataProtection","employee","clientStatus","setClientStatus","status","those","setThose","customerContact","setCustomerContact","title","salution","gender","customerBills","setCustomerBills","billAddress","billPlz","billLand","billOrt","setEmail","dataCollection","setDataCollection","customerDelivery","setCustomerDelivery","address","land","ort","mobile","alreadyPaid","customerStartDeposit","setCustomerStartDeposit","customerNextBrand","setCustomerNextBrand","customerUpdateStamp","setCustomerUpdateStamp","customerLastStamp","setCustomerLastStamp","customerReminderStamp","setCustomerReminderStamp","customerEmergencyPass","setCustomerEmergencyPass","customerBurial","setCustomerBurial","termination","terminationDeath","notTermination","financialReasons","setGetCustomerData","employeeData","setEmployeeData","created_by","matarialChange","value","error","Anrede","label","customerInfoChange","checked","type","undefined","ContactChange","a","getFullYear","toast","warning","newValue","BillChange","customerDepositt","startDeposit","nextBrand","updateStamp","lastStamp","reminderStamp","emergencyPass","DeliveryChange","BurialChange","selectedOptions","setSelectedOptions","getDetails","_location$state","results","state","data","axios","get","customerInfoStatuData","customerDeposit","getEmployeeData","_customerInfo$custome16","_customerInfo$custome17","_customerInfo$custome18","_customerInfo$custome19","_customerInfo$custome20","_customerInfo$custome21","_customerInfo$custome22","_customerInfo$custome23","_customerInfo$custome24","_customerInfo$custome25","_customerInfo$custome26","_customerInfo$custome27","_customerInfo$custome28","_customerInfo$custome29","_customerInfo$orderin","_customerInfo$orderin2","_customerInfo$orderin3","_customerInfo$orderin4","_customerInfo$custome30","_customerInfo$custome31","_customerInfo$custome32","_customerInfo$custome33","_customerInfo$custome34","_customerInfo$custome35","_customerInfo$custome36","_customerInfo$custome37","_customerInfo$custome38","_customerInfo$custome39","_customerInfo$custome40","_customerInfo$custome41","_customerInfo$custome42","_customerInfo$custome43","_customerInfo$custome44","_customerInfo$custome45","_customerInfo$custome46","_customerInfo$custome47","_customerInfo$custome48","_customerInfo$custome49","_customerInfo$custome50","_customerInfo$custome51","_customerInfo$custome52","_customerInfo$custome53","_customerInfo$custome54","_customerInfo$custome55","_customerInfo$custome56","_customerInfo$custome57","htmlFor","placeholder","DatePiker","MultiSelect","options","code","isMulti","maxSelectedValues","optionLabel","showSelectAll","showCheckbox","display","Select","map","elem","username","selectedDateObject","currentYear","selectedOption","find","option","disabled","inputValue","test","maxLength","minLength","required","DepositChange","fieldName","style","padding","cancelData","length","method","headers","body","stringify","result","message","success","ToastContainer"],"sourceRoot":""}