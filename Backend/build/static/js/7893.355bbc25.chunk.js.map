{"version":3,"file":"static/js/7893.355bbc25.chunk.js","mappings":"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","sources":["views/customer/Date.jsx","views/customer/attorney/Attorney.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import DatePicker from 'react-datepicker'\n\n// import 'react-datepicker/dist/react-datepicker.css'\n\n// // CSS Modules, react-datepicker-cssmodules.css\n// // import 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\n// export default const Date = () => {\n//   const [startDate, setStartDate] = useState(new Date())\n//   return <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n// }\n\nimport React, { useState, useEffect } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport PropTypes from 'prop-types'\n\nconst DatePiker = ({ onChange, selected, placeholderText }) => {\n  DatePiker.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    selected: PropTypes.func.isRequired,\n    placeholderText: PropTypes.func.isRequired,\n  }\n  // const [startDate, setStartDate] = useState(null)\n\n  useEffect(() => {\n    // setStartDate(new Date())\n  }, []) // Empty dependency array ensures this effect runs only once\n\n  return (\n    <div>\n      <DatePicker\n        className=\"form-control form-search-control w-101\"\n        placeholderText={placeholderText}\n        selected={selected}\n        onChange={onChange}\n        dateFormat=\"dd.MM.yyyy\"\n      />\n    </div>\n  )\n}\n\nexport default DatePiker\n","import React, { useEffect, useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Customer from '../Customer'\nimport Form from 'react-bootstrap/Form'\nimport { useNavigate } from 'react-router-dom'\nimport DatePiker from '../Date'\nimport { Jodit } from 'jodit-react'\nimport 'react-phone-input-2/lib/style.css'\nimport PhoneInput from 'react-phone-input-2'\n\nconst Attorney = () => {\n  const [recordData, setRecordData] = useState([])\n  const navigate = useNavigate()\n  const maxFields = 10\n  const initialFields = 4\n  const notify = (dataa) => toast(dataa)\n  const apiUrl = process.env.REACT_APP_API_URL\n  const cancelData = () => {\n    localStorage.removeItem('tabId')\n    navigate('/customer/customer_info')\n  }\n\n  const [powerOfAttorney, setPowerOfAttorney] = useState({\n    AttorneyMasterData: false,\n    adoptDataFromHealthcare: Boolean(recordData?.powerOfAttorney?.adoptDataFromHealthcare),\n    powerOfAttorneyData: Array.from({ length: initialFields }, () => ({\n      powerOfAttorney_fname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_fname\n      }),\n      powerOfAttorney_lname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_lname\n      }),\n      powerOfAttorney_address: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_address\n      }),\n      powerOfAttorney_mobile: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_mobile\n      }),\n      powerOfAttorney_phone: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_phone\n      }),\n    })),\n  })\n\n  const [careProvision, setCareProvision] = useState({\n    care_association: recordData?.careProvision?.care_association || '',\n  })\n\n  const [securingattorney, setSecuringattorney] = useState({\n    fname: recordData?.securingattorney?.fname || '',\n    lname: recordData?.securingattorney?.lname || '',\n    address: recordData?.securingattorney?.address || '',\n    dob: recordData?.securingattorney?.dob || '',\n    plz: recordData?.securingattorney?.plz || '',\n    ort: recordData?.securingattorney?.ort || '',\n  })\n\n  // const healthCareChange = (e, index, fieldName) => {\n  //   let value\n\n  //   if (e && e.target) {\n  //     value = e.target.value\n  //   } else {\n  //     value = e\n  //   }\n\n  //   setHealthCare((prevHealthCare) => {\n  //     const updatedHealthCareData = [...prevHealthCare.healthCareData]\n\n  //     updatedHealthCareData[index] = {\n  //       ...updatedHealthCareData[index],\n  //       [fieldName]: value,\n  //     }\n\n  //     return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n  //   })\n  // }\n\n  const healthCareChange = (e, index) => {\n    const { name, value, type, checked } = e.target || {}\n    setHealthCare((prevHealthCare) => {\n      const updatedHealthCareData = [...prevHealthCare.healthCareData]\n\n      if (type === 'checkbox') {\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          [name]: checked,\n        }\n      } else if (name === 'healthCare_phone') {\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          healthCare_phone: value.replace(/[^\\d\\s]/g, ''),\n        }\n      } else if (name === 'healthCare_mobile') {\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          healthCare_mobile: value.replace(/[^\\d\\s]/g, ''),\n        }\n      } else {\n        // For other fields, simply update the value\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          [name]: value,\n        }\n      }\n      return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n    })\n  }\n\n  // const healthCareChange = (phoneNumber, index) => {\n  //   setHealthCare((prevHealthCare) => {\n  //     const updatedHealthCareData = [...prevHealthCare.healthCareData]\n  //     updatedHealthCareData[index] = {\n  //       ...updatedHealthCareData[index],\n  //       healthCare_phone: phoneNumber,\n  //       healthCare_mobile: phoneNumber,\n  //     }\n\n  //     return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n  //   })\n  // }\n\n  const formatPhoneNumber = (value) => {\n    const numericValue = value.replace(/[^\\d\\s]/g, '')\n    let formattedNumber = ''\n\n    for (let i = 0; i < numericValue.length; i++) {\n      if (i > 0 && i % 30 === 0) {\n        formattedNumber += ' / '\n      }\n      formattedNumber += numericValue[i]\n    }\n\n    return formattedNumber\n  }\n\n  const [healthCare, setHealthCare] = useState({\n    healthCareData: Array.from({ length: initialFields }, () => ({\n      healthCare_fname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_fname\n      }),\n      healthCare_lname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_lname\n      }),\n      healthCare_address: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_address\n      }),\n      healthCare_mobile: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_mobile\n      }),\n      healthCare_phone: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_phone\n      }),\n    })),\n  })\n  // console.log('first', healthCare.healthCareData[0].healthCare_fname)\n\n  const addHealthCareField = () => {\n    if (healthCare.healthCareData.length < maxFields) {\n      setHealthCare((prev) => ({\n        ...prev,\n        healthCareData: [\n          ...prev.healthCareData,\n          {\n            healthCare_fname: '',\n            healthCare_lname: '',\n            healthCare_address: '',\n            healthCare_phone: [],\n          },\n        ],\n      }))\n    }\n  }\n\n  const powerOfAttorneyChange = (e, index) => {\n    const { name, value, type, checked } = e.target || {}\n    setPowerOfAttorney((prevPowerOfAttorney) => {\n      const updatedPowerOfAttorneyData = [...prevPowerOfAttorney.powerOfAttorneyData]\n\n      if (type === 'checkbox') {\n        updatedPowerOfAttorneyData[index] = {\n          ...updatedPowerOfAttorneyData[index],\n          [name]: checked,\n        }\n      } else if (name === 'powerOfAttorney_phone') {\n        updatedPowerOfAttorneyData[index] = {\n          ...updatedPowerOfAttorneyData[index],\n          powerOfAttorney_phone: value.replace(/[^\\d\\s]/g, ''),\n        }\n      } else if (name === 'powerOfAttorney_mobile') {\n        updatedPowerOfAttorneyData[index] = {\n          ...updatedPowerOfAttorneyData[index],\n          powerOfAttorney_mobile: value.replace(/[^\\d\\s]/g, ''),\n        }\n      }\n\n      return { ...prevPowerOfAttorney, powerOfAttorneyData: updatedPowerOfAttorneyData }\n    })\n  }\n\n  const addPowerOfAttorneyField = () => {\n    if (powerOfAttorney.powerOfAttorneyData.length < maxFields) {\n      setPowerOfAttorney((prev) => ({\n        ...prev,\n        powerOfAttorneyData: [\n          ...prev.powerOfAttorneyData,\n          {\n            powerOfAttorney_fname: '',\n            powerOfAttorney_lname: '',\n            powerOfAttorney_address: '',\n            powerOfAttorney_phone: [],\n            powerOfAttorney_mobile: [],\n          },\n        ],\n      }))\n    }\n  }\n\n  const careProvisionChange = (e) => {\n    const { name, value } = e.target\n\n    setCareProvision({ ...careProvision, [name]: value })\n  }\n  // const securingattorneyChange = (e) => {\n  //   const { name, value, type, checked } = e.target\n\n  //   setSecuringattorney({ ...securingattorney, [name]: value })\n  // }\n  const securingattorneyChange = (e) => {\n    if (e instanceof Date) {\n      let yearString = e.getFullYear().toString()\n      const year = parseInt(yearString.substring(0, 4), 10)\n      if (yearString.length > 4) {\n        yearString = yearString.substring(0, 4)\n      }\n      const newDate = new Date(`${year}.${e.getMonth() + 1}.${e.getDate()}`)\n\n      setSecuringattorney({ ...securingattorney, dob: newDate })\n    } else if (e.target) {\n      const { name, value, type, checked } = e.target\n\n      if (name === 'plz' && type === 'text') {\n        const inputValue = value.replace(/[^0-9a-zA-Z9äöüÄÖÜßÄÖÜß\\s'-]/g, '')\n        setSecuringattorney({ ...securingattorney, plz: inputValue })\n      } else {\n        setSecuringattorney({ ...securingattorney, [name]: type === 'checkbox' ? checked : value })\n      }\n    } else if (e.value !== undefined) {\n      setSecuringattorney({ ...securingattorney, salution: e.value })\n    } else {\n      console.error('Invalid event or data provided to ContactChange.')\n    }\n  }\n\n  const handleBlur = (event) => {\n    const { name, value } = event.target\n    let formattedAddress = value.trim()\n    const endsWithNumber = /\\d$/.test(value)\n\n    if (endsWithNumber) {\n      formattedAddress = value.replace(/(\\D)(\\d)/, '$1 $2')\n    }\n\n    setSecuringattorney({\n      ...securingattorney,\n      [name]: formattedAddress,\n    })\n  }\n\n  let res = localStorage.getItem('customerRecord')\n  let resultt = JSON.parse(res)\n  const data = {\n    healthCare,\n    powerOfAttorney,\n    careProvision,\n    securingattorney,\n    customer_id: resultt?._id,\n  }\n  // const saveData = async () => {\n  //   const healthCareData = data.healthCare.healthCareData\n\n  //   // Phone and mobile number validation\n  //   const phoneRegex = '000'\n  //   for (const record of healthCareData) {\n  //     if (record.healthCare_phone && record.healthCare_phone.startsWith(phoneRegex)) {\n  //       return toast.warning('Ungültige Telefonnummer')\n  //     }\n  //     if (record.healthCare_mobile && record.healthCare_mobile.startsWith(phoneRegex)) {\n  //       return toast.warning('Ungültige Mobilnummer')\n  //     }\n  //   }\n  //   let currentDate = new Date()\n  //   if (securingattorney?.dob > currentDate) {\n  //     return toast.warning('Das Startdatum darf nicht in der Zukunft liegen.')\n  //   }\n  //   if (securingattorney && securingattorney?.dob && securingattorney?.dob?.getFullYear() < 1900) {\n  //     return toast.warning('Das Startdatum darf nicht vor 1900 liegen');\n  //   }\n\n  //   try {\n  //     let url\n  //     let method\n\n  //     if (resultt) {\n  //       url = `${apiUrl}/attorney/get_attorney/${resultt._id}`\n  //       method = 'PUT'\n  //     } else {\n  //       url = `${apiUrl}/attorney`\n  //       method = 'POST'\n  //     }\n\n  //     let response = await fetch(url, {\n  //       method: method,\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(data),\n  //     })\n\n  //     let result = await response.json()\n  //     // console.log(result)\n  //     if (result.status === 201) {\n  //       toast.success('Daten erfolgreich gespeichert')\n  //       // resetStateVariables()\n  //     } else {\n  //       toast.error(\n  //         'Fehler beim Speichern der Daten. Weitere Informationen finden Sie auf der Konsole.',\n  //       )\n  //     }\n  //   } catch (error) {\n  //     // console.error('Error during API call:', error)\n  //     toast.error('Error saving data. Please try again.')\n  //   }\n  // }\n  const saveData = async () => {\n    const healthCareData = data.healthCare.healthCareData\n\n    // Phone and mobile number validation\n    const phoneRegex = '000'\n    for (const record of healthCareData) {\n      if (record.healthCare_phone && record.healthCare_phone.startsWith(phoneRegex)) {\n        return toast.warning('Ungültige Telefonnummer')\n      }\n      if (record.healthCare_mobile && record.healthCare_mobile.startsWith(phoneRegex)) {\n        return toast.warning('Ungültige Mobilnummer')\n      }\n    }\n    let currentDate = new Date()\n    let secureDate = securingattorney?.dob\n    if (securingattorney?.dob) {\n      const birthYear = new Date(securingattorney?.dob)?.getFullYear()\n      if (birthYear < 1900) {\n        return toast.warning('Das Geburtsdatum darf nicht vor 1900 liegen')\n      }\n    }\n    if (securingattorney && securingattorney.dob) {\n      let attorneyDOB = new Date(securingattorney.dob)\n\n      if (attorneyDOB > currentDate) {\n        return toast.warning('Das Geburtsdatum darf nicht in der Zukunft liegen')\n      }\n    }\n    let birthDate = new Date(secureDate)\n    let minimumAge = 18\n    let ageDifferenceMilliseconds = currentDate.getTime() - birthDate.getTime()\n    let ageDifferenceYears = ageDifferenceMilliseconds / (1000 * 3600 * 24 * 365.25)\n\n    if (ageDifferenceYears < minimumAge) {\n      return toast.warning(\n        'Du musst mindestens 18 Jahre alt sein, um einen Vertrag zu unterschreiben.',\n      )\n    }\n\n    try {\n      let url\n      let method\n\n      if (resultt) {\n        url = `${apiUrl}/attorney/get_attorney/${resultt._id}`\n        method = 'PUT'\n      } else {\n        url = `${apiUrl}/attorney`\n        method = 'POST'\n      }\n      let response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n      let result = await response.json()\n      if (result.status === 201) {\n        toast.success('Daten erfolgreich gespeichert')\n      } else {\n        toast.error(\n          'Fehler beim Speichern der Daten. Weitere Informationen finden Sie auf der Konsole.',\n        )\n      }\n    } catch (error) {\n      toast.error('Error saving data. Please try again.')\n    }\n  }\n\n  const getRecord = async () => {\n    try {\n      const result = await fetch(`${apiUrl}/attorney/get_attorney/${resultt._id}`)\n      const data = await result.json()\n      setRecordData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  // console.log('recorddata', recordData)\n  // const resetStateVariables = () => {\n  //   setHealthCare(() => ({\n  //     healthCareData: Array.from({ length: initialFields + 1 }, () => ({\n  //       healthCareMasterData: false,\n  //       healthCare_fname: '',\n  //       healthCare_lname: '',\n  //       healthCare_address: '',\n  //       healthCare_phone: '',\n  //       healthCare_mobile: '',\n  //     })),\n  //   }))\n\n  //   setPowerOfAttorney(() => ({\n  //     powerOfAttorneyData: Array.from({ length: initialFields + 1 }, () => ({\n  //       AttorneyMasterData: false,\n  //       adoptDataFromHealthcare: false,\n  //       powerOfAttorney_fname: '',\n  //       powerOfAttorney_lname: '',\n  //       powerOfAttorney_address: '',\n  //       powerOfAttorney_phone: '',\n  //       powerOfAttorney_mobile: '',\n  //     })),\n  //   }))\n\n  //   setCareProvision(() => ({\n  //     care_association: '',\n  //   }))\n\n  //   setSecuringattorney({\n  //     fname: '',\n  //     lname: '',\n  //     address: '',\n  //     plz: '',\n  //     ort: '',\n  //     dob: '',\n  //   })\n  // }\n  const toggleAdoptDataFromHealthcare = () => {\n    setPowerOfAttorney((prevState) => ({\n      ...prevState,\n      adoptDataFromHealthcare: !prevState.adoptDataFromHealthcare,\n      powerOfAttorneyData: prevState.adoptDataFromHealthcare\n        ? powerOfAttorney.powerOfAttorneyData.map((data) => ({\n            powerOfAttorney_fname: '',\n            powerOfAttorney_lname: '',\n            powerOfAttorney_address: '',\n            powerOfAttorney_phone: '',\n            powerOfAttorney_mobile: '',\n          }))\n        : healthCare.healthCareData.map((data) => ({\n            powerOfAttorney_fname: data.healthCare_fname,\n            powerOfAttorney_lname: data.healthCare_lname,\n            powerOfAttorney_address: data.healthCare_address,\n            powerOfAttorney_phone: data.healthCare_phone,\n            powerOfAttorney_mobile: data.healthCare_mobile,\n          })),\n    }))\n  }\n\n  useEffect(() => {\n    setCareProvision({\n      care_association: recordData?.careProvision?.care_association,\n    })\n    setSecuringattorney({\n      fname: recordData?.securingattorney?.fname,\n      lname: recordData?.securingattorney?.lname,\n      address: recordData?.securingattorney?.address,\n      dob: recordData?.securingattorney?.dob,\n      plz: recordData?.securingattorney?.plz,\n      ort: recordData?.securingattorney?.ort,\n    })\n    setPowerOfAttorney((prevState) => ({\n      ...prevState,\n      // adoptDataFromHealthcare: Boolean(recordData?.powerOfAttorney?.adoptDataFromHealthcare),\n      powerOfAttorneyData: Array.from({ length: initialFields }, (_, index) => ({\n        powerOfAttorneyData: prevState.powerOfAttorneyData.map((item, index) => ({\n          ...item,\n          powerOfAttorney_fname:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_fname ||\n            item.powerOfAttorney_fname,\n          powerOfAttorney_lname:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_lname ||\n            item.powerOfAttorney_lname,\n          powerOfAttorney_address:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_address ||\n            item.powerOfAttorney_address,\n          powerOfAttorney_mobile:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_mobile ||\n            item.powerOfAttorney_mobile,\n          powerOfAttorney_phone:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_phone ||\n            item.powerOfAttorney_phone,\n        })),\n      })),\n    }))\n    setHealthCare((prevHealthCare) => ({\n      ...prevHealthCare,\n      healthCareData: Array.from({ length: initialFields }, (_, index) => ({\n        healthCare_fname:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_fname ||\n          prevHealthCare.healthCareData[index]?.healthCare_fname ||\n          '',\n        healthCare_lname:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_lname ||\n          prevHealthCare.healthCareData[index]?.healthCare_lname ||\n          '',\n        healthCare_address:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_address ||\n          prevHealthCare.healthCareData[index]?.healthCare_address ||\n          '',\n        healthCare_mobile:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_mobile ||\n          prevHealthCare.healthCareData[index]?.healthCare_mobile ||\n          '',\n        healthCare_phone:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_phone ||\n          prevHealthCare.healthCareData[index]?.healthCare_phone ||\n          '',\n      })),\n    }))\n  }, [recordData, initialFields])\n\n  useEffect(() => {\n    // Add fields on component mount\n    addHealthCareField()\n    getRecord()\n    addPowerOfAttorneyField()\n  }, [])\n  return (\n    <>\n      <Customer />\n      <div className=\"inner-page-wrap\">\n        <div className=\"tab-content\">\n          <div className=\"tab-title\">\n            <h4>Vollmachten</h4>\n          </div>\n          <div className=\"block-wrap m-3\">\n            <div>\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 style={{ color: '#244D92' }}>Gesundheitsvollmacht</h3>\n                  <p className=\"\" style={{ color: '#244D92' }}>\n                    Bevollmächtigte Person(en):\n                  </p>\n                  <div>\n                    <div className=\"row mb-2\">\n                      <div className=\"col-sm-2\">\n                        <b>Vorname</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Nachname</b>\n                      </div>\n                      <div className=\"col-sm-4\">\n                        <b>Adresse</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Telefon</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Mobil</b>\n                      </div>\n                    </div>\n                    <div>\n                      {healthCare.healthCareData &&\n                        healthCare.healthCareData.map((field, index) => (\n                          <div className=\"row\" key={index}>\n                            <div className=\"col-sm-2\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_fname')}\n                                    value={field.healthCare_fname}\n                                    name=\"healthCare_fname\"\n                                    type=\"text\"\n                                    placeholder=\"Vorname\"\n                                    className=\"form-control z\"\n                                    id={`fname_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_lname')}\n                                    value={field.healthCare_lname}\n                                    type=\"text\"\n                                    name=\"healthCare_lname\"\n                                    placeholder=\"Nachname\"\n                                    className=\"form-control\"\n                                    id={`lname_${index}`}\n                                    //required={true}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-4\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) =>\n                                      healthCareChange(e, index, 'healthCare_address')\n                                    }\n                                    value={field.healthCare_address}\n                                    type=\"text\"\n                                    name=\"healthCare_address\"\n                                    placeholder=\"Adresse\"\n                                    className=\"form-control\"\n                                    id={`address_${index}`}\n                                    //required={true}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    // isValid={(value, country) => {\n                                    //   if (value.match(/000/)) {\n                                    //     return 'Invalid phone'\n                                    //   } else if (value.match(/000/)) {\n                                    //     return false\n                                    //   } else {\n                                    //     return true\n                                    //   }\n                                    // }}\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_phone')}\n                                    value={field.healthCare_phone}\n                                    name=\"healthCare_phone\"\n                                    placeholder=\"853-456-8464\"\n                                    className=\"form-control\"\n                                    id={`phone_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    // isValid={(value, country) => {\n                                    //   if (value.match(/000/)) {\n                                    //     return 'Invalid mobile'\n                                    //   } else if (value.match(/000/)) {\n                                    //     return false\n                                    //   } else {\n                                    //     return true\n                                    //   }\n                                    // }}\n                                    onChange={(e) =>\n                                      healthCareChange(e, index, 'healthCare_mobile')\n                                    }\n                                    value={field.healthCare_mobile}\n                                    type=\"text\"\n                                    name=\"healthCare_mobile\"\n                                    placeholder=\"853-456-8464\"\n                                    className=\"form-control\"\n                                    id={`phone_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 style={{ color: '#244D92' }}>Vorsorgevollmacht</h3>\n                  <div className=\"row\">\n                    <label htmlFor=\"adoptDataFromHealthcare\" className=\"col-sm-3 col-form-label\">\n                      Daten aus Gesundheitsvollmacht übernehmen\n                    </label>\n                    <div className=\"col-sm-1 radio-check-wrap mt-2\">\n                      <input\n                        type=\"checkbox\"\n                        // onChange={powerOfAttorneyChange}\n                        // onChange={() =>\n                        //   setPowerOfAttorney((prevPowerOfAttorney) => ({\n                        //     ...prevPowerOfAttorney,\n                        //     adoptDataFromHealthcare: !prevPowerOfAttorney.adoptDataFromHealthcare,\n                        //     powerOfAttorneyData: [...prevPowerOfAttorney.powerOfAttorneyData],\n                        //   }))\n                        // }\n                        onChange={toggleAdoptDataFromHealthcare}\n                        checked={powerOfAttorney.adoptDataFromHealthcare}\n                        name=\"adoptDataFromHealthcare\"\n                      />\n                      <span></span>\n                    </div>\n                  </div>\n                  <p className=\"\" style={{ color: '#244D92' }}>\n                    Bevollmächtigte Person(en):\n                  </p>\n\n                  <div className=\"row mb-2 mt-3\">\n                    <div className=\"col-sm-2\">\n                      <b>Vorname</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Nachname</b>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <b>Adresse</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Telefon</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Mobil</b>\n                    </div>\n                  </div>\n                  {powerOfAttorney.powerOfAttorneyData &&\n                    powerOfAttorney.powerOfAttorneyData.map((field, index) => (\n                      <div className=\"row\" key={index}>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_fname}\n                                name=\"powerOfAttorney_fname\"\n                                type=\"text\"\n                                placeholder=\"Vorname\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_lname}\n                                name=\"powerOfAttorney_lname\"\n                                type=\"text\"\n                                placeholder=\"Nachname\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-4\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_address}\n                                name=\"powerOfAttorney_address\"\n                                type=\"text\"\n                                placeholder=\"Adresse\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_phone}\n                                name=\"powerOfAttorney_phone\"\n                                type=\"text\"\n                                placeholder=\"853-456-8464\"\n                                className=\"form-control\"\n                                maxLength={20}\n                                minLength={3}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_mobile}\n                                name=\"powerOfAttorney_mobile\"\n                                type=\"text\"\n                                placeholder=\"853-456-8464\"\n                                className=\"form-control\"\n                                maxLength={20}\n                                minLength={3}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <h3 style={{ color: '#244D92' }}>Betreuungsverfügung</h3>\n                {/* <div className=\"row\">\n                  <label htmlFor=\"CareProvisionMasterData\" className=\"col-sm-3 col-form-label fs-6\">\n                    Eintrag der Stammdaten\n                  </label>\n                  <div className=\"col-sm-9 radio-check-wrap mt-2\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={careProvisionChange}\n                      checked={careProvision.CareProvisionMasterData}\n                      name=\"CareProvisionMasterData\"\n                    />\n                    <span></span>\n                  </div>\n                </div> */}\n                <div className=\"row\">\n                  <label className=\"col-sm-2 col-form-label\">Betreuungsverein</label>\n                  <div className=\"col-sm-10\">\n                    <textarea\n                      value={careProvision.care_association}\n                      name=\"care_association\"\n                      onChange={careProvisionChange}\n                      className=\"form-control\"\n                      placeholder=\"Betreuungsverein\"\n                    />\n                  </div>\n                </div>\n                <hr />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <h3 style={{ color: '#244D92' }}>Vollmacht zur Absicherung des digitalen Erbes</h3>\n                {/* <div className=\"row\">\n                  <label htmlFor=\"SecuringMasterData\" className=\"col-sm-3 col-form-label fs-6\">\n                    Eintrag der Stammdaten\n                  </label>\n                  <div className=\"col-sm-9 radio-check-wrap mt-2\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={securingattorneyChange}\n                      checked={securingattorney.SecuringMasterData}\n                      name=\"SecuringMasterData\"\n                    />\n                    <span></span>\n                  </div>\n                </div> */}\n                <div className=\"row mb-2 mt-3\">\n                  <div className=\"col-sm-2\">\n                    <b>Vorname</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Nachname</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Geburtsdatum</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Straße mit Hausnummer</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>PLZ</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Ort</b>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"fname\"\n                          value={securingattorney.fname}\n                          type=\"text\"\n                          placeholder=\"Vorname\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"lname\"\n                          value={securingattorney.lname}\n                          type=\"text\"\n                          placeholder=\"Nachname\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <DatePiker\n                          className=\"form-control\"\n                          selected={securingattorney.dob}\n                          onChange={securingattorneyChange}\n                          // name=\"dataCollection\"\n                          placeholderText={'Geburtsdatum'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onBlur={handleBlur}\n                          onChange={securingattorneyChange}\n                          value={securingattorney.address}\n                          name=\"address\"\n                          type=\"text\"\n                          placeholder=\"Straße mit Hausnummer\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"plz\"\n                          value={securingattorney.plz}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"PLZ\"\n                          maxLength={10}\n                          minLength={3}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"ort\"\n                          value={securingattorney.ort}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Ort\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"text-end mx-3\">\n              <button\n                onClick={cancelData}\n                type=\"button\"\n                className=\"btn btn\"\n                style={{ background: '#d04545', color: 'white' }}\n              >\n                Abbrechen\n              </button>\n              &nbsp; &nbsp;\n              <button\n                onClick={saveData}\n                type=\"button\"\n                style={{ background: '#0b5995', color: 'white' }}\n                className=\"btn btn\"\n              >\n                Speichern\n              </button>\n            </div>\n          </div>\n        </div>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Attorney)\n"],"names":["_ref","onChange","selected","placeholderText","useEffect","_jsx","children","DatePicker","className","dateFormat","Attorney","_recordData$powerOfAt","_recordData$careProvi","_recordData$securinga","_recordData$securinga2","_recordData$securinga3","_recordData$securinga4","_recordData$securinga5","_recordData$securinga6","recordData","setRecordData","useState","navigate","useNavigate","apiUrl","process","powerOfAttorney","setPowerOfAttorney","AttorneyMasterData","adoptDataFromHealthcare","Boolean","powerOfAttorneyData","Array","from","length","_recordData$healthCar","_recordData$healthCar2","_recordData$healthCar3","_recordData$healthCar4","_recordData$healthCar5","_recordData$healthCar6","_recordData$healthCar7","_recordData$healthCar8","_recordData$healthCar9","_recordData$healthCar10","powerOfAttorney_fname","healthCare","healthCareData","map","item","healthCare_fname","powerOfAttorney_lname","healthCare_lname","powerOfAttorney_address","healthCare_address","powerOfAttorney_mobile","healthCare_mobile","powerOfAttorney_phone","healthCare_phone","careProvision","setCareProvision","care_association","securingattorney","setSecuringattorney","fname","lname","address","dob","plz","ort","healthCareChange","e","index","name","value","type","checked","target","setHealthCare","prevHealthCare","updatedHealthCareData","replace","_recordData$healthCar11","_recordData$healthCar12","_recordData$healthCar13","_recordData$healthCar14","_recordData$healthCar15","_recordData$healthCar16","_recordData$healthCar17","_recordData$healthCar18","_recordData$healthCar19","_recordData$healthCar20","powerOfAttorneyChange","prevPowerOfAttorney","updatedPowerOfAttorneyData","securingattorneyChange","Date","yearString","getFullYear","toString","year","parseInt","substring","newDate","concat","getMonth","getDate","inputValue","undefined","salution","console","error","res","localStorage","getItem","resultt","JSON","parse","data","customer_id","_id","_recordData$careProvi2","_recordData$securinga7","_recordData$securinga8","_recordData$securinga9","_recordData$securinga10","_recordData$securinga11","_recordData$securinga12","prevState","_","_recordData$healthCar21","_recordData$healthCar22","_recordData$healthCar23","_recordData$healthCar24","_recordData$healthCar25","_recordData$healthCar26","_recordData$healthCar27","_recordData$healthCar28","_recordData$healthCar29","_recordData$healthCar30","_recordData$healthCar31","_recordData$healthCar32","_recordData$healthCar33","_recordData$healthCar34","_recordData$healthCar35","_recordData$healthCar36","_recordData$healthCar37","_recordData$healthCar38","_prevHealthCare$healt","_recordData$healthCar39","_recordData$healthCar40","_recordData$healthCar41","_prevHealthCare$healt2","_recordData$healthCar42","_recordData$healthCar43","_recordData$healthCar44","_prevHealthCare$healt3","_recordData$healthCar45","_recordData$healthCar46","_recordData$healthCar47","_prevHealthCare$healt4","_recordData$healthCar48","_recordData$healthCar49","_recordData$healthCar50","_prevHealthCare$healt5","prev","async","result","fetch","json","getRecord","_jsxs","_Fragment","Customer","style","color","field","placeholder","id","maxLength","minLength","htmlFor","toggleAdoptDataFromHealthcare","DatePiker","onBlur","event","formattedAddress","trim","test","onClick","cancelData","removeItem","background","record","startsWith","toast","warning","currentDate","secureDate","_Date","birthDate","getTime","url","method","response","headers","body","stringify","status","success","ToastContainer","React"],"sourceRoot":""}