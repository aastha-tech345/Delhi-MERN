{"version":3,"file":"static/js/247.56df00f1.chunk.js","mappings":"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","sources":["Api.js","views/settings/user/CreateUser.jsx"],"sourcesContent":["import axios from 'axios'\nexport const getFetch = async (url) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'get',\n      url: `${url}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      // withCredentials: true,\n    })\n    // if (response.status === 200) {\n    return response\n    // }\n  } catch (error) {\n    console.log(error)\n    return error\n  }\n}\nexport const getFetchByLimit = async (url, limit, page) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'GET',\n      url: `${url}/${limit}/${page}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      withCredentials: true,\n    })\n    if (response.status === 200) {\n      return await response?.data\n    }\n  } catch (error) {\n    console.log(error)\n    return error\n  }\n}\nexport const getOneFetch = async (url, id) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'GET',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      withCredentials: true,\n    })\n    if (response?.status === 200) {\n      return await response?.data\n    }\n  } catch (error) {\n    console.log(error)\n    if (error?.response?.status === 401) {\n      return 401\n    }\n    return error\n  }\n}\nexport const postFetch = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'post',\n      url,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      },\n      data,\n      withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    return error\n  }\n}\nexport const postFetchUser = async (url, data) => {\n  try {\n    // const token = localStorage.getItem(\"token\")\n    const response = await axios({\n      method: 'post',\n      url,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data',\n      },\n      data,\n      //   withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nexport const postFetchContent = async (url, data) => {\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    // if (response.status >= 200 && response.status < 300) {\n    return response.data\n    // } else {\n    //   throw new Error(`Request failed with status ${response.status}`)\n    // }\n  } catch (error) {\n    console.error('Error in postFetchContent:', error)\n    throw error\n  }\n}\n\nexport const patchFetch = async (url, id, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'patch',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      data,\n      withCredentials: true,\n    })\n    if (response?.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error?.response\n    }\n  }\n}\nexport const putFetch = async (url, data) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const putFetchById = async (url) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const putFetchData = async (url, data) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const deleteFetch = async (url, id) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'delete',\n      url: `${url}/${id}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      // withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    }\n  }\n}\n\nexport const postFetchData = async (url, data) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'post',\n      url: `${url}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response) {\n      return response?.data\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error\n    }\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Divider, Radio, Table } from 'antd'\nimport { GrFormAdd, GrAdd } from 'react-icons/gr'\nimport Modal from 'react-bootstrap/Modal'\nimport { MdAdd, MdDelete } from 'react-icons/md'\nimport { GrEdit } from 'react-icons/gr'\nimport { Switch } from 'antd'\nimport { AiOutlineMail, AiFillSetting } from 'react-icons/ai'\nimport { getFetch, postFetchData } from 'src/Api'\n\nconst CreateUser = () => {\n  const [record, setRecord] = useState([])\n  const [user_email, setUserEmail] = useState()\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [user_name, setUserName] = useState()\n  const [roll, setRoll] = useState()\n  const [selectionType, setSelectionType] = useState('checkbox')\n  const [showInviteUserModal, setShowInviteUserModal] = useState(false)\n  const [show, setShow] = useState(false)\n  const [activeTab, setActiveTab] = useState('nav-home')\n  const [roleList, setRoleList] = useState([])\n  const [roleId, setRoleId] = useState('')\n  const [employee, setEmployee] = useState({\n    f_name: '',\n    l_name: '',\n    street: '',\n    plz: '',\n    city: '',\n    email: '',\n    location: '',\n    tel: '',\n    mob: '',\n    // select_role: '',\n    role: '',\n  })\n  const [employeData, setEmployeData] = useState({\n    users: {},\n    password: {\n      password: 'null',\n    },\n    localization: {\n      location: 'null',\n    },\n    advanced: {\n      advanced: 'null',\n    },\n    notification: {\n      notification: 'null',\n    },\n  })\n\n  const handleTabClick = (tabId) => {\n    setActiveTab(tabId)\n  }\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChange = (checked) => {\n    //console.log(`switch to ${checked}`)\n  }\n  const handleShowInviteUserModal = () => {\n    setShowInviteUserModal(true)\n  }\n\n  const handleCloseInviteUserModal = () => {\n    setShowInviteUserModal(false)\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n\n    setEmployee({ ...employee, [name]: value })\n  }\n\n  let localUserData = localStorage.getItem('record')\n  let mainRes = JSON.parse(localUserData)\n  let userId = mainRes?.user?._id\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      const res = await postFetchData(\n        `${apiUrl}/user/register/record/adduser/${userId}`,\n        employeData,\n      )\n      console.log('response', res)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    setEmployeData((prevRole) => ({\n      ...prevRole,\n      users: employee,\n    }))\n  }, [employee])\n  // let value = localStorage.getItem('record')\n  // value = JSON.parse(value)\n  // let id = value.user._id\n  // //console.log(id)\n\n  // const saveData = async () => {\n  //   try {\n  //     if (!user_email || !user_name || !roll) {\n  //       return\n  //     }\n\n  //     const data = {\n  //       user_email,\n  //       user_name,\n  //       roll,\n  //     }\n\n  //     const response = await fetch(`${apiUrl}/user/register/record/adduser/${id}`, {\n  //       method: 'post',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(data),\n  //     })\n\n  //     const result = await response.json()\n  //     //console.log(result)\n  //     setUserEmail('')\n  //     setUserName('')\n  //     setRoll('')\n  //     handleCloseInviteUserModal()\n  //     // window.location.reload()\n  //   } catch (error) {\n  //     //console.error('Error:', error)\n  //     alert('An error occurred. Please try again later.')\n  //   }\n  // }\n\n  // const getDetails = async () => {\n  //   try {\n  //     const result = await fetch(`${apiUrl}/user/register/record/${id}`)\n  //     const data = await result.json()\n  //     setRecord(data)\n  //     getDetails()\n  //   } catch (error) {\n  //     //console.error('Error fetching customer record:', error)\n  //   }\n  // }\n\n  // let creation = record.user_creation\n  // let data\n  // if (Array.isArray(creation)) {\n  //   data = creation.map((item) => {\n  //     console.log(item.users)\n  //     return item.users\n  //   })\n\n  //   console.log(data)\n  // } else {\n  //   console.log('record.user_creation is not an array or is undefined')\n  // }\n  // console.log(data)\n\n  // useEffect(() => {\n  //   getDetails()\n  //   handleTabClick('nav-benutzer')\n  // }, [])\n\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: '_id',\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: 'NAME',\n      dataIndex: 'user_name',\n    },\n    {\n      title: 'E-Mail Adresse',\n      dataIndex: 'user_email', // Change 'email address' to 'emailAddress'\n    },\n    {\n      title: 'Super Verwalter',\n      dataIndex: 'superVerwalter', // Change 'super verwalter' to 'superVerwalter'\n    },\n    {\n      title: 'AKTION',\n      dataIndex: 'action',\n      render: () => (\n        <>\n          <GrEdit />\n          &nbsp; Bearbeiten &nbsp;&nbsp;&nbsp;\n          <MdDelete />\n          Löschen\n        </>\n      ),\n    },\n  ]\n\n  const data = [\n    {\n      _id: '1',\n      user_name: 'John Brown',\n      age: 32,\n      emailAddress: 'john@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:john@example.com', // Adjust to a valid email address\n      superVerwalter: 'Yes',\n      action: 'Edit', // Provide appropriate action value\n    },\n    {\n      _id: '2',\n      user_name: 'Jim Green',\n      age: 42,\n      emailAddress: 'jim@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:jim@example.com', // Adjust to a valid email address\n      superVerwalter: 'No',\n      action: 'Delete', // Provide appropriate action value\n    },\n    {\n      _id: '3',\n      user_name: 'Joe Black',\n      age: 32,\n      emailAddress: 'joe@example.com', // Adjust to a valid email address\n      emailAddress: 'mailto:joe@example.com', // Adjust to a valid email address\n      superVerwalter: 'Yes',\n      action: 'View', // Provide appropriate action value\n    },\n  ]\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n    },\n    getCheckboxProps: (record) => ({\n      disabled: record.name === 'Disabled User',\n      name: record.name,\n    }),\n  }\n\n  const getRole = async () => {\n    try {\n      const res = await getFetch(`${apiUrl}/role/get_role`)\n      setRoleList(res?.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  let localData = localStorage.getItem('updateFunc')\n  useEffect(() => {\n    getRole()\n  }, [localData])\n\n  return (\n    <>\n      <div className=\"topBtnBox\">\n        <div className=\"\">\n          <button\n            className=\"btn btn\"\n            onClick={handleShowInviteUserModal}\n            style={{ background: '#0b5995', color: 'white' }}\n          >\n            <MdAdd />\n            &nbsp; Benutzer erstellen\n          </button>\n          <Modal size=\"lg\" show={showInviteUserModal} onHide={handleCloseInviteUserModal} centered>\n            <Modal.Header closeButton>\n              <Modal.Title> Benutzer einladen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"row\" style={{ background: 'white' }}>\n                <div className=\"col-sm-12\">\n                  <nav>\n                    <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                      <button\n                        className={`nav-link ${activeTab === 'nav-benutzer' ? 'active' : ''}`}\n                        id=\"nav-benutzer-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-selected={activeTab === 'nav-benutzer'}\n                        onClick={() => handleTabClick('nav-benutzer')}\n                        style={{ marginRight: '10px', marginLeft: '20px' }}\n                      >\n                        Benutzer\n                      </button>\n                      <button\n                        className={`nav-link ${activeTab === 'nav-rollen' ? 'active' : ''}`}\n                        id=\"nav-rollen-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-rollen\"\n                        aria-selected={activeTab === 'nav-rollen'}\n                        onClick={() => handleTabClick('nav-rollen')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Passwort\n                      </button>\n                      <button\n                        className={`nav-link ${activeTab === 'nav-lokalisierung' ? 'active' : ''}`}\n                        id=\"nav-lokalisierung-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-lokalisierung\"\n                        aria-selected={activeTab === 'nav-lokalisierung'}\n                        onClick={() => handleTabClick('nav-lokalisierung')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Lokalisierung\n                      </button>\n                      <button\n                        className={`nav-link ${\n                          activeTab === 'nav-benachrichtigungen' ? 'active' : ''\n                        }`}\n                        id=\"nav-benachrichtigungen-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-benachrichtigungen\"\n                        aria-selected={activeTab === 'nav-benachrichtigungen'}\n                        onClick={() => handleTabClick('nav-benachrichtigungen')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Benachrichtigungen\n                      </button>\n                      <button\n                        className={`nav-link ${\n                          activeTab === 'nav-fortgeschrittene' ? 'active' : ''\n                        }`}\n                        id=\"nav-fortgeschrittene-tab\"\n                        data-bs-toggle=\"tab\"\n                        role=\"tab\"\n                        aria-controls=\"nav-fortgeschrittene\"\n                        aria-selected={activeTab === 'nav-fortgeschrittene'}\n                        onClick={() => handleTabClick('nav-fortgeschrittene')}\n                        style={{ marginRight: '10px' }}\n                      >\n                        Fortgeschrittene\n                      </button>\n                    </div>\n                  </nav>\n                </div>\n              </div>\n              <br />\n              <div className=\"tab-content\" id=\"nav-tabContent\">\n                <div\n                  className={`tab-pane fade ${activeTab === 'nav-benutzer' ? 'show active' : ''}`}\n                  id=\"nav-benutzer\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-benutzer-tab\"\n                >\n                  <div className=\"row\">\n                    {/* <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        type=\"text\"\n                        name=\"user_name\"\n                        value={user_name}\n                        onChange={(e) => {\n                          setUserName(e.target.value)\n                        }}\n                      />\n                    </div> */}\n                    <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        type=\"text\"\n                        name=\"f_name\"\n                        value={employee.f_name}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Straße mit Hausnummer\"\n                        type=\"text\"\n                        name=\"street\"\n                        value={employee.street}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Stadt\"\n                        type=\"text\"\n                        name=\"city\"\n                        value={employee.city}\n                        onChange={handleChange}\n                      />\n\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Standort\"\n                        type=\"text\"\n                        name=\"location\"\n                        value={employee.location}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <select\n                        className=\"form-control\"\n                        // type=\"text\"\n                        name=\"role\"\n                        value={employee.role}\n                        onChange={handleChange}\n                      >\n                        <option value=\"\">Select Role</option>\n                        {roleList?.map((value) => {\n                          const { role_name, _id } = value\n\n                          return (\n                            <option key={_id} value={_id}>\n                              {role_name}\n                            </option>\n                          )\n                        })}\n                      </select>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Vorname\"\n                        type=\"text\"\n                        name=\"l_name\"\n                        value={employee.l_name}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"PLZ\"\n                        name=\"plz\"\n                        value={employee.plz}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"E-Mail Adresse\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={employee.email}\n                        onChange={handleChange}\n                      />\n                      <br />\n\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Telefon\"\n                        maxLength={10}\n                        minLength={2}\n                        type=\"phone\"\n                        name=\"tel\"\n                        value={employee.tel}\n                        onChange={handleChange}\n                      />\n                      <br />\n                      <input\n                        className=\"form-control\"\n                        placeholder=\"Mobil\"\n                        maxLength={10}\n                        minLength={2}\n                        type=\"phone\"\n                        name=\"mob\"\n                        value={employee.mob}\n                        onChange={handleChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className={`tab-pane fade ${activeTab === 'nav-rollen' ? 'show active' : ''}`}\n                  id=\"nav-rollen\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-rollen-tab\"\n                ></div>\n                <div\n                  className={`tab-pane fade ${\n                    activeTab === 'nav-mannschaften' ? 'show active' : ''\n                  }`}\n                  id=\"nav-mannschaften\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"nav-mannschaften-tab\"\n                ></div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-12\">\n                  <div style={{ float: 'right' }}>\n                    <button\n                      className=\"btn\"\n                      onClick={handleClose}\n                      style={{ background: '#d04545', color: 'white' }}\n                    >\n                      Abbrechen\n                    </button>\n                    &nbsp;&nbsp;\n                    <button\n                      className=\"btn mx-2\"\n                      onClick={handleSubmit}\n                      style={{ background: '#0b5995', color: 'white' }}\n                    >\n                      Speichern\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Modal.Footer>\n          </Modal>\n          &nbsp; &nbsp;\n          <input\n            type=\"search\"\n            id=\"form1\"\n            placeholder=\"Suche\"\n            className=\"form-control boxSearchBtn\"\n          />\n          &nbsp; &nbsp;\n          <button type=\"button\" className=\"btn btn text-light\" style={{ background: '#0b5995' }}>\n            <AiFillSetting />\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <Table\n          rowSelection={{\n            type: selectionType,\n            ...rowSelection,\n          }}\n          style={{ overflowX: 'auto' }}\n          columns={columns}\n          dataSource={data}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(CreateUser)\n"],"names":["getFetch","async","axios","method","url","concat","headers","error","console","log","postFetchUser","data","response","postFetchContent","post","putFetch","status","putFetchData","_error$response3","deleteFetch","id","_error$response4","postFetchData","_error$response5","CreateUser","_mainRes$user","record","setRecord","useState","user_email","setUserEmail","apiUrl","process","user_name","setUserName","roll","setRoll","selectionType","setSelectionType","showInviteUserModal","setShowInviteUserModal","show","setShow","activeTab","setActiveTab","roleList","setRoleList","roleId","setRoleId","employee","setEmployee","f_name","l_name","street","plz","city","email","location","tel","mob","role","employeData","setEmployeData","users","password","localization","advanced","notification","handleTabClick","tabId","handleChange","e","name","value","target","localUserData","localStorage","getItem","mainRes","JSON","parse","userId","user","_id","useEffect","prevRole","columns","title","dataIndex","render","text","_jsx","children","_jsxs","_Fragment","GrEdit","MdDelete","localData","res","getRole","className","onClick","handleShowInviteUserModal","style","background","color","MdAdd","Modal","size","onHide","handleCloseInviteUserModal","centered","Header","closeButton","Title","Body","marginRight","marginLeft","placeholder","type","onChange","map","role_name","maxLength","minLength","Footer","float","handleClose","preventDefault","AiFillSetting","Table","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","overflowX","dataSource","age","emailAddress","superVerwalter","action","React"],"sourceRoot":""}