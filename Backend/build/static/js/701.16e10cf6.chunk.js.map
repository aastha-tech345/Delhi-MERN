{"version":3,"file":"static/js/701.16e10cf6.chunk.js","mappings":"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","sources":["../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","views/pages/register/Register.js","../node_modules/@coreui/icons/src/free/cil-user.ts"],"sourcesContent":["export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { useNavigate } from 'react-router-dom'\n\nconst Register = () => {\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [role, setRole] = useState('')\n  const apiUrl = process.env.REACT_APP_API_URL\n  const navigate = useNavigate()\n\n  const addUser = async () => {\n    if (!username || !password || !email || !role) {\n      return\n    }\n\n    try {\n      let response = await fetch(`${apiUrl}/user/register`, {\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password, email, role }),\n      })\n      let result = await response.json()\n      window.localStorage.setItem('student', JSON.stringify(result))\n      navigate('/')\n    } catch (error) {\n      console.error('Error:', error)\n      alert('An error occurred. Please try again later.')\n    }\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-medium-emphasis\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Username\"\n                      value={username}\n                      onChange={(e) => {\n                        setUsername(e.target.value)\n                      }}\n                      autoComplete=\"username\"\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email\"\n                      value={email}\n                      onChange={(e) => {\n                        setEmail(e.target.value)\n                      }}\n                      autoComplete=\"email\"\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      value={password}\n                      onChange={(e) => {\n                        setPassword(e.target.value)\n                      }}\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <select\n                      className=\"form-control\"\n                      value={role}\n                      onChange={(e) => {\n                        setRole(e.target.value)\n                      }}\n                    >\n                      <option>--select--</option>\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"user\">User</option>\n                      <option value=\"customer\">Customer</option>\n                    </select>\n                  </CInputGroup>\n                  <div className=\"d-grid\">\n                    <CButton color=\"success\" onClick={addUser}>\n                      Create Account\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default React.memo(Register)\n// import React, { useState } from 'react'\n// import {\n//   CButton,\n//   CCard,\n//   CCardBody,\n//   CCol,\n//   CContainer,\n//   CForm,\n//   CFormInput,\n//   CInputGroup,\n//   CInputGroupText,\n//   CRow,\n// } from '@coreui/react'\n// import CIcon from '@coreui/icons-react'\n// import { cilLockLocked, cilUser } from '@coreui/icons'\n// import { useNavigate } from 'react-router-dom'\n\n// const Register = () => {\n//   const [username, setUsername] = useState('')\n//   const [email, setEmail] = useState('')\n//   const [password, setPassword] = useState('')\n//   const [role, setRole] = useState('')\n//   const apiUrl = process.env.REACT_APP_API_URL\n//   const navigate = useNavigate()\n\n//   const addUser = async () => {\n//     if (!username || !password || !email || !role) {\n//       return\n//     }\n\n//     try {\n//       let response = await fetch(`${apiUrl}/user/register`, {\n//         method: 'post',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ username, password, email, role }),\n//       })\n//       let result = await response.json()\n//       window.localStorage.setItem('student', JSON.stringify(result))\n//       navigate('/login')\n//     } catch (error) {\n//       console.error('Error:', error)\n//       alert('An error occurred. Please try again later.')\n//     }\n//   }\n//   return (\n//     <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n//       <CContainer>\n//         <CRow className=\"justify-content-center\">\n//           <CCol md={9} lg={7} xl={6}>\n//             <CCard className=\"mx-4\">\n//               <CCardBody className=\"p-4\">\n//                 <CForm>\n//                   <h1>Register</h1>\n//                   <p className=\"text-medium-emphasis\">Create your account</p>\n//                   <CInputGroup className=\"mb-3\">\n//                     <CInputGroupText>\n//                       <CIcon icon={cilUser} />\n//                     </CInputGroupText>\n//                     <CFormInput\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => {\n//                         setUsername(e.target.value)\n//                       }}\n//                       autoComplete=\"username\"\n//                     />\n//                   </CInputGroup>\n//                   <CInputGroup className=\"mb-3\">\n//                     <CInputGroupText>@</CInputGroupText>\n//                     <CFormInput\n//                       placeholder=\"Email\"\n//                       value={email}\n//                       onChange={(e) => {\n//                         setEmail(e.target.value)\n//                       }}\n//                       autoComplete=\"email\"\n//                     />\n//                   </CInputGroup>\n//                   <CInputGroup className=\"mb-3\">\n//                     <CInputGroupText>\n//                       <CIcon icon={cilLockLocked} />\n//                     </CInputGroupText>\n//                     <CFormInput\n//                       value={password}\n//                       onChange={(e) => {\n//                         setPassword(e.target.value)\n//                       }}\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       autoComplete=\"new-password\"\n//                     />\n//                   </CInputGroup>\n//                   <CInputGroup className=\"mb-4\">\n//                     <CInputGroupText>\n//                       <CIcon icon={cilLockLocked} />\n//                     </CInputGroupText>\n//                     <select\n//                       className=\"form-control\"\n//                       value={role}\n//                       onChange={(e) => {\n//                         setRole(e.target.value)\n//                       }}\n//                     >\n//                       <option>--select--</option>\n//                       <option value=\"customer\">Customer</option>\n//                       <option value=\"empolyee\">Empolyee</option>\n//                     </select>\n//                   </CInputGroup>\n//                   <div className=\"d-grid\">\n//                     <CButton color=\"success\" onClick={addUser}>\n//                       Create Account\n//                     </CButton>\n//                   </div>\n//                 </CForm>\n//               </CCardBody>\n//             </CCard>\n//           </CCol>\n//         </CRow>\n//       </CContainer>\n//     </div>\n//   )\n// }\n\n// export default Register\n\n// // import React, { useState } from 'react'\n// // import Button from 'react-bootstrap/Button'\n// // import Col from 'react-bootstrap/Col'\n// // import Form from 'react-bootstrap/Form'\n// // import InputGroup from 'react-bootstrap/InputGroup'\n// // import Row from 'react-bootstrap/Row'\n\n// // function Register() {\n// //   const [validated, setValidated] = useState(false)\n\n// //   const handleSubmit = (event) => {\n// //     const form = event.currentTarget\n// //     if (form.checkValidity() === false) {\n// //       event.preventDefault()\n// //       event.stopPropagation()\n// //     }\n\n// //     setValidated(true)\n// //   }\n\n// //   return (\n// //     <Form noValidate validated={validated} onSubmit={handleSubmit}>\n// //       <Row className=\"mb-3\">\n// //         <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n// //           <Form.Label>First name</Form.Label>\n// //           <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\n// //         </Form.Group>\n// //         <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n// //           <Form.Label>Last name</Form.Label>\n// //           <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\n// //         </Form.Group>\n// //         <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n// //           <Form.Label>Username</Form.Label>\n// //           <InputGroup hasValidation>\n// //             <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n// //             <Form.Control\n// //               type=\"text\"\n// //               placeholder=\"Username\"\n// //               aria-describedby=\"inputGroupPrepend\"\n// //               required\n// //             />\n// //           </InputGroup>\n// //         </Form.Group>\n// //       </Row>\n// //       {/* <Row className=\"mb-3\">\n// //         <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n// //           <Form.Label>City</Form.Label>\n// //           <Form.Control type=\"text\" placeholder=\"City\" required />\n// //         </Form.Group>\n// //         <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n// //           <Form.Label>State</Form.Label>\n// //           <Form.Control type=\"text\" placeholder=\"State\" required />\n// //         </Form.Group>\n// //         <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n// //           <Form.Label>Zip</Form.Label>\n// //           <Form.Control type=\"password\" placeholder=\"Zip\" required />\n// //         </Form.Group>\n// //       </Row> */}\n// //       {/* <Form.Group className=\"mb-3\">\n// //         <Form.Check required label=\"Agree to terms and conditions\" feedbackType=\"invalid\" />\n// //       </Form.Group> */}\n// //       <Button type=\"submit\">Submit form</Button>\n// //     </Form>\n// //   )\n// // }\n\n// // export default Register\n","export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n"],"names":["cilLockLocked","Register","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","role","setRole","navigate","useNavigate","addUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","abrupt","fetch","concat","process","method","headers","body","JSON","stringify","sent","json","window","localStorage","setItem","t0","console","error","alert","stop","apply","arguments","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","CCardBody","_jsxs","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","value","onChange","e","target","autoComplete","type","CButton","color","onClick","React"],"sourceRoot":""}