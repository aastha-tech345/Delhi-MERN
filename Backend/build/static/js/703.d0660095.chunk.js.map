{"version":3,"file":"static/js/703.d0660095.chunk.js","mappings":"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","sources":["views/customer/Date.jsx","views/customer/bills/Bills.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function DatePicker({ onChange, value, placeholder }) {\n  const [inputValue, setInputValue] = useState('')\n\n  useEffect(() => {\n    if (value instanceof Date && !isNaN(value.getTime())) {\n      setInputValue(formatDate(value))\n    } else {\n      setInputValue('')\n    }\n  }, [value])\n\n  const handleInputChange = (e) => {\n    let inputValue = e.target?.value\n    let formattedValue = ''\n\n    inputValue = inputValue?.replace(/\\D/g, '')\n\n    for (let i = 0; i < inputValue?.length; i++) {\n      if (i === 2 || i === 4) {\n        formattedValue += '.'\n      }\n      formattedValue += inputValue[i]\n    }\n\n    setInputValue(formattedValue)\n  }\n\n  const handleDateChange = (e) => {\n    const parts = inputValue?.split('.')?.map((part) => parseInt(part, 10))\n    let [day, month, year] = parts\n    if (parts?.length === 3) {\n      if (year < 100) {\n        year += 1900\n      } else if (year >= 2000 && year <= new Date().getFullYear()) {\n      } else {\n        year = new Date().getFullYear()\n      }\n\n      const newDate = new Date(year, month - 1, day)\n      onChange(newDate)\n    } else if (parts?.length === 1) {\n      const year = parts[0]\n      if (year < 100) {\n        let fullYear\n        if (year < 50) {\n          fullYear = year + 2000\n        } else {\n          fullYear = year + 1900\n        }\n        const newDate = new Date(fullYear, 0, 1)\n        onChange(newDate)\n      }\n    }\n  }\n\n  const formatDate = (date) => {\n    const day = date?.getDate()?.toString()?.padStart(2, '0')\n    const month = (date?.getMonth() + 1)?.toString()?.padStart(2, '0')\n    const year = date?.getFullYear()?.toString()\n    return `${day}.${month}.${year}`\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onChange={handleInputChange}\n        onBlur={handleDateChange}\n        value={inputValue}\n        placeholder={placeholder}\n        className=\"form-control\"\n      />\n    </div>\n  )\n}\n\nDatePicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.instanceOf(Date).isRequired,\n  placeholder: PropTypes.string.isRequired,\n}\n","import React, { useEffect, useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Customer from '../Customer'\nimport { useNavigate } from 'react-router-dom'\nimport Select from 'react-select'\nimport DatePiker from '../Date'\n\nconst Bills = () => {\n  const [recordData, setRecordData] = useState([])\n  let res = localStorage.getItem('customerRecord')\n  let resultt = JSON.parse(res)\n  // console.log('first', resultt?._id)\n  // console.log('invoice', recordData?.colleague)\n  const navigate = useNavigate()\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [employeeData, setEmployeeData] = useState([])\n  const [customerInfo, setCustomerInfo] = useState([])\n  const [colleague, setColleague] = useState(recordData?.colleague)\n  const [invoiceDate, setInvoiceDate] = useState(recordData?.invoiceDate)\n  const [deliveryDate, setDeliveryDate] = useState(recordData?.deliveryDate)\n  const [product, setProduct] = useState(recordData?.product)\n  const [paymentMethod, setPaymentMethod] = useState(recordData?.paymentMethod)\n  const [invoiceAmount, setInvoiceAmount] = useState(recordData?.invoiceAmount)\n  let paidData = customerInfo?.customerDelivery?.alreadyPaid\n  // console.log('paidData', paidData)\n  const [alreadyPaid, setAlreadyPaid] = useState(paidData)\n  const invoiceChange = (e) => {\n    setInvoiceDate(e)\n  }\n\n  const deliveryDateChange = (date) => {\n    setDeliveryDate(date)\n  }\n\n  const cancelData = () => {\n    localStorage.removeItem('customerRecord')\n    navigate('/customer/customer_info')\n  }\n  const alreadypaidChange = (e) => {\n    setAlreadyPaid(e.target.checked)\n  }\n\n  const saveData = async () => {\n    try {\n      const data = {\n        product,\n        alreadyPaid,\n        paymentMethod,\n        invoiceAmount,\n        invoiceDate,\n        deliveryDate,\n        employeeData,\n        colleague,\n        customer_id: resultt?._id,\n      }\n\n      const response = await fetch(`${apiUrl}/invoice/get_invoice/${resultt?._id}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`)\n      }\n\n      toast.success('Rechnungsdaten erfolgreich gespeichert')\n    } catch (error) {\n      toast.error('Bitte füllen Sie alle Angaben aus')\n      // console.error('Error during API call:', error)\n    }\n  }\n\n  const option = [\n    { value: 'payPal', label: 'PayPal' },\n    { value: 'barzahlung', label: 'Barzahlung' },\n    { value: 'rechnung', label: 'Rechnung' },\n    { value: 'klarna', label: 'Klarna' },\n    { value: 'kreditkarte', label: 'Kreditkarte (für die Zukunft)' },\n    { value: 'andere', label: 'Andere' },\n  ]\n\n  const optionData = [\n    { value: 'HVD-PV', label: 'HVD-PV' },\n    { value: 'Vortrag', label: 'Vortrag' },\n    { value: 'SPV', label: 'SPV' },\n    { value: 'OPV', label: 'OPV' },\n  ]\n\n  const getEmployeeData = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/user/get/employeeData`)\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`)\n      }\n      const { data } = await response.json()\n      setEmployeeData(data)\n    } catch (error) {\n      console.error('Error fetching employee data:', error)\n    }\n  }\n  const getCustomerInfo = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/customer/get_record/${resultt._id}`)\n\n      const data = await response.json()\n      // console.log('data', data)\n      setCustomerInfo(data)\n    } catch (error) {\n      console.error('Error fetching employee data:', error)\n    }\n  }\n\n  const getRecord = async () => {\n    try {\n      const result = await fetch(`${apiUrl}/invoice/get_invoice/${resultt._id}`)\n      const data = await result.json()\n      setRecordData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  // console.log('recorddata', recordData)\n  // console.log('first', customerInfo?.customerDelivery?.alreadyPaid)\n  useEffect(() => {\n    getRecord()\n    getCustomerInfo()\n    getEmployeeData()\n    setAlreadyPaid(paidData)\n  }, [paidData])\n\n  useEffect(() => {\n    setColleague(recordData?.colleague)\n    setInvoiceDate(recordData?.invoiceDate)\n    setDeliveryDate(recordData?.deliveryDate)\n    setProduct(recordData?.product)\n    setPaymentMethod(recordData?.paymentMethod)\n    setInvoiceAmount(recordData?.invoiceAmount)\n  }, [recordData])\n\n  return (\n    <div className=\"inner-page-wrap\">\n      <div style={{ background: '#fff' }}>\n        <Customer />\n        <div className=\"tab-content\">\n          <div className=\"tab-title\">\n            <h4 className=\"mx-3\">Rechnung</h4>\n          </div>\n          <hr className=\"mx-3\" />\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"block-wrap\">\n                  {/* <h3>Rechnungstellung</h3> */}\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <div className=\"row\">\n                          <label htmlFor=\"product\" className=\"col-sm-4 col-form-label\">\n                            Transaktionsnr\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <input className=\"form-control\" disabled placeholder=\"Transaktionsnr\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <div className=\"row\">\n                          <label htmlFor=\"product\" className=\"col-sm-4 col-form-label\">\n                            Zahlungseingang\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <input\n                              className=\"form-control\"\n                              disabled\n                              placeholder=\"Zahlungseingang\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <div className=\"row mb-3\">\n                          <label htmlFor=\"product\" className=\"col-sm-4 col-form-label\">\n                            Produkt\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <Select\n                              className=\"w-100\"\n                              options={optionData}\n                              onChange={(selectedOption) => setProduct(selectedOption?.value || '')}\n                              value={optionData.find((opt) => opt.value === product)}\n                              name=\"product\"\n                              placeholder=\"HVD-PV\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <label htmlFor=\"invoiceAmount\" className=\"col-sm-4 col-form-label\">\n                            Rechnungsbetrag eintragen\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <input\n                              type=\"text\"\n                              placeholder=\"Rechnungsbetrag eintragen\"\n                              className=\"form-control\"\n                              name=\"invoiceAmount\"\n                              value={invoiceAmount}\n                              onChange={(e) => {\n                                const value = e.target.value\n                                const sanitizedValue = value.replace(/\\D/g, '')\n                                setInvoiceAmount(sanitizedValue)\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"mb-6 row\">\n                          <label htmlFor=\"invoiceDate\" className=\"col-sm-4 col-form-label\">\n                            Rechnungsdatum\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <DatePiker\n                              className=\"form-control\"\n                              selected={invoiceDate}\n                              onChange={invoiceChange}\n                              placeholderText={'Rechnungsdatum'}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"mb-6 row\">\n                          <label htmlFor=\"colleague\" className=\"col-sm-4 col-form-label\">\n                            MitarbeiterInnen\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <Select\n                              className=\"w-100\"\n                              placeholder=\"MitarbeiterInnen\"\n                              options={\n                                employeeData?.map((elem) => ({\n                                  value: elem.username,\n                                  label: elem.username,\n                                })) || []\n                              }\n                              onChange={(selectedOption) =>\n                                setColleague(selectedOption?.value || '')\n                              }\n                              value={{\n                                value: colleague || 'MitarbeiterInnen',\n                                label: colleague || 'MitarbeiterInnen',\n                              }}\n                              name=\"colleague\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        {/* <div className=\"mb-6 row\">\n                          <label htmlFor=\"alreadyPaid\" className=\"col-sm-4 col-form-label\">\n                            Bereits bezahlt\n                          </label>\n                          <div className=\"col-sm-6 radio-check-wrap\">\n                            <input\n                              type=\"checkbox\"\n                              name=\"alreadyPaid\"\n                              checked={alreadyPaid}\n                              onChange={(e) => setAlreadyPaid(e.target.checked)}\n                            />\n                          </div>\n                        </div> */}\n                        <div className=\"mb-6 row\">\n                          <label htmlFor=\"alreadyPaid\" className=\"col-sm-4 mb-2 col-form-label\">\n                            Bereits bezahlt\n                          </label>\n                          <div className=\"col-sm-6 radio-check-wrap\">\n                            <input\n                              readOnly\n                              type=\"checkbox\"\n                              name=\"alreadyPaid\"\n                              checked={alreadyPaid}\n                              onChange={alreadypaidChange}\n                              onClick={(e) => e.stopPropagation()}\n                            />\n                            <span></span>\n                          </div>\n                        </div>\n                        <div className=\"row mb-3\">\n                          <label htmlFor=\"paymentMethod\" className=\"col-sm-4 col-form-label\">\n                            Zahlungsart\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <Select\n                              className=\"w-100\"\n                              options={option}\n                              onChange={(selectedOption) =>\n                                setPaymentMethod(selectedOption?.value || '')\n                              }\n                              value={option.find((opt) => opt.value === paymentMethod)}\n                              name=\"paymentMethod\"\n                              placeholder=\"Barzahlung\"\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\"row\">\n                          <label htmlFor=\"deliveryDate\" className=\"col-sm-4 col-form-label\">\n                            Lieferdatum\n                          </label>\n                          <div className=\"col-sm-6\">\n                            <DatePiker\n                              className=\"form-control\"\n                              selected={deliveryDate}\n                              onChange={deliveryDateChange}\n                              placeholderText={'Lieferdatum'}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"text-end mx-3\">\n            <button\n              type=\"button\"\n              onClick={cancelData}\n              className=\"btn btn\"\n              style={{ background: '#d04545', color: 'white' }}\n            >\n              Abbrechen\n            </button>\n            &nbsp; &nbsp;\n            <button\n              onClick={saveData}\n              type=\"button\"\n              style={{ background: '#0b5995', color: 'white' }}\n              className=\"btn btn\"\n            >\n              Speichern\n            </button>\n          </div>\n          <br />\n          <ToastContainer />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Bills)\n"],"names":["DatePicker","_ref","onChange","value","placeholder","inputValue","setInputValue","useState","useEffect","Date","isNaN","getTime","formatDate","date","_date$getDate","_date$getDate$toStrin","_ref2","_ref2$toString","_date$getFullYear","day","getDate","toString","padStart","month","getMonth","year","getFullYear","concat","_jsx","children","type","e","_e$target","_inputValue","target","formattedValue","replace","i","_inputValue2","length","onBlur","_inputValue$split","parts","split","map","part","parseInt","newDate","fullYear","className","Bills","_customerInfo$custome","recordData","setRecordData","res","localStorage","getItem","resultt","JSON","parse","navigate","useNavigate","apiUrl","process","employeeData","setEmployeeData","customerInfo","setCustomerInfo","colleague","setColleague","invoiceDate","setInvoiceDate","deliveryDate","setDeliveryDate","product","setProduct","paymentMethod","setPaymentMethod","invoiceAmount","setInvoiceAmount","paidData","customerDelivery","alreadyPaid","setAlreadyPaid","option","label","optionData","async","result","fetch","_id","data","json","error","console","getRecord","response","getCustomerInfo","ok","Error","status","getEmployeeData","_jsxs","style","background","Customer","htmlFor","disabled","Select","options","selectedOption","find","opt","name","sanitizedValue","DatePiker","selected","placeholderText","elem","username","readOnly","checked","onClick","stopPropagation","cancelData","removeItem","color","customer_id","method","headers","body","stringify","toast","success","ToastContainer","React"],"sourceRoot":""}