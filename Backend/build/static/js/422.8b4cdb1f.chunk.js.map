{"version":3,"file":"static/js/422.8b4cdb1f.chunk.js","mappings":"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","sources":["views/customer/task/Tasks.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Table } from 'antd'\nimport { BiFilterAlt, BiErrorCircle } from 'react-icons/bi'\nimport { MdAdd, MdDelete } from 'react-icons/md'\nimport { GrEdit } from 'react-icons/gr'\nimport Modal from 'react-bootstrap/Modal'\nconst columns = [\n  {\n    title: 'TITLE',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Datum des Beginns',\n    dataIndex: 'start_date',\n  },\n  {\n    title: 'Deadline',\n    dataIndex: 'deadline',\n  },\n  {\n    title: 'Zugewiesen an',\n    dataIndex: 'assigned_to',\n  },\n  {\n    title: 'Mitarbeiter',\n    dataIndex: 'employee',\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n  },\n  {\n    title: 'AKTION',\n    dataIndex: 'action',\n    render: () => (\n      <>\n        <GrEdit />\n        &nbsp; Bearbeiten &nbsp;&nbsp;&nbsp;\n        <MdDelete />\n        Löschen\n      </>\n    ),\n  },\n]\n\nconst data = []\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i.toString(),\n    name: `Edward King ${i}`,\n    start_date: '2023-01-01',\n    deadline: '2023-01-31',\n    assigned_to: `User ${i}`,\n    employee: `Employee ${i}`,\n    status: 'In Progress',\n    action: 'View',\n  })\n}\n\nconst Tasks = () => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [show, setShow] = useState(false)\n  // eslint-disable-next-line no-undef\n  const handleClose = () => setShow(false)\n  // eslint-disable-next-line no-undef\n  const handleShow = () => setShow(true)\n  const [title, setTitle] = useState()\n  const [description, setDescription] = useState()\n  const [recurring, setRecurring] = useState()\n  const [phone, setPhone] = useState()\n  const [assigned_to, setAssignedTo] = useState()\n  const [employee, setEmployee] = useState()\n  const [statu, setStatu] = useState()\n  const [priority, setPriority] = useState()\n  const [start_date, setStartDate] = useState()\n  const [deadline, setDeadline] = useState()\n\n  const start = () => {\n    setLoading(true)\n    setTimeout(() => {\n      setSelectedRowKeys([])\n      setLoading(false)\n    }, 1000)\n  }\n  const onSelectChange = (newSelectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys)\n    setSelectedRowKeys(newSelectedRowKeys)\n  }\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n  }\n  const hasSelected = selectedRowKeys.length > 0\n\n  const saveData = () => {\n    let data = {\n      title,\n      description,\n      deadline,\n      statu,\n      start_date,\n      assigned_to,\n      recurring,\n      priority,\n      phone,\n      employee,\n    }\n    console.log(data)\n  }\n  return (\n    <div>\n      <div className=\"row m-4 p-4  shadow\">\n        <div className=\"col-sm-3\">\n          <input\n            type=\"search\"\n            id=\"form1\"\n            placeholder=\"Ihre Suche eingeben\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-sm-5\">\n          <button className=\"btn btn text-light\" style={{ background: '#0b5995' }}>\n            {/* <i className=\"fas fa-search\">Filter</i> */}\n            <BiFilterAlt />\n            &nbsp; Filter\n          </button>\n        </div>\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn\"\n            style={{ background: '#0b5995', color: 'white' }}\n            onClick={handleShow}\n          >\n            <MdAdd />\n            &nbsp;Neuen Kunden anlegen\n            {/* Create new customer */}\n          </button>\n          <Modal show={show} onHide={handleClose} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Aufgabe hinzufügen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"row p-3\">\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Titel\n                    {/* first name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      type=\"text\"\n                      value={title}\n                      onChange={(e) => {\n                        setTitle(e.target.value)\n                      }}\n                      placeholder=\"jo\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Description\n                    {/* second name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <textarea\n                      name=\"\"\n                      value={description}\n                      onChange={(e) => {\n                        setDescription(e.target.value)\n                      }}\n                      className=\"form-control\"\n                    ></textarea>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Punkte\n                    {/* phone */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <select\n                      className=\"form-control\"\n                      value={phone}\n                      onChange={(e) => {\n                        setPhone(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"Punkte\">Punkte</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Zuordnen zu\n                    {/* phone */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <select\n                      className=\"form-control\"\n                      value={assigned_to}\n                      onChange={(e) => {\n                        setAssignedTo(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"Russell Crowe\">Russell Crowe</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Mitarbeiter\n                    {/* first name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      type=\"text\"\n                      value={employee}\n                      onChange={(e) => {\n                        setEmployee(e.target.value)\n                      }}\n                      placeholder=\"jo\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Status\n                    {/* phone */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <select\n                      className=\"form-control\"\n                      value={statu}\n                      onChange={(e) => {\n                        setStatu(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"Zu tun\">Zu tun</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Priorität\n                    {/* phone */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <select\n                      className=\"form-control\"\n                      value={priority}\n                      onChange={(e) => {\n                        setPriority(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"priority\">priority</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Start date\n                    {/* first name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      type=\"date\"\n                      value={start_date}\n                      onChange={(e) => {\n                        setStartDate(e.target.value)\n                      }}\n                      placeholder=\"jo\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <label htmlFor=\"inputPassword\" className=\"col-sm-3 col-form-label\">\n                    Deadline\n                    {/* first name */}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      type=\"date\"\n                      value={deadline}\n                      onChange={(e) => {\n                        setDeadline(e.target.value)\n                      }}\n                      placeholder=\"jo\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-2 row\">\n                  <div className=\"col-sm-9\">\n                    Wiederkehrende &nbsp;\n                    <input\n                      type=\"checkbox\"\n                      name=\"gender\"\n                      value={recurring}\n                      onChange={(e) => {\n                        setRecurring(e.target.value)\n                      }}\n                    />{' '}\n                    {/* other */}\n                  </div>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                className=\"btn btn\"\n                onClick={handleClose}\n                style={{ background: '#d04545', color: 'white' }}\n              >\n                {' '}\n                Abbrechen\n              </button>\n              &nbsp; &nbsp;\n              <button\n                className=\"btn btn\"\n                onClick={saveData}\n                style={{ background: '#0b5995', color: 'white' }}\n              >\n                Aktivität hinzufügen\n                {/* Add activity */}\n              </button>\n            </Modal.Footer>\n          </Modal>{' '}\n        </div>\n      </div>\n\n      <div>\n        {/* <div\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          <Button type=\"primary\" onClick={start} disabled={!hasSelected} loading={loading}>\n            Reload\n          </Button>\n          <span\n            style={{\n              marginLeft: 8,\n            }}\n          >\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n        </div> */}\n        <Table\n          rowSelection={rowSelection}\n          style={{ overflowX: 'auto' }}\n          columns={columns}\n          dataSource={data}\n        />\n      </div>\n    </div>\n  )\n}\nexport default React.memo(Tasks)\n"],"names":["columns","title","dataIndex","render","_jsxs","_Fragment","children","_jsx","GrEdit","MdDelete","data","i","push","key","toString","name","concat","start_date","deadline","assigned_to","employee","status","action","Tasks","selectedRowKeys","setSelectedRowKeys","useState","loading","setLoading","error","setError","show","setShow","handleClose","setTitle","description","setDescription","recurring","setRecurring","phone","setPhone","setAssignedTo","setEmployee","statu","setStatu","priority","setPriority","setStartDate","setDeadline","rowSelection","onChange","newSelectedRowKeys","console","log","length","className","type","id","placeholder","style","background","BiFilterAlt","color","onClick","handleShow","MdAdd","Modal","onHide","centered","Header","closeButton","Title","Body","htmlFor","value","e","target","Footer","saveData","Table","overflowX","dataSource","React"],"sourceRoot":""}